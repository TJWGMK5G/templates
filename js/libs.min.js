var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.findInternal = function (m, u, n) {
  m instanceof String && (m = String(m));
  for (var t = m.length, h = 0; h < t; h++) {
    var l = m[h];
    if (u.call(n, l, h, m)) return { i: h, v: l };
  }
  return { i: -1, v: void 0 };
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties
    ? Object.defineProperty
    : function (m, u, n) {
        m != Array.prototype && m != Object.prototype && (m[u] = n.value);
      };
$jscomp.getGlobal = function (m) {
  return "undefined" != typeof window && window === m
    ? m
    : "undefined" != typeof global && null != global
    ? global
    : m;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function (m, u, n, t) {
  if (u) {
    n = $jscomp.global;
    m = m.split(".");
    for (t = 0; t < m.length - 1; t++) {
      var h = m[t];
      h in n || (n[h] = {});
      n = n[h];
    }
    m = m[m.length - 1];
    t = n[m];
    u = u(t);
    u != t &&
      null != u &&
      $jscomp.defineProperty(n, m, {
        configurable: !0,
        writable: !0,
        value: u,
      });
  }
};
$jscomp.polyfill(
  "Array.prototype.find",
  function (m) {
    return m
      ? m
      : function (m, n) {
          return $jscomp.findInternal(this, m, n).v;
        };
  },
  "es6",
  "es3"
);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.Symbol = (function () {
  var m = 0;
  return function (u) {
    return $jscomp.SYMBOL_PREFIX + (u || "") + m++;
  };
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var m = $jscomp.global.Symbol.iterator;
  m || (m = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
  "function" != typeof Array.prototype[m] &&
    $jscomp.defineProperty(Array.prototype, m, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.arrayIterator(this);
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.initSymbolAsyncIterator = function () {
  $jscomp.initSymbol();
  var m = $jscomp.global.Symbol.asyncIterator;
  m ||
    (m = $jscomp.global.Symbol.asyncIterator =
      $jscomp.global.Symbol("asyncIterator"));
  $jscomp.initSymbolAsyncIterator = function () {};
};
$jscomp.arrayIterator = function (m) {
  var u = 0;
  return $jscomp.iteratorPrototype(function () {
    return u < m.length ? { done: !1, value: m[u++] } : { done: !0 };
  });
};
$jscomp.iteratorPrototype = function (m) {
  $jscomp.initSymbolIterator();
  m = { next: m };
  m[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return m;
};
$jscomp.iteratorFromArray = function (m, u) {
  $jscomp.initSymbolIterator();
  m instanceof String && (m += "");
  var n = 0,
    t = {
      next: function () {
        if (n < m.length) {
          var h = n++;
          return { value: u(h, m[h]), done: !1 };
        }
        t.next = function () {
          return { done: !0, value: void 0 };
        };
        return t.next();
      },
    };
  t[Symbol.iterator] = function () {
    return t;
  };
  return t;
};
$jscomp.polyfill(
  "Array.prototype.values",
  function (m) {
    return m
      ? m
      : function () {
          return $jscomp.iteratorFromArray(this, function (m, n) {
            return n;
          });
        };
  },
  "es8",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.findIndex",
  function (m) {
    return m
      ? m
      : function (m, n) {
          return $jscomp.findInternal(this, m, n).i;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.fill",
  function (m) {
    return m
      ? m
      : function (m, n, t) {
          var h = this.length || 0;
          0 > n && (n = Math.max(0, h + n));
          if (null == t || t > h) t = h;
          t = Number(t);
          0 > t && (t = Math.max(0, h + t));
          for (n = Number(n || 0); n < t; n++) this[n] = m;
          return this;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.keys",
  function (m) {
    return m
      ? m
      : function () {
          return $jscomp.iteratorFromArray(this, function (m) {
            return m;
          });
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Number.EPSILON",
  function (m) {
    return Math.pow(2, -52);
  },
  "es6",
  "es3"
);
(function (m) {
  m.extend(m.fn, {
    livequery: function (u, n, t) {
      var h = this;
      m.isFunction(u) && ((t = n), (n = u), (u = void 0));
      m.each(m.livequery.queries, function (f, d) {
        if (
          !(
            h.selector != d.selector ||
            h.context != d.context ||
            u != d.type ||
            (n && n.$lqguid != d.fn.$lqguid) ||
            (t && t.$lqguid != d.fn2.$lqguid)
          )
        )
          return (l = d) && !1;
      });
      var l = l || new m.livequery(this.selector, this.context, u, n, t);
      l.stopped = !1;
      l.run();
      return this;
    },
    expire: function (u, n, t) {
      var h = this;
      m.isFunction(u) && ((t = n), (n = u), (u = void 0));
      m.each(m.livequery.queries, function (l, f) {
        h.selector != f.selector ||
          h.context != f.context ||
          (u && u != f.type) ||
          (n && n.$lqguid != f.fn.$lqguid) ||
          (t && t.$lqguid != f.fn2.$lqguid) ||
          this.stopped ||
          m.livequery.stop(f.id);
      });
      return this;
    },
  });
  m.livequery = function (u, n, t, h, l) {
    this.selector = u;
    this.context = n;
    this.type = t;
    this.fn = h;
    this.fn2 = l;
    this.elements = [];
    this.stopped = !1;
    this.id = m.livequery.queries.push(this) - 1;
    h.$lqguid = h.$lqguid || m.livequery.guid++;
    l && (l.$lqguid = l.$lqguid || m.livequery.guid++);
    return this;
  };
  m.livequery.prototype = {
    stop: function () {
      var m = this;
      this.type
        ? this.elements.unbind(this.type, this.fn)
        : this.fn2 &&
          this.elements.each(function (n, t) {
            m.fn2.apply(t);
          });
      this.elements = [];
      this.stopped = !0;
    },
    run: function () {
      if (!this.stopped) {
        var u = this,
          n = this.elements,
          t = m(this.selector, this.context),
          h = t.not(n);
        this.elements = t;
        this.type
          ? (h.bind(this.type, this.fn),
            0 < n.length &&
              m.each(n, function (h, f) {
                0 > m.inArray(f, t) && m.event.remove(f, u.type, u.fn);
              }))
          : (h.each(function () {
              u.fn.apply(this);
            }),
            this.fn2 &&
              0 < n.length &&
              m.each(n, function (h, f) {
                0 > m.inArray(f, t) && u.fn2.apply(f);
              }));
      }
    },
  };
  m.extend(m.livequery, {
    guid: 0,
    queries: [],
    queue: [],
    running: !1,
    timeout: null,
    checkQueue: function () {
      if (m.livequery.running && m.livequery.queue.length)
        for (var u = m.livequery.queue.length; u--; )
          m.livequery.queries[m.livequery.queue.shift()].run();
    },
    pause: function () {
      m.livequery.running = !1;
    },
    play: function () {
      m.livequery.running = !0;
      m.livequery.run();
    },
    registerPlugin: function () {
      m.each(arguments, function (u, n) {
        if (m.fn[n]) {
          var t = m.fn[n];
          m.fn[n] = function () {
            var h = t.apply(this, arguments);
            m.livequery.run();
            return h;
          };
        }
      });
    },
    run: function (u) {
      void 0 != u
        ? 0 > m.inArray(u, m.livequery.queue) && m.livequery.queue.push(u)
        : m.each(m.livequery.queries, function (n) {
            0 > m.inArray(n, m.livequery.queue) && m.livequery.queue.push(n);
          });
      m.livequery.timeout && clearTimeout(m.livequery.timeout);
      m.livequery.timeout = setTimeout(m.livequery.checkQueue, 20);
    },
    stop: function (u) {
      void 0 != u
        ? m.livequery.queries[u].stop()
        : m.each(m.livequery.queries, function (n) {
            m.livequery.queries[n].stop();
          });
    },
  });
  m.livequery.registerPlugin(
    "append",
    "prepend",
    "after",
    "before",
    "wrap",
    "attr",
    "removeAttr",
    "addClass",
    "removeClass",
    "toggleClass",
    "empty",
    "remove",
    "html"
  );
  m(function () {
    m.livequery.play();
  });
})(jQuery);
(function (m) {
  function u(n) {
    var h = n || window.event,
      l = [].slice.call(arguments, 1),
      f = 0,
      d = 0;
    n = m.event.fix(h);
    n.type = "mousewheel";
    n.wheelDelta && (f = n.wheelDelta / 120);
    n.detail && (f = -n.detail / 3);
    var a = f;
    void 0 !== h.axis &&
      h.axis === h.HORIZONTAL_AXIS &&
      ((a = 0), (d = -1 * f));
    void 0 !== h.wheelDeltaY && (a = h.wheelDeltaY / 120);
    void 0 !== h.wheelDeltaX && (d = (-1 * h.wheelDeltaX) / 120);
    l.unshift(n, f, d, a);
    return m.event.handle.apply(this, l);
  }
  var n = ["DOMMouseScroll", "mousewheel"];
  m.event.special.mousewheel = {
    setup: function () {
      if (this.addEventListener)
        for (var m = n.length; m; ) this.addEventListener(n[--m], u, !1);
      else this.onmousewheel = u;
    },
    teardown: function () {
      if (this.removeEventListener)
        for (var m = n.length; m; ) this.removeEventListener(n[--m], u, !1);
      else this.onmousewheel = null;
    },
  };
  m.fn.extend({
    mousewheel: function (m) {
      return m ? this.bind("mousewheel", m) : this.trigger("mousewheel");
    },
    unmousewheel: function (m) {
      return this.unbind("mousewheel", m);
    },
  });
})(jQuery);
jQuery.fn.extend({
  ajaxSubmit: function (m, u, n) {
    var t = {};
    if (this.is(":submit")) {
      var h = this.parents("form");
      t[this.attr("name")] = this.val() || "";
    } else if (this.is("form")) h = this;
    else return null;
    m.preventDefault();
    if (h.get(0).onsubmit && !h.get(0).onsubmit())
      return m.stopImmediatePropagation(), null;
    if (1 == h.data("ajaxSubmitCalled")) return null;
    h.data("ajaxSubmitCalled", !0);
    h.one("submit", function () {
      for (var l = h.serializeArray(), f = 0; f < l.length; f++) {
        var d = l[f].name;
        if (d in t) {
          var a = t[d];
          a instanceof Array || (a = [a]);
          a.push(l[f].value);
          t[d] = a;
        } else t[d] = l[f].value;
      }
      l = {
        spinnerOn: "#" + this.id,
        url: h.attr("action"),
        data: t,
        type: h.attr("method") || "get",
        complete: function () {
          h.data("ajaxSubmitCalled", !1);
        },
      };
      u && (l.postSuccess = u);
      n && (l.success = n);
      return ipo.api.ajax(l);
    });
    m.stopImmediatePropagation();
    h.submit();
    return !0;
  },
});
(function (m) {
  m.ui.timepicker = m.ui.timepicker || {};
  if (!m.ui.timepicker.version) {
    m.extend(m.ui, { timepicker: { version: "1.2.2" } });
    var u = function () {
      this.regional = [];
      this.regional[""] = {
        currentText: "Now",
        closeText: "Done",
        amNames: ["AM", "A"],
        pmNames: ["PM", "P"],
        timeFormat: "HH:mm",
        timeSuffix: "",
        timeOnlyTitle: "Choose Time",
        timeText: "Time",
        hourText: "Hour",
        minuteText: "Minute",
        secondText: "Second",
        millisecText: "Millisecond",
        timezoneText: "Time Zone",
        isRTL: !1,
      };
      this._defaults = {
        showButtonPanel: !0,
        timeOnly: !1,
        showHour: !0,
        showMinute: !0,
        showSecond: !1,
        showMillisec: !1,
        showTimezone: !1,
        showTime: !0,
        stepHour: 1,
        stepMinute: 1,
        stepSecond: 1,
        stepMillisec: 1,
        hour: 0,
        minute: 0,
        second: 0,
        millisec: 0,
        timezone: null,
        useLocalTimezone: !1,
        defaultTimezone: "+0000",
        hourMin: 0,
        minuteMin: 0,
        secondMin: 0,
        millisecMin: 0,
        hourMax: 23,
        minuteMax: 59,
        secondMax: 59,
        millisecMax: 999,
        minDateTime: null,
        maxDateTime: null,
        onSelect: null,
        hourGrid: 0,
        minuteGrid: 0,
        secondGrid: 0,
        millisecGrid: 0,
        alwaysSetTime: !0,
        separator: " ",
        altFieldTimeOnly: !0,
        altTimeFormat: null,
        altSeparator: null,
        altTimeSuffix: null,
        pickerTimeFormat: null,
        pickerTimeSuffix: null,
        showTimepicker: !0,
        timezoneIso8601: !1,
        timezoneList: null,
        addSliderAccess: !1,
        sliderAccessArgs: null,
        controlType: "slider",
        defaultValue: null,
        parse: "strict",
      };
      m.extend(this._defaults, this.regional[""]);
    };
    m.extend(u.prototype, {
      $input: null,
      $altInput: null,
      $timeObj: null,
      inst: null,
      hour_slider: null,
      minute_slider: null,
      second_slider: null,
      millisec_slider: null,
      timezone_select: null,
      hour: 0,
      minute: 0,
      second: 0,
      millisec: 0,
      timezone: null,
      defaultTimezone: "+0000",
      hourMinOriginal: null,
      minuteMinOriginal: null,
      secondMinOriginal: null,
      millisecMinOriginal: null,
      hourMaxOriginal: null,
      minuteMaxOriginal: null,
      secondMaxOriginal: null,
      millisecMaxOriginal: null,
      ampm: "",
      formattedDate: "",
      formattedTime: "",
      formattedDateTime: "",
      timezoneList: null,
      units: ["hour", "minute", "second", "millisec"],
      control: null,
      setDefaults: function (d) {
        n(this._defaults, d || {});
        return this;
      },
      _newInst: function (d, a) {
        var c = new u(),
          e = {},
          k = {},
          w;
        for (q in this._defaults)
          if (this._defaults.hasOwnProperty(q)) {
            var f = d.attr("time:" + q);
            if (f)
              try {
                e[q] = eval(f);
              } catch (p) {
                e[q] = f;
              }
          }
        var q = {
          beforeShow: function (a, e) {
            if (m.isFunction(c._defaults.evnts.beforeShow))
              return c._defaults.evnts.beforeShow.call(d[0], a, e, c);
          },
          onChangeMonthYear: function (a, e, k) {
            c._updateDateTime(k);
            m.isFunction(c._defaults.evnts.onChangeMonthYear) &&
              c._defaults.evnts.onChangeMonthYear.call(d[0], a, e, k, c);
          },
          onClose: function (a, e) {
            !0 === c.timeDefined && "" !== d.val() && c._updateDateTime(e);
            m.isFunction(c._defaults.evnts.onClose) &&
              c._defaults.evnts.onClose.call(d[0], a, e, c);
          },
        };
        for (w in q) q.hasOwnProperty(w) && (k[w] = a[w] || null);
        c._defaults = m.extend({}, this._defaults, e, a, q, {
          evnts: k,
          timepicker: c,
        });
        c.amNames = m.map(c._defaults.amNames, function (a) {
          return a.toUpperCase();
        });
        c.pmNames = m.map(c._defaults.pmNames, function (a) {
          return a.toUpperCase();
        });
        "string" === typeof c._defaults.controlType
          ? (void 0 === m.fn[c._defaults.controlType] &&
              (c._defaults.controlType = "select"),
            (c.control = c._controls[c._defaults.controlType]))
          : (c.control = c._defaults.controlType);
        null === c._defaults.timezoneList &&
          ((e =
            "-1200 -1100 -1000 -0930 -0900 -0800 -0700 -0600 -0500 -0430 -0400 -0330 -0300 -0200 -0100 +0000 +0100 +0200 +0300 +0330 +0400 +0430 +0500 +0530 +0545 +0600 +0630 +0700 +0800 +0845 +0900 +0930 +1000 +1030 +1100 +1130 +1200 +1245 +1300 +1400".split(
              " "
            )),
          c._defaults.timezoneIso8601 &&
            (e = m.map(e, function (a) {
              return "+0000" == a
                ? "Z"
                : a.substring(0, 3) + ":" + a.substring(3);
            })),
          (c._defaults.timezoneList = e));
        c.timezone = c._defaults.timezone;
        c.hour =
          c._defaults.hour < c._defaults.hourMin
            ? c._defaults.hourMin
            : c._defaults.hour > c._defaults.hourMax
            ? c._defaults.hourMax
            : c._defaults.hour;
        c.minute =
          c._defaults.minute < c._defaults.minuteMin
            ? c._defaults.minuteMin
            : c._defaults.minute > c._defaults.minuteMax
            ? c._defaults.minuteMax
            : c._defaults.minute;
        c.second =
          c._defaults.second < c._defaults.secondMin
            ? c._defaults.secondMin
            : c._defaults.second > c._defaults.secondMax
            ? c._defaults.secondMax
            : c._defaults.second;
        c.millisec =
          c._defaults.millisec < c._defaults.millisecMin
            ? c._defaults.millisecMin
            : c._defaults.millisec > c._defaults.millisecMax
            ? c._defaults.millisecMax
            : c._defaults.millisec;
        c.ampm = "";
        c.$input = d;
        a.altField &&
          (c.$altInput = m(a.altField)
            .css({ cursor: "pointer" })
            .focus(function () {
              d.trigger("focus");
            }));
        if (0 === c._defaults.minDate || 0 === c._defaults.minDateTime)
          c._defaults.minDate = new Date();
        if (0 === c._defaults.maxDate || 0 === c._defaults.maxDateTime)
          c._defaults.maxDate = new Date();
        void 0 !== c._defaults.minDate &&
          c._defaults.minDate instanceof Date &&
          (c._defaults.minDateTime = new Date(c._defaults.minDate.getTime()));
        void 0 !== c._defaults.minDateTime &&
          c._defaults.minDateTime instanceof Date &&
          (c._defaults.minDate = new Date(c._defaults.minDateTime.getTime()));
        void 0 !== c._defaults.maxDate &&
          c._defaults.maxDate instanceof Date &&
          (c._defaults.maxDateTime = new Date(c._defaults.maxDate.getTime()));
        void 0 !== c._defaults.maxDateTime &&
          c._defaults.maxDateTime instanceof Date &&
          (c._defaults.maxDate = new Date(c._defaults.maxDateTime.getTime()));
        c.$input.bind("focus", function () {
          c._onFocus();
        });
        return c;
      },
      _addTimePicker: function (d) {
        var a =
          this.$altInput && this._defaults.altFieldTimeOnly
            ? this.$input.val() + " " + this.$altInput.val()
            : this.$input.val();
        this.timeDefined = this._parseTime(a);
        this._limitMinMaxDateTime(d, !1);
        this._injectTimePicker();
      },
      _parseTime: function (d, a) {
        this.inst || (this.inst = m.datepicker._getInst(this.$input[0]));
        if (a || !this._defaults.timeOnly) {
          a = m.datepicker._get(this.inst, "dateFormat");
          try {
            var c = l(
              a,
              this._defaults.timeFormat,
              d,
              m.datepicker._getFormatConfig(this.inst),
              this._defaults
            );
            if (!c.timeObj) return !1;
            m.extend(this, c.timeObj);
          } catch (e) {
            return (
              m.timepicker.log(
                "Error parsing the date/time string: " +
                  e +
                  "\ndate/time string = " +
                  d +
                  "\ntimeFormat = " +
                  this._defaults.timeFormat +
                  "\ndateFormat = " +
                  a
              ),
              !1
            );
          }
        } else {
          d = m.datepicker.parseTime(
            this._defaults.timeFormat,
            d,
            this._defaults
          );
          if (!d) return !1;
          m.extend(this, d);
        }
        return !0;
      },
      _injectTimePicker: function () {
        var d = this.inst.dpDiv,
          a = this.inst.settings,
          c = this,
          e = "",
          k = "",
          w = {},
          v = {},
          q = null,
          p = 0,
          x = 0;
        if (0 === d.find("div.ui-timepicker-div").length && a.showTimepicker) {
          q =
            '<div class="ui-timepicker-div' +
            (a.isRTL ? " ui-timepicker-rtl" : "") +
            '"><dl><dt class="ui_tpicker_time_label"' +
            (a.showTime ? "" : ' style="display:none;"') +
            ">" +
            a.timeText +
            '</dt><dd class="ui_tpicker_time"' +
            (a.showTime ? "" : ' style="display:none;"') +
            "></dd>";
          p = 0;
          for (x = this.units.length; p < x; p++) {
            e = this.units[p];
            k = e.substr(0, 1).toUpperCase() + e.substr(1);
            w[e] = parseInt(
              a[e + "Max"] - ((a[e + "Max"] - a[e + "Min"]) % a["step" + k]),
              10
            );
            v[e] = 0;
            q +=
              '<dt class="ui_tpicker_' +
              e +
              '_label"' +
              (a["show" + k] ? "" : ' style="display:none;"') +
              ">" +
              a[e + "Text"] +
              '</dt><dd class="ui_tpicker_' +
              e +
              '"><div class="ui_tpicker_' +
              e +
              '_slider"' +
              (a["show" + k] ? "" : ' style="display:none;"') +
              "></div>";
            if (a["show" + k] && 0 < a[e + "Grid"]) {
              q +=
                '<div style="padding-left: 1px"><table class="ui-tpicker-grid-label"><tr>';
              if ("hour" == e)
                for (
                  k = a[e + "Min"];
                  k <= w[e];
                  k += parseInt(a[e + "Grid"], 10)
                ) {
                  v[e]++;
                  var y = m.datepicker.formatTime(
                    t(a.pickerTimeFormat || a.timeFormat) ? "hht" : "HH",
                    { hour: k },
                    a
                  );
                  q += '<td data-for="' + e + '">' + y + "</td>";
                }
              else
                for (
                  k = a[e + "Min"];
                  k <= w[e];
                  k += parseInt(a[e + "Grid"], 10)
                )
                  v[e]++,
                    (q +=
                      '<td data-for="' +
                      e +
                      '">' +
                      (10 > k ? "0" : "") +
                      k +
                      "</td>");
              q += "</tr></table></div>";
            }
            q += "</dd>";
          }
          q +=
            '<dt class="ui_tpicker_timezone_label"' +
            (a.showTimezone ? "" : ' style="display:none;"') +
            ">" +
            a.timezoneText +
            "</dt>";
          q +=
            '<dd class="ui_tpicker_timezone" ' +
            (a.showTimezone ? "" : ' style="display:none;"') +
            "></dd>";
          var h = m(q + "</dl></div>");
          !0 === a.timeOnly &&
            (h.prepend(
              '<div class="ui-widget-header ui-helper-clearfix ui-corner-all"><div class="ui-datepicker-title">' +
                a.timeOnlyTitle +
                "</div></div>"
            ),
            d.find(".ui-datepicker-header, .ui-datepicker-calendar").hide());
          p = 0;
          for (x = c.units.length; p < x; p++)
            (e = c.units[p]),
              (k = e.substr(0, 1).toUpperCase() + e.substr(1)),
              (c[e + "_slider"] = c.control.create(
                c,
                h.find(".ui_tpicker_" + e + "_slider"),
                e,
                c[e],
                a[e + "Min"],
                w[e],
                a["step" + k]
              )),
              a["show" + k] &&
                0 < a[e + "Grid"] &&
                ((q = (100 * v[e] * a[e + "Grid"]) / (w[e] - a[e + "Min"])),
                h
                  .find(".ui_tpicker_" + e + " table")
                  .css({
                    width: q + "%",
                    marginLeft: a.isRTL ? "0" : q / (-2 * v[e]) + "%",
                    marginRight: a.isRTL ? q / (-2 * v[e]) + "%" : "0",
                    borderCollapse: "collapse",
                  })
                  .find("td")
                  .click(function (a) {
                    var d = m(this),
                      k = d.html();
                    a = parseInt(k.replace(/[^0-9]/g), 10);
                    k = k.replace(/[^apm]/gi);
                    d = d.data("for");
                    "hour" == d &&
                      (-1 !== k.indexOf("p") && 12 > a
                        ? (a += 12)
                        : -1 !== k.indexOf("a") && 12 === a && (a = 0));
                    c.control.value(c, c[d + "_slider"], e, a);
                    c._onTimeChange();
                    c._onSelectHandler();
                  })
                  .css({
                    cursor: "pointer",
                    width: 100 / v[e] + "%",
                    textAlign: "center",
                    overflow: "hidden",
                  }));
          this.timezone_select = h
            .find(".ui_tpicker_timezone")
            .append("<select></select>")
            .find("select");
          m.fn.append.apply(
            this.timezone_select,
            m.map(a.timezoneList, function (a, e) {
              return m("<option />")
                .val("object" == typeof a ? a.value : a)
                .text("object" == typeof a ? a.label : a);
            })
          );
          "undefined" != typeof this.timezone &&
          null !== this.timezone &&
          "" !== this.timezone
            ? m.timepicker.timeZoneOffsetString(
                new Date(
                  this.inst.selectedYear,
                  this.inst.selectedMonth,
                  this.inst.selectedDay,
                  12
                )
              ) == this.timezone
              ? f(c)
              : this.timezone_select.val(this.timezone)
            : "undefined" != typeof this.hour &&
              null !== this.hour &&
              "" !== this.hour
            ? this.timezone_select.val(a.defaultTimezone)
            : f(c);
          this.timezone_select.change(function () {
            c._defaults.useLocalTimezone = !1;
            c._onTimeChange();
            c._onSelectHandler();
          });
          a = d.find(".ui-datepicker-buttonpane");
          a.length ? a.before(h) : d.append(h);
          this.$timeObj = h.find(".ui_tpicker_time");
          null !== this.inst &&
            ((d = this.timeDefined),
            this._onTimeChange(),
            (this.timeDefined = d));
          if (this._defaults.addSliderAccess) {
            var l = this._defaults.sliderAccessArgs,
              n = this._defaults.isRTL;
            l.isRTL = n;
            setTimeout(function () {
              if (0 === h.find(".ui-slider-access").length) {
                h.find(".ui-slider:visible").sliderAccess(l);
                var a = h.find(".ui-slider-access:eq(0)").outerWidth(!0);
                a &&
                  h.find("table:visible").each(function () {
                    var e = m(this),
                      c = e.outerWidth(),
                      d = e
                        .css(n ? "marginRight" : "marginLeft")
                        .toString()
                        .replace("%", ""),
                      k = c - a,
                      p = { width: k, marginRight: 0, marginLeft: 0 };
                    p[n ? "marginRight" : "marginLeft"] = (d * k) / c + "%";
                    e.css(p);
                  });
              }
            }, 10);
          }
        }
      },
      _limitMinMaxDateTime: function (d, a) {
        var c = this._defaults,
          e = new Date(d.selectedYear, d.selectedMonth, d.selectedDay);
        if (this._defaults.showTimepicker) {
          if (
            null !== m.datepicker._get(d, "minDateTime") &&
            void 0 !== m.datepicker._get(d, "minDateTime") &&
            e
          ) {
            var k = m.datepicker._get(d, "minDateTime"),
              w = new Date(
                k.getFullYear(),
                k.getMonth(),
                k.getDate(),
                0,
                0,
                0,
                0
              );
            if (
              null === this.hourMinOriginal ||
              null === this.minuteMinOriginal ||
              null === this.secondMinOriginal ||
              null === this.millisecMinOriginal
            )
              (this.hourMinOriginal = c.hourMin),
                (this.minuteMinOriginal = c.minuteMin),
                (this.secondMinOriginal = c.secondMin),
                (this.millisecMinOriginal = c.millisecMin);
            d.settings.timeOnly || w.getTime() == e.getTime()
              ? ((this._defaults.hourMin = k.getHours()),
                this.hour <= this._defaults.hourMin
                  ? ((this.hour = this._defaults.hourMin),
                    (this._defaults.minuteMin = k.getMinutes()),
                    this.minute <= this._defaults.minuteMin
                      ? ((this.minute = this._defaults.minuteMin),
                        (this._defaults.secondMin = k.getSeconds()),
                        this.second <= this._defaults.secondMin
                          ? ((this.second = this._defaults.secondMin),
                            (this._defaults.millisecMin = k.getMilliseconds()))
                          : (this.millisec < this._defaults.millisecMin &&
                              (this.millisec = this._defaults.millisecMin),
                            (this._defaults.millisecMin =
                              this.millisecMinOriginal)))
                      : ((this._defaults.secondMin = this.secondMinOriginal),
                        (this._defaults.millisecMin =
                          this.millisecMinOriginal)))
                  : ((this._defaults.minuteMin = this.minuteMinOriginal),
                    (this._defaults.secondMin = this.secondMinOriginal),
                    (this._defaults.millisecMin = this.millisecMinOriginal)))
              : ((this._defaults.hourMin = this.hourMinOriginal),
                (this._defaults.minuteMin = this.minuteMinOriginal),
                (this._defaults.secondMin = this.secondMinOriginal),
                (this._defaults.millisecMin = this.millisecMinOriginal));
          }
          if (
            null !== m.datepicker._get(d, "maxDateTime") &&
            void 0 !== m.datepicker._get(d, "maxDateTime") &&
            e
          ) {
            k = m.datepicker._get(d, "maxDateTime");
            w = new Date(
              k.getFullYear(),
              k.getMonth(),
              k.getDate(),
              0,
              0,
              0,
              0
            );
            if (
              null === this.hourMaxOriginal ||
              null === this.minuteMaxOriginal ||
              null === this.secondMaxOriginal
            )
              (this.hourMaxOriginal = c.hourMax),
                (this.minuteMaxOriginal = c.minuteMax),
                (this.secondMaxOriginal = c.secondMax),
                (this.millisecMaxOriginal = c.millisecMax);
            d.settings.timeOnly || w.getTime() == e.getTime()
              ? ((this._defaults.hourMax = k.getHours()),
                this.hour >= this._defaults.hourMax
                  ? ((this.hour = this._defaults.hourMax),
                    (this._defaults.minuteMax = k.getMinutes()),
                    this.minute >= this._defaults.minuteMax
                      ? ((this.minute = this._defaults.minuteMax),
                        (this._defaults.secondMax = k.getSeconds()),
                        this.second >= this._defaults.secondMax
                          ? ((this.second = this._defaults.secondMax),
                            (this._defaults.millisecMax = k.getMilliseconds()))
                          : (this.millisec > this._defaults.millisecMax &&
                              (this.millisec = this._defaults.millisecMax),
                            (this._defaults.millisecMax =
                              this.millisecMaxOriginal)))
                      : ((this._defaults.secondMax = this.secondMaxOriginal),
                        (this._defaults.millisecMax =
                          this.millisecMaxOriginal)))
                  : ((this._defaults.minuteMax = this.minuteMaxOriginal),
                    (this._defaults.secondMax = this.secondMaxOriginal),
                    (this._defaults.millisecMax = this.millisecMaxOriginal)))
              : ((this._defaults.hourMax = this.hourMaxOriginal),
                (this._defaults.minuteMax = this.minuteMaxOriginal),
                (this._defaults.secondMax = this.secondMaxOriginal),
                (this._defaults.millisecMax = this.millisecMaxOriginal));
          }
          void 0 !== a &&
            !0 === a &&
            ((d = parseInt(
              this._defaults.hourMax -
                ((this._defaults.hourMax - this._defaults.hourMin) %
                  this._defaults.stepHour),
              10
            )),
            (a = parseInt(
              this._defaults.minuteMax -
                ((this._defaults.minuteMax - this._defaults.minuteMin) %
                  this._defaults.stepMinute),
              10
            )),
            (c = parseInt(
              this._defaults.secondMax -
                ((this._defaults.secondMax - this._defaults.secondMin) %
                  this._defaults.stepSecond),
              10
            )),
            (e = parseInt(
              this._defaults.millisecMax -
                ((this._defaults.millisecMax - this._defaults.millisecMin) %
                  this._defaults.stepMillisec),
              10
            )),
            this.hour_slider &&
              (this.control.options(this, this.hour_slider, "hour", {
                min: this._defaults.hourMin,
                max: d,
              }),
              this.control.value(
                this,
                this.hour_slider,
                "hour",
                this.hour - (this.hour % this._defaults.stepHour)
              )),
            this.minute_slider &&
              (this.control.options(this, this.minute_slider, "minute", {
                min: this._defaults.minuteMin,
                max: a,
              }),
              this.control.value(
                this,
                this.minute_slider,
                "minute",
                this.minute - (this.minute % this._defaults.stepMinute)
              )),
            this.second_slider &&
              (this.control.options(this, this.second_slider, "second", {
                min: this._defaults.secondMin,
                max: c,
              }),
              this.control.value(
                this,
                this.second_slider,
                "second",
                this.second - (this.second % this._defaults.stepSecond)
              )),
            this.millisec_slider &&
              (this.control.options(this, this.millisec_slider, "millisec", {
                min: this._defaults.millisecMin,
                max: e,
              }),
              this.control.value(
                this,
                this.millisec_slider,
                "millisec",
                this.millisec - (this.millisec % this._defaults.stepMillisec)
              )));
        }
      },
      _onTimeChange: function () {
        var d = this.hour_slider
            ? this.control.value(this, this.hour_slider, "hour")
            : !1,
          a = this.minute_slider
            ? this.control.value(this, this.minute_slider, "minute")
            : !1,
          c = this.second_slider
            ? this.control.value(this, this.second_slider, "second")
            : !1,
          e = this.millisec_slider
            ? this.control.value(this, this.millisec_slider, "millisec")
            : !1,
          k = this.timezone_select ? this.timezone_select.val() : !1,
          w = this._defaults,
          f = w.pickerTimeFormat || w.timeFormat,
          q = w.pickerTimeSuffix || w.timeSuffix;
        "object" == typeof d && (d = !1);
        "object" == typeof a && (a = !1);
        "object" == typeof c && (c = !1);
        "object" == typeof e && (e = !1);
        "object" == typeof k && (k = !1);
        !1 !== d && (d = parseInt(d, 10));
        !1 !== a && (a = parseInt(a, 10));
        !1 !== c && (c = parseInt(c, 10));
        !1 !== e && (e = parseInt(e, 10));
        var p = w[12 > d ? "amNames" : "pmNames"][0],
          x =
            d != this.hour ||
            a != this.minute ||
            c != this.second ||
            e != this.millisec ||
            (0 < this.ampm.length &&
              12 > d !=
                (-1 !== m.inArray(this.ampm.toUpperCase(), this.amNames))) ||
            (null === this.timezone && k != this.defaultTimezone) ||
            (null !== this.timezone && k != this.timezone);
        x &&
          (!1 !== d && (this.hour = d),
          !1 !== a && (this.minute = a),
          !1 !== c && (this.second = c),
          !1 !== e && (this.millisec = e),
          !1 !== k && (this.timezone = k),
          this.inst || (this.inst = m.datepicker._getInst(this.$input[0])),
          this._limitMinMaxDateTime(this.inst, !0));
        t(w.timeFormat) && (this.ampm = p);
        this.formattedTime = m.datepicker.formatTime(w.timeFormat, this, w);
        this.$timeObj &&
          (f === w.timeFormat
            ? this.$timeObj.text(this.formattedTime + q)
            : this.$timeObj.text(m.datepicker.formatTime(f, this, w) + q));
        this.timeDefined = !0;
        x && this._updateDateTime();
      },
      _onSelectHandler: function () {
        var d = this._defaults.onSelect || this.inst.settings.onSelect,
          a = this.$input ? this.$input[0] : null;
        d && a && d.apply(a, [this.formattedDateTime, this]);
      },
      _updateDateTime: function (d) {
        d = this.inst || d;
        var a = m.datepicker._daylightSavingAdjust(
            new Date(d.selectedYear, d.selectedMonth, d.selectedDay)
          ),
          c = m.datepicker._get(d, "dateFormat"),
          e = m.datepicker._getFormatConfig(d),
          k = null !== a && this.timeDefined;
        c = this.formattedDate = m.datepicker.formatDate(
          c,
          null === a ? new Date() : a,
          e
        );
        "" === d.lastVal &&
          ((d.currentYear = d.selectedYear),
          (d.currentMonth = d.selectedMonth),
          (d.currentDay = d.selectedDay));
        !0 === this._defaults.timeOnly
          ? (c = this.formattedTime)
          : !0 !== this._defaults.timeOnly &&
            (this._defaults.alwaysSetTime || k) &&
            (c +=
              this._defaults.separator +
              this.formattedTime +
              this._defaults.timeSuffix);
        this.formattedDateTime = c;
        this._defaults.showTimepicker
          ? this.$altInput && !0 === this._defaults.altFieldTimeOnly
            ? (this.$altInput.val(this.formattedTime),
              this.$input.val(this.formattedDate))
            : this.$altInput
            ? (this.$input.val(c),
              (d = this._defaults.altSeparator
                ? this._defaults.altSeparator
                : this._defaults.separator),
              (k = this._defaults.altTimeSuffix
                ? this._defaults.altTimeSuffix
                : this._defaults.timeSuffix),
              (a = this._defaults.altFormat
                ? m.datepicker.formatDate(
                    this._defaults.altFormat,
                    null === a ? new Date() : a,
                    e
                  )
                : this.formattedDate) && (a += d),
              (a = this._defaults.altTimeFormat
                ? a +
                  (m.datepicker.formatTime(
                    this._defaults.altTimeFormat,
                    this,
                    this._defaults
                  ) +
                    k)
                : a + (this.formattedTime + k)),
              this.$altInput.val(a))
            : this.$input.val(c)
          : this.$input.val(this.formattedDate);
        this.$input.trigger("change");
      },
      _onFocus: function () {
        if (!this.$input.val() && this._defaults.defaultValue) {
          this.$input.val(this._defaults.defaultValue);
          var d = m.datepicker._getInst(this.$input.get(0)),
            a = m.datepicker._get(d, "timepicker");
          if (a && a._defaults.timeOnly && d.input.val() != d.lastVal)
            try {
              m.datepicker._updateDatepicker(d);
            } catch (c) {
              m.timepicker.log(c);
            }
        }
      },
      _controls: {
        slider: {
          create: function (d, a, c, e, k, w, f) {
            var q = d._defaults.isRTL;
            return a.prop("slide", null).slider({
              orientation: "horizontal",
              value: q ? -1 * e : e,
              min: q ? -1 * w : k,
              max: q ? -1 * k : w,
              step: f,
              slide: function (a, e) {
                d.control.value(d, m(this), c, q ? -1 * e.value : e.value);
                d._onTimeChange();
              },
              stop: function (a, e) {
                d._onSelectHandler();
              },
            });
          },
          options: function (d, a, c, e, k) {
            if (d._defaults.isRTL) {
              if ("string" == typeof e)
                return "min" == e || "max" == e
                  ? void 0 !== k
                    ? a.slider(e, -1 * k)
                    : Math.abs(a.slider(e))
                  : a.slider(e);
              d = e.min;
              c = e.max;
              e.min = e.max = null;
              void 0 !== d && (e.max = -1 * d);
              void 0 !== c && (e.min = -1 * c);
              return a.slider(e);
            }
            return "string" == typeof e && void 0 !== k
              ? a.slider(e, k)
              : a.slider(e);
          },
          value: function (d, a, c, e) {
            return d._defaults.isRTL
              ? void 0 !== e
                ? a.slider("value", -1 * e)
                : Math.abs(a.slider("value"))
              : void 0 !== e
              ? a.slider("value", e)
              : a.slider("value");
          },
        },
        select: {
          create: function (d, a, c, e, k, w, f) {
            for (
              var q =
                  '<select class="ui-timepicker-select" data-unit="' +
                  c +
                  '" data-min="' +
                  k +
                  '" data-max="' +
                  w +
                  '" data-step="' +
                  f +
                  '">',
                p = d._defaults.pickerTimeFormat || d._defaults.timeFormat;
              k <= w;
              k += f
            )
              (q +=
                '<option value="' +
                k +
                '"' +
                (k == e ? " selected" : "") +
                ">"),
                (q =
                  "hour" == c
                    ? q +
                      m.datepicker.formatTime(
                        m.trim(p.replace(/[^ht ]/gi, "")),
                        { hour: k },
                        d._defaults
                      )
                    : "millisec" == c || 10 <= k
                    ? q + k
                    : q + ("0" + k.toString())),
                (q += "</option>");
            q += "</select>";
            a.children("select").remove();
            m(q)
              .appendTo(a)
              .change(function (a) {
                d._onTimeChange();
                d._onSelectHandler();
              });
            return a;
          },
          options: function (d, a, c, e, k) {
            c = {};
            var w = a.children("select");
            if ("string" == typeof e) {
              if (void 0 === k) return w.data(e);
              c[e] = k;
            } else c = e;
            return d.control.create(
              d,
              a,
              w.data("unit"),
              w.val(),
              c.min || w.data("min"),
              c.max || w.data("max"),
              c.step || w.data("step")
            );
          },
          value: function (d, a, c, e) {
            d = a.children("select");
            return void 0 !== e ? d.val(e) : d.val();
          },
        },
      },
    });
    m.fn.extend({
      timepicker: function (d) {
        d = d || {};
        var a = Array.prototype.slice.call(arguments);
        "object" == typeof d && (a[0] = m.extend(d, { timeOnly: !0 }));
        return m(this).each(function () {
          m.fn.datetimepicker.apply(m(this), a);
        });
      },
      datetimepicker: function (d) {
        d = d || {};
        var a = arguments;
        return "string" == typeof d
          ? "getDate" == d
            ? m.fn.datepicker.apply(m(this[0]), a)
            : this.each(function () {
                var c = m(this);
                c.datepicker.apply(c, a);
              })
          : this.each(function () {
              var a = m(this);
              a.datepicker(m.timepicker._newInst(a, d)._defaults);
            });
      },
    });
    m.datepicker.parseDateTime = function (d, a, c, e, k) {
      d = l(d, a, c, e, k);
      d.timeObj &&
        ((a = d.timeObj),
        d.date.setHours(a.hour, a.minute, a.second, a.millisec));
      return d.date;
    };
    m.datepicker.parseTime = function (d, a, c) {
      c = n(n({}, m.timepicker._defaults), c || {});
      var e = function (a, e, c) {
          var d = function (a, e) {
              var c = [];
              a && m.merge(c, a);
              e && m.merge(c, e);
              c = m.map(c, function (a) {
                return a.replace(/[.*+?|()\[\]{}\\]/g, "\\$&");
              });
              return "(" + c.join("|") + ")?";
            },
            k =
              "^" +
              a
                .toString()
                .replace(
                  /([hH]{1,2}|mm?|ss?|[tT]{1,2}|[lz]|'.*?')/g,
                  function (a) {
                    var e = a.length;
                    switch (a.charAt(0).toLowerCase()) {
                      case "h":
                        return 1 === e ? "(\\d?\\d)" : "(\\d{" + e + "})";
                      case "m":
                        return 1 === e ? "(\\d?\\d)" : "(\\d{" + e + "})";
                      case "s":
                        return 1 === e ? "(\\d?\\d)" : "(\\d{" + e + "})";
                      case "l":
                        return "(\\d?\\d?\\d)";
                      case "z":
                        return "(z|[-+]\\d\\d:?\\d\\d|\\S+)?";
                      case "t":
                        return d(c.amNames, c.pmNames);
                      default:
                        return (
                          "(" +
                          a
                            .replace(/'/g, "")
                            .replace(
                              /(\.|\$|\^|\\|\/|\(|\)|\[|\]|\?|\+|\*)/g,
                              function (a) {
                                return "\\" + a;
                              }
                            ) +
                          ")?"
                        );
                    }
                  }
                )
                .replace(/\s/g, "\\s?") +
              c.timeSuffix +
              "$";
          a = (function (a) {
            a = a
              .toLowerCase()
              .match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|t{1,2}|z|'.*?')/g);
            var e = { h: -1, m: -1, s: -1, l: -1, t: -1, z: -1 };
            if (a)
              for (var c = 0; c < a.length; c++)
                -1 == e[a[c].toString().charAt(0)] &&
                  (e[a[c].toString().charAt(0)] = c + 1);
            return e;
          })(a);
          var f = "";
          k = e.match(new RegExp(k, "i"));
          e = { hour: 0, minute: 0, second: 0, millisec: 0 };
          if (k) {
            -1 !== a.t &&
              (void 0 === k[a.t] || 0 === k[a.t].length
                ? ((f = ""), (e.ampm = ""))
                : ((f =
                    -1 !== m.inArray(k[a.t].toUpperCase(), c.amNames)
                      ? "AM"
                      : "PM"),
                  (e.ampm = c["AM" == f ? "amNames" : "pmNames"][0])));
            -1 !== a.h &&
              (e.hour =
                "AM" == f && "12" == k[a.h]
                  ? 0
                  : "PM" == f && "12" != k[a.h]
                  ? parseInt(k[a.h], 10) + 12
                  : Number(k[a.h]));
            -1 !== a.m && (e.minute = Number(k[a.m]));
            -1 !== a.s && (e.second = Number(k[a.s]));
            -1 !== a.l && (e.millisec = Number(k[a.l]));
            if (-1 !== a.z && void 0 !== k[a.z]) {
              a = k[a.z].toUpperCase();
              switch (a.length) {
                case 1:
                  a = c.timezoneIso8601 ? "Z" : "+0000";
                  break;
                case 5:
                  c.timezoneIso8601 &&
                    (a =
                      "0000" == a.substring(1)
                        ? "Z"
                        : a.substring(0, 3) + ":" + a.substring(3));
                  break;
                case 6:
                  c.timezoneIso8601
                    ? "00:00" == a.substring(1) && (a = "Z")
                    : (a =
                        "Z" == a || "00:00" == a.substring(1)
                          ? "+0000"
                          : a.replace(/:/, ""));
              }
              e.timezone = a;
            }
            return e;
          }
          return !1;
        },
        k = function (a, c, d) {
          try {
            var k = new Date("2012-01-01 " + c);
            if (
              isNaN(k.getTime()) &&
              ((k = new Date("2012-01-01T" + c)),
              isNaN(k.getTime()) &&
                ((k = new Date("01/01/2012 " + c)), isNaN(k.getTime())))
            )
              throw "Unable to parse time with native Date: " + c;
            return {
              hour: k.getHours(),
              minute: k.getMinutes(),
              second: k.getSeconds(),
              millisec: k.getMilliseconds(),
              timezone: m.timepicker.timeZoneOffsetString(k),
            };
          } catch (x) {
            try {
              return e(a, c, d);
            } catch (y) {
              m.timepicker.log(
                "Unable to parse \ntimeString: " + c + "\ntimeFormat: " + a
              );
            }
          }
          return !1;
        };
      return "function" === typeof c.parse
        ? c.parse(d, a, c)
        : "loose" === c.parse
        ? k(d, a, c)
        : e(d, a, c);
    };
    m.datepicker.formatTime = function (d, a, c) {
      c = c || {};
      c = m.extend({}, m.timepicker._defaults, c);
      a = m.extend(
        { hour: 0, minute: 0, second: 0, millisec: 0, timezone: "+0000" },
        a
      );
      var e = c.amNames[0],
        k = parseInt(a.hour, 10);
      11 < k && (e = c.pmNames[0]);
      d = d.replace(
        /(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[lz]|('.*?'|".*?"))/g,
        function (d) {
          switch (d) {
            case "HH":
              return ("0" + k).slice(-2);
            case "H":
              return k;
            case "hh":
              return ("0" + h(k)).slice(-2);
            case "h":
              return h(k);
            case "mm":
              return ("0" + a.minute).slice(-2);
            case "m":
              return a.minute;
            case "ss":
              return ("0" + a.second).slice(-2);
            case "s":
              return a.second;
            case "l":
              return ("00" + a.millisec).slice(-3);
            case "z":
              return null === a.timezone ? c.defaultTimezone : a.timezone;
            case "T":
              return e.charAt(0).toUpperCase();
            case "TT":
              return e.toUpperCase();
            case "t":
              return e.charAt(0).toLowerCase();
            case "tt":
              return e.toLowerCase();
            default:
              return d.replace(/'/g, "") || "'";
          }
        }
      );
      return (d = m.trim(d));
    };
    m.datepicker._base_selectDate = m.datepicker._selectDate;
    m.datepicker._selectDate = function (d, a) {
      var c = this._getInst(m(d)[0]),
        e = this._get(c, "timepicker");
      e
        ? (e._limitMinMaxDateTime(c, !0),
          (c.inline = c.stay_open = !0),
          this._base_selectDate(d, a),
          (c.inline = c.stay_open = !1),
          this._notifyChange(c),
          this._updateDatepicker(c))
        : this._base_selectDate(d, a);
    };
    m.datepicker._base_updateDatepicker = m.datepicker._updateDatepicker;
    m.datepicker._updateDatepicker = function (d) {
      var a = d.input[0];
      if (
        !m.datepicker._curInst ||
        m.datepicker._curInst == d ||
        !m.datepicker._datepickerShowing ||
        m.datepicker._lastInput == a
      )
        if ("boolean" !== typeof d.stay_open || !1 === d.stay_open)
          this._base_updateDatepicker(d),
            (a = this._get(d, "timepicker")) && a._addTimePicker(d);
    };
    m.datepicker._base_doKeyPress = m.datepicker._doKeyPress;
    m.datepicker._doKeyPress = function (d) {
      var a = m.datepicker._getInst(d.target),
        c = m.datepicker._get(a, "timepicker");
      if (c && m.datepicker._get(a, "constrainInput")) {
        var e = t(c._defaults.timeFormat);
        a = m.datepicker._possibleChars(m.datepicker._get(a, "dateFormat"));
        c =
          c._defaults.timeFormat
            .toString()
            .replace(/[hms]/g, "")
            .replace(/TT/g, e ? "APM" : "")
            .replace(/Tt/g, e ? "AaPpMm" : "")
            .replace(/tT/g, e ? "AaPpMm" : "")
            .replace(/T/g, e ? "AP" : "")
            .replace(/tt/g, e ? "apm" : "")
            .replace(/t/g, e ? "ap" : "") +
          " " +
          c._defaults.separator +
          c._defaults.timeSuffix +
          (c._defaults.showTimezone ? c._defaults.timezoneList.join("") : "") +
          c._defaults.amNames.join("") +
          c._defaults.pmNames.join("") +
          a;
        e = String.fromCharCode(void 0 === d.charCode ? d.keyCode : d.charCode);
        return d.ctrlKey || " " > e || !a || -1 < c.indexOf(e);
      }
      return m.datepicker._base_doKeyPress(d);
    };
    m.datepicker._base_updateAlternate = m.datepicker._updateAlternate;
    m.datepicker._updateAlternate = function (d) {
      var a = this._get(d, "timepicker");
      if (a) {
        var c = a._defaults.altField;
        if (c) {
          var e = this._getDate(d);
          d = m.datepicker._getFormatConfig(d);
          var k = a._defaults.altSeparator
              ? a._defaults.altSeparator
              : a._defaults.separator,
            f = a._defaults.altTimeSuffix
              ? a._defaults.altTimeSuffix
              : a._defaults.timeSuffix;
          f =
            "" +
            (m.datepicker.formatTime(
              null !== a._defaults.altTimeFormat
                ? a._defaults.altTimeFormat
                : a._defaults.timeFormat,
              a,
              a._defaults
            ) +
              f);
          a._defaults.timeOnly ||
            a._defaults.altFieldTimeOnly ||
            null === e ||
            (f = a._defaults.altFormat
              ? m.datepicker.formatDate(a._defaults.altFormat, e, d) + k + f
              : a.formattedDate + k + f);
          m(c).val(f);
        }
      } else m.datepicker._base_updateAlternate(d);
    };
    m.datepicker._base_doKeyUp = m.datepicker._doKeyUp;
    m.datepicker._doKeyUp = function (d) {
      var a = m.datepicker._getInst(d.target),
        c = m.datepicker._get(a, "timepicker");
      if (c && c._defaults.timeOnly && a.input.val() != a.lastVal)
        try {
          m.datepicker._updateDatepicker(a);
        } catch (e) {
          m.timepicker.log(e);
        }
      return m.datepicker._base_doKeyUp(d);
    };
    m.datepicker._base_gotoToday = m.datepicker._gotoToday;
    m.datepicker._gotoToday = function (d) {
      var a = this._getInst(m(d)[0]),
        c = a.dpDiv;
      this._base_gotoToday(d);
      d = this._get(a, "timepicker");
      f(d);
      this._setTime(a, new Date());
      m(".ui-datepicker-today", c).click();
    };
    m.datepicker._disableTimepickerDatepicker = function (d) {
      var a = this._getInst(d);
      if (a) {
        var c = this._get(a, "timepicker");
        m(d).datepicker("getDate");
        c && ((c._defaults.showTimepicker = !1), c._updateDateTime(a));
      }
    };
    m.datepicker._enableTimepickerDatepicker = function (d) {
      var a = this._getInst(d);
      if (a) {
        var c = this._get(a, "timepicker");
        m(d).datepicker("getDate");
        c &&
          ((c._defaults.showTimepicker = !0),
          c._addTimePicker(a),
          c._updateDateTime(a));
      }
    };
    m.datepicker._setTime = function (d, a) {
      var c = this._get(d, "timepicker");
      if (c) {
        var e = c._defaults;
        c.hour = a ? a.getHours() : e.hour;
        c.minute = a ? a.getMinutes() : e.minute;
        c.second = a ? a.getSeconds() : e.second;
        c.millisec = a ? a.getMilliseconds() : e.millisec;
        c._limitMinMaxDateTime(d, !0);
        c._onTimeChange();
        c._updateDateTime(d);
      }
    };
    m.datepicker._setTimeDatepicker = function (d, a, c) {
      if ((d = this._getInst(d))) {
        var e = this._get(d, "timepicker");
        e &&
          (this._setDateFromField(d),
          a &&
            ("string" == typeof a
              ? (e._parseTime(a, c),
                (a = new Date()),
                a.setHours(e.hour, e.minute, e.second, e.millisec))
              : (a = new Date(a.getTime())),
            "Invalid Date" == a.toString() && (a = void 0),
            this._setTime(d, a)));
      }
    };
    m.datepicker._base_setDateDatepicker = m.datepicker._setDateDatepicker;
    m.datepicker._setDateDatepicker = function (d, a) {
      var c = this._getInst(d);
      if (c) {
        var e = a instanceof Date ? new Date(a.getTime()) : a;
        this._updateDatepicker(c);
        this._base_setDateDatepicker.apply(this, arguments);
        this._setTimeDatepicker(d, e, !0);
      }
    };
    m.datepicker._base_getDateDatepicker = m.datepicker._getDateDatepicker;
    m.datepicker._getDateDatepicker = function (d, a) {
      var c = this._getInst(d);
      if (c) {
        var e = this._get(c, "timepicker");
        return e
          ? (void 0 === c.lastVal && this._setDateFromField(c, a),
            (a = this._getDate(c)) &&
              e._parseTime(m(d).val(), e.timeOnly) &&
              a.setHours(e.hour, e.minute, e.second, e.millisec),
            a)
          : this._base_getDateDatepicker(d, a);
      }
    };
    m.datepicker._base_parseDate = m.datepicker.parseDate;
    m.datepicker.parseDate = function (d, a, c) {
      try {
        var e = this._base_parseDate(d, a, c);
      } catch (k) {
        if (0 <= k.indexOf(":"))
          (e = this._base_parseDate(
            d,
            a.substring(0, a.length - (k.length - k.indexOf(":") - 2)),
            c
          )),
            m.timepicker.log(
              "Error parsing the date string: " +
                k +
                "\ndate string = " +
                a +
                "\ndate format = " +
                d
            );
        else throw k;
      }
      return e;
    };
    m.datepicker._base_formatDate = m.datepicker._formatDate;
    m.datepicker._formatDate = function (d, a, c, e) {
      return (a = this._get(d, "timepicker"))
        ? (a._updateDateTime(d), a.$input.val())
        : this._base_formatDate(d);
    };
    m.datepicker._base_optionDatepicker = m.datepicker._optionDatepicker;
    m.datepicker._optionDatepicker = function (d, a, c) {
      var e = this._getInst(d);
      if (!e) return null;
      if ((e = this._get(e, "timepicker"))) {
        var k = null,
          f = null,
          v = null,
          q = e._defaults.evnts,
          p = {},
          x;
        if ("string" == typeof a)
          if ("minDate" === a || "minDateTime" === a) k = c;
          else if ("maxDate" === a || "maxDateTime" === a) f = c;
          else if ("onSelect" === a) v = c;
          else {
            if (q.hasOwnProperty(a)) {
              if ("undefined" === typeof c) return q[a];
              p[a] = c;
              var y = {};
            }
          }
        else if ("object" == typeof a)
          for (x in (a.minDate
            ? (k = a.minDate)
            : a.minDateTime
            ? (k = a.minDateTime)
            : a.maxDate
            ? (f = a.maxDate)
            : a.maxDateTime && (f = a.maxDateTime),
          q))
            q.hasOwnProperty(x) && a[x] && (p[x] = a[x]);
        for (x in p)
          p.hasOwnProperty(x) &&
            ((q[x] = p[x]), y || (y = m.extend({}, a)), delete y[x]);
        if ((x = y))
          a: {
            x = y;
            for (var h in x)
              if (x.hasOwnProperty(x)) {
                x = !1;
                break a;
              }
            x = !0;
          }
        if (x) return;
        k
          ? ((k = 0 === k ? new Date() : new Date(k)),
            (e._defaults.minDate = k),
            (e._defaults.minDateTime = k))
          : f
          ? ((f = 0 === f ? new Date() : new Date(f)),
            (e._defaults.maxDate = f),
            (e._defaults.maxDateTime = f))
          : v && (e._defaults.onSelect = v);
      }
      return void 0 === c
        ? this._base_optionDatepicker.call(m.datepicker, d, a)
        : this._base_optionDatepicker.call(m.datepicker, d, y || a, c);
    };
    var n = function (d, a) {
        m.extend(d, a);
        for (var c in a) if (null === a[c] || void 0 === a[c]) d[c] = a[c];
        return d;
      },
      t = function (d) {
        return (
          (-1 !== d.indexOf("t") || -1 !== d.indexOf("T")) &&
          -1 !== d.indexOf("h")
        );
      },
      h = function (d) {
        12 < d && (d -= 12);
        0 === d && (d = 12);
        return String(d);
      },
      l = function (d, a, c, e, k) {
        a: {
          try {
            var f =
                k && k.separator
                  ? k.separator
                  : m.timepicker._defaults.separator,
              v = (
                k && k.timeFormat
                  ? k.timeFormat
                  : m.timepicker._defaults.timeFormat
              ).split(f).length,
              q = c.split(f),
              p = q.length;
            if (1 < p) {
              var x = [q.splice(0, p - v).join(f), q.splice(0, v).join(f)];
              break a;
            }
          } catch (y) {
            if (
              (m.timepicker.log(
                "Could not split the date from the time. Please check the following datetimepicker options\nthrown error: " +
                  y +
                  "\ndateTimeString" +
                  c +
                  "\ndateFormat = " +
                  d +
                  "\nseparator = " +
                  k.separator +
                  "\ntimeFormat = " +
                  k.timeFormat
              ),
              0 <= y.indexOf(":"))
            ) {
              x = c.length - (y.length - y.indexOf(":") - 2);
              c.substring(x);
              x = [m.trim(c.substring(0, x)), m.trim(c.substring(x))];
              break a;
            } else throw y;
          }
          x = [c, ""];
        }
        d = m.datepicker._base_parseDate(d, x[0], e);
        if ("" !== x[1]) {
          a = m.datepicker.parseTime(a, x[1], k);
          if (null === a) throw "Wrong time format";
          return { date: d, timeObj: a };
        }
        return { date: d };
      },
      f = function (d, a) {
        d &&
          d.timezone_select &&
          ((d._defaults.useLocalTimezone = !0),
          (a = m.timepicker.timeZoneOffsetString(
            "undefined" !== typeof a ? a : new Date()
          )),
          d._defaults.timezoneIso8601 &&
            (a = a.substring(0, 3) + ":" + a.substring(3)),
          d.timezone_select.val(a));
      };
    m.timepicker = new u();
    m.timepicker.timeZoneOffsetString = function (d) {
      d = -1 * d.getTimezoneOffset();
      var a = d % 60;
      return (
        (0 <= d ? "+" : "-") +
        ("0" + (((d - a) / 60) * 101).toString()).slice(-2) +
        ("0" + (101 * a).toString()).slice(-2)
      );
    };
    m.timepicker.timeRange = function (d, a, c) {
      return m.timepicker.handleRange("timepicker", d, a, c);
    };
    m.timepicker.dateTimeRange = function (d, a, c) {
      m.timepicker.dateRange(d, a, c, "datetimepicker");
    };
    m.timepicker.dateRange = function (d, a, c, e) {
      m.timepicker.handleRange(e || "datepicker", d, a, c);
    };
    m.timepicker.handleRange = function (d, a, c, e) {
      function k(e, d, k) {
        d.val() && new Date(a.val()) > new Date(c.val()) && d.val(k);
      }
      function f(a, e, c) {
        m(a).val() &&
          ((a = m(a)[d].call(m(a), "getDate")),
          a.getTime && m(e)[d].call(m(e), "option", c, a));
      }
      m.fn[d].call(
        a,
        m.extend(
          {
            onClose: function (a, e) {
              k(this, c, a);
            },
            onSelect: function (a) {
              f(this, c, "minDate");
            },
          },
          e,
          e.start
        )
      );
      m.fn[d].call(
        c,
        m.extend(
          {
            onClose: function (e, c) {
              k(this, a, e);
            },
            onSelect: function (e) {
              f(this, a, "maxDate");
            },
          },
          e,
          e.end
        )
      );
      "timepicker" != d &&
        e.reformat &&
        m([a, c]).each(function () {
          var a = m(this)[d].call(m(this), "option", "dateFormat"),
            e = new Date(m(this).val());
          m(this).val() && e && m(this).val(m.datepicker.formatDate(a, e));
        });
      k(a, c, a.val());
      f(a, c, "minDate");
      f(c, a, "maxDate");
      return m([a.get(0), c.get(0)]);
    };
    m.timepicker.log = function (d) {
      window.console && console.log(d);
    };
    m.timepicker.version = "1.2.2";
  }
})(jQuery);
(function (m) {
  function u(d, a) {
    var c = document.createElementNS("http://www.w3.org/2000/svg", d || "svg");
    a &&
      m.each(a, function (a, d) {
        c.setAttributeNS(null, a, d);
      });
    return m(c);
  }
  m.fn.activity = function (d) {
    this.each(function () {
      var a = m(this),
        c = a.data("activity");
      c &&
        (clearInterval(c.data("interval")),
        c.remove(),
        a.removeData("activity"));
      if (!1 !== d) {
        d = m.extend({ color: a.css("color") }, m.fn.activity.defaults, d);
        c = n(a, d)
          .css("position", "absolute")
          .prependTo(d.outside ? "body" : a);
        var e = a.outerHeight() - c.height(),
          k = a.outerWidth() - c.width();
        e =
          "top" == d.valign
            ? d.padding
            : "bottom" == d.valign
            ? e - d.padding
            : Math.floor(e / 2);
        k =
          "left" == d.align
            ? d.padding
            : "right" == d.align
            ? k - d.padding
            : Math.floor(k / 2);
        var f = a.offset();
        d.outside
          ? c.css({ top: f.top + "px", left: f.left + "px" })
          : ((e -= c.offset().top - f.top), (k -= c.offset().left - f.left));
        c.css({ marginTop: e + "px", marginLeft: k + "px" });
        t(c, d.segments, Math.round(10 / d.speed) / 10);
        a.data("activity", c);
      }
    });
    return this;
  };
  m.fn.activity.defaults = {
    segments: 12,
    space: 3,
    length: 7,
    width: 4,
    speed: 1.2,
    align: "center",
    valign: "center",
    padding: 4,
  };
  m.fn.activity.getOpacity = function (d, a) {
    var c = d.steps || d.segments - 1;
    return (
      1 -
      (Math.min(a, c) * (1 - (void 0 !== d.opacity ? d.opacity : 1 / c))) / c
    );
  };
  var n = function () {
      return m("<div>").addClass("busy");
    },
    t = function () {};
  if (
    document.createElementNS &&
    document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect
  )
    if (
      ((n = function (d, a) {
        d = 2 * a.width + a.space;
        for (
          var c = d + a.length + Math.ceil(a.width / 2) + 1,
            e = u()
              .width(2 * c)
              .height(2 * c),
            k = u("g", {
              "stroke-width": a.width,
              "stroke-linecap": "round",
              stroke: a.color,
            }).appendTo(
              u("g", { transform: "translate(" + c + "," + c + ")" }).appendTo(
                e
              )
            ),
            f = 0;
          f < a.segments;
          f++
        )
          k.append(
            u("line", {
              x1: 0,
              y1: d,
              x2: 0,
              y2: d + a.length,
              transform: "rotate(" + (360 / a.segments) * f + ", 0, 0)",
              opacity: m.fn.activity.getOpacity(a, f),
            })
          );
        return m("<div>")
          .append(e)
          .width(2 * c)
          .height(2 * c);
      }),
      void 0 !== document.createElement("div").style.WebkitAnimationName)
    ) {
      var h = {};
      t = function (d, a, c) {
        if (!h[a]) {
          for (
            var e = "spin" + a, k = "@-webkit-keyframes " + e + " {", f = 0;
            f < a;
            f++
          ) {
            var v =
              "% { -webkit-transform:rotate(" +
              Math.round((360 / a) * f) +
              "deg); }\n";
            k +=
              Math.round((1e5 / a) * f) / 1e3 +
              v +
              Math.round((1e5 / a) * (f + 1) - 1) / 1e3 +
              v;
          }
          try {
            document.styleSheets[0].insertRule(
              k + "100% { -webkit-transform:rotate(100deg); }\n}",
              0
            );
          } catch (q) {
            if ("SecurityError" !== q.name) throw q;
          }
          h[a] = e;
        }
        d.css("-webkit-animation", h[a] + " " + c + "s linear infinite");
      };
    } else
      t = function (d, a, c) {
        var e = 0,
          k = d.find("g g").get(0);
        d.data(
          "interval",
          setInterval(function () {
            k.setAttributeNS(
              null,
              "transform",
              "rotate(" + (++e % a) * (360 / a) + ")"
            );
          }, (1e3 * c) / a)
        );
      };
  else {
    var l = m("<shape>").css("behavior", "url(#default#VML)");
    m("body").append(l);
    if (l.get(0).adj) {
      var f = document.createStyleSheet();
      m.each(["group", "shape", "stroke"], function () {
        f.addRule(this, "behavior:url(#default#VML);");
      });
      n = function (d, a) {
        d = 2 * a.width + a.space;
        var c = 2 * (d + a.length + Math.ceil(a.width / 2) + 1),
          e = -Math.ceil(c / 2);
        e = m("<group>", {
          coordsize: c + " " + c,
          coordorigin: e + " " + e,
        }).css({ top: e, left: e, width: c, height: c });
        for (var k = 0; k < a.segments; k++)
          e.append(
            m("<shape>", { path: "m " + d + ",0  l " + (d + a.length) + ",0" })
              .css({
                width: c,
                height: c,
                rotation: (360 / a.segments) * k + "deg",
              })
              .append(
                m("<stroke>", {
                  color: a.color,
                  weight: a.width + "px",
                  endcap: "round",
                  opacity: m.fn.activity.getOpacity(a, k),
                })
              )
          );
        return m("<group>", { coordsize: c + " " + c })
          .css({ width: c, height: c, overflow: "hidden" })
          .append(e);
      };
      t = function (d, a, c) {
        var e = 0,
          k = d.get(0);
        d.data(
          "interval",
          setInterval(function () {
            k.style.rotation = (++e % a) * (360 / a);
          }, (1e3 * c) / a)
        );
      };
    }
    m(l).remove();
  }
})(jQuery);
(function (m) {
  function u(f, d) {
    var a = f.data("transform");
    a || ((a = new t()), f.data("transform", a));
    void 0 !== d && (!1 === d || d.reset ? a.reset() : a.exec(d));
    return a;
  }
  function n(f, d) {
    function a(a, e) {
      return a.replace(/\{(\w+)\}/g, function (a, c) {
        return e[c];
      });
    }
    this.reset = function () {
      m.extend(this, d);
    };
    this.format = function () {
      return a(f, this);
    };
    this.reset();
  }
  function t() {
    var f = {
      translate: new n("translate({x}px,{y}px)", { x: 0, y: 0 }),
      scale: new n("scale({x},{y})", { x: 1, y: 1 }),
      rotate: new n("rotate({deg}deg)", { deg: 0 }),
    };
    l &&
      ((f.translate = new n("translate3d({x}px,{y}px,0px)", { x: 0, y: 0 })),
      (f.scale = new n("scale3d({x},{y},1)", { x: 1, y: 1 })));
    var d = {
      rotate: function (a) {
        f.rotate.deg = a;
      },
      rotateBy: function (a) {
        f.rotate.deg += a;
      },
      scale: function (a) {
        "number" == typeof a && (a = { x: a, y: a });
        f.scale.x = a.x;
        f.scale.y = a.y;
      },
      scaleBy: function (a) {
        "number" == typeof a && (a = { x: a, y: a });
        f.scale.x *= a.x;
        f.scale.y *= a.y;
      },
      translate: function (a) {
        var c = f.translate;
        a || (a = { x: 0, y: 0 });
        c.x = void 0 !== a.x ? parseInt(a.x, 10) : c.x;
        c.y = void 0 !== a.y ? parseInt(a.y, 10) : c.y;
      },
      translateBy: function (a) {
        var c = f.translate;
        c.x += parseInt(a.x, 10) || 0;
        c.y += parseInt(a.y, 10) || 0;
      },
    };
    this.fn = f;
    this.exec = function (a) {
      for (var c in a) if (d[c]) d[c](a[c]);
    };
    this.reset = function () {
      m.each(f, function () {
        this.reset();
      });
    };
    this.format = function () {
      var a = "";
      m.each(f, function (c, e) {
        a += e.format() + " ";
      });
      return a;
    };
  }
  var h = (function () {
      function f(e) {
        var c = "";
        if (void 0 !== a[e]) return e;
        m.each(d, function () {
          var d = this + e.charAt(0).toUpperCase() + e.substring(1);
          if (void 0 !== a[d]) return (c = d), !1;
        });
        return c;
      }
      var d = ["Webkit", "Moz", "O"],
        a = document.createElement("div").style,
        c = {};
      m.each(
        [
          "transitionDuration",
          "transitionProperty",
          "transform",
          "transformOrigin",
        ],
        function (a, d) {
          c[this] = f(d);
        }
      );
      return c;
    })(),
    l = (function () {
      var f = document.createElement("div").style;
      try {
        return (
          (f[h.transform] = "translate3d(0,0,0)"), 0 < f[h.transform].length
        );
      } catch (d) {
        return !1;
      }
    })();
  m.fn.transform = function (f) {
    var d = this;
    m.fn.transform.supported &&
      this.each(function () {
        var a = m(this),
          c = u(a, f);
        if (void 0 === f) return (d = c.fn), !1;
        var e = f && f.origin ? f.origin : "0 0";
        a.css(h.transitionDuration, "0s")
          .css(h.transformOrigin, e)
          .css(h.transform, c.format());
      });
    return d;
  };
  m.fn.transform.supported = !!h.transform;
  m.fn.transition = function (f, d) {
    d = m.extend({ delay: 0, duration: 0.4 }, d);
    var a = "";
    m.each(f, function (c, e) {
      a += c + ",";
    });
    this.each(function () {
      function c() {
        k.css(h.transitionProperty, a).css(
          h.transitionDuration,
          d.duration + "s"
        );
        k.css(f);
        if (0 < d.duration)
          k.one(
            "webkitTransitionEnd oTransitionEnd otransitionend transitionend",
            e
          );
        else setTimeout(e, 1);
      }
      function e() {
        k.css(h.transitionDuration, w);
        d.onFinish && m.proxy(d.onFinish, k)();
      }
      var k = m(this);
      if (m.fn.transition.supported) {
        var w = k.css(h.transitionDuration);
        0 < d.delay ? setTimeout(c, d.delay) : c();
      } else k.css(f), d.onFinish && m.proxy(d.onFinish, k)();
    });
    return this;
  };
  m.fn.transition.supported = !!h.transitionProperty;
  m.fn.transformTransition = function (f) {
    f = m.extend({ origin: "0 0", css: {} }, f);
    var d = f.css;
    m.fn.transform.supported &&
      ((d[h.transform] = u(this, f).format()),
      this.css(h.transformOrigin, f.origin));
    return this.transition(d, f);
  };
})(jQuery);
(function (m) {
  "object" === typeof exports && "undefined" !== typeof module
    ? (module.exports = m())
    : "function" === typeof define && define.amd
    ? define([], m)
    : (("undefined" !== typeof window
        ? window
        : "undefined" !== typeof global
        ? global
        : "undefined" !== typeof self
        ? self
        : this
      ).Chart = m());
})(function () {
  return (function h(u, n, t) {
    function l(a, c) {
      if (!n[a]) {
        if (!u[a]) {
          var e = "function" == typeof require && require;
          if (!c && e) return e(a, !0);
          if (f) return f(a, !0);
          c = Error("Cannot find module '" + a + "'");
          throw ((c.code = "MODULE_NOT_FOUND"), c);
        }
        c = n[a] = { exports: {} };
        u[a][0].call(
          c.exports,
          function (e) {
            var c = u[a][1][e];
            return l(c ? c : e);
          },
          c,
          c.exports,
          h,
          u,
          n,
          t
        );
      }
      return n[a].exports;
    }
    for (
      var f = "function" == typeof require && require, d = 0;
      d < t.length;
      d++
    )
      l(t[d]);
    return l;
  })(
    {
      1: [function (u, n, t) {}, {}],
      2: [
        function (u, n, t) {
          function h(a) {
            if (a) {
              var c = /^#([a-fA-F0-9]{6})$/,
                d =
                  /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
                k =
                  /^rgba?\(\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
                p = /(\w+)/,
                f = [0, 0, 0],
                q = 1,
                v = a.match(/^#([a-fA-F0-9]{3})$/);
              if (v)
                for (v = v[1], a = 0; a < f.length; a++)
                  f[a] = parseInt(v[a] + v[a], 16);
              else if ((v = a.match(c)))
                for (v = v[1], a = 0; a < f.length; a++)
                  f[a] = parseInt(v.slice(2 * a, 2 * a + 2), 16);
              else if ((v = a.match(d))) {
                for (a = 0; a < f.length; a++) f[a] = parseInt(v[a + 1]);
                q = parseFloat(v[4]);
              } else if ((v = a.match(k))) {
                for (a = 0; a < f.length; a++)
                  f[a] = Math.round(2.55 * parseFloat(v[a + 1]));
                q = parseFloat(v[4]);
              } else if ((v = a.match(p))) {
                if ("transparent" == v[1]) return [0, 0, 0, 0];
                f = w[v[1]];
                if (!f) return;
              }
              for (a = 0; a < f.length; a++) f[a] = e(f[a], 0, 255);
              q = q || 0 == q ? e(q, 0, 1) : 1;
              f[3] = q;
              return f;
            }
          }
          function l(a) {
            if (a) {
              var c = a.match(
                /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/
              );
              if (c) {
                var d = parseFloat(c[4]);
                a = e(parseInt(c[1]), 0, 360);
                var k = e(parseFloat(c[2]), 0, 100);
                c = e(parseFloat(c[3]), 0, 100);
                d = e(isNaN(d) ? 1 : d, 0, 1);
                return [a, k, c, d];
              }
            }
          }
          function f(a) {
            if (a) {
              var c = a.match(
                /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/
              );
              if (c) {
                var d = parseFloat(c[4]);
                a = e(parseInt(c[1]), 0, 360);
                var k = e(parseFloat(c[2]), 0, 100);
                c = e(parseFloat(c[3]), 0, 100);
                d = e(isNaN(d) ? 1 : d, 0, 1);
                return [a, k, c, d];
              }
            }
          }
          function d(a, e) {
            void 0 === e && (e = void 0 !== a[3] ? a[3] : 1);
            return "rgba(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + e + ")";
          }
          function a(a, e) {
            return (
              "rgba(" +
              Math.round((a[0] / 255) * 100) +
              "%, " +
              Math.round((a[1] / 255) * 100) +
              "%, " +
              Math.round((a[2] / 255) * 100) +
              "%, " +
              (e || a[3] || 1) +
              ")"
            );
          }
          function c(a, e) {
            void 0 === e && (e = void 0 !== a[3] ? a[3] : 1);
            return (
              "hsla(" + a[0] + ", " + a[1] + "%, " + a[2] + "%, " + e + ")"
            );
          }
          function e(a, e, c) {
            return Math.min(Math.max(e, a), c);
          }
          function k(a) {
            a = a.toString(16).toUpperCase();
            return 2 > a.length ? "0" + a : a;
          }
          var w = u(6);
          n.exports = {
            getRgba: h,
            getHsla: l,
            getRgb: function (a) {
              return (a = h(a)) && a.slice(0, 3);
            },
            getHsl: function (a) {
              return (a = l(a)) && a.slice(0, 3);
            },
            getHwb: f,
            getAlpha: function (a) {
              var e = h(a);
              if (e || (e = l(a)) || (e = f(a))) return e[3];
            },
            hexString: function (a) {
              return "#" + k(a[0]) + k(a[1]) + k(a[2]);
            },
            rgbString: function (a, e) {
              return 1 > e || (a[3] && 1 > a[3])
                ? d(a, e)
                : "rgb(" + a[0] + ", " + a[1] + ", " + a[2] + ")";
            },
            rgbaString: d,
            percentString: function (e, c) {
              return 1 > c || (e[3] && 1 > e[3])
                ? a(e, c)
                : "rgb(" +
                    Math.round((e[0] / 255) * 100) +
                    "%, " +
                    Math.round((e[1] / 255) * 100) +
                    "%, " +
                    Math.round((e[2] / 255) * 100) +
                    "%)";
            },
            percentaString: a,
            hslString: function (a, e) {
              return 1 > e || (a[3] && 1 > a[3])
                ? c(a, e)
                : "hsl(" + a[0] + ", " + a[1] + "%, " + a[2] + "%)";
            },
            hslaString: c,
            hwbString: function (a, e) {
              void 0 === e && (e = void 0 !== a[3] ? a[3] : 1);
              return (
                "hwb(" +
                a[0] +
                ", " +
                a[1] +
                "%, " +
                a[2] +
                "%" +
                (void 0 !== e && 1 !== e ? ", " + e : "") +
                ")"
              );
            },
            keyword: function (a) {
              return v[a.slice(0, 3)];
            },
          };
          var v = {},
            q;
          for (q in w) v[w[q]] = q;
        },
        { 6: 6 },
      ],
      3: [
        function (u, n, t) {
          var h = u(5),
            l = u(2),
            f = function (d) {
              if (d instanceof f) return d;
              if (!(this instanceof f)) return new f(d);
              this.values = {
                rgb: [0, 0, 0],
                hsl: [0, 0, 0],
                hsv: [0, 0, 0],
                hwb: [0, 0, 0],
                cmyk: [0, 0, 0, 0],
                alpha: 1,
              };
              var a;
              if ("string" === typeof d)
                if ((a = l.getRgba(d))) this.setValues("rgb", a);
                else if ((a = l.getHsla(d))) this.setValues("hsl", a);
                else if ((a = l.getHwb(d))) this.setValues("hwb", a);
                else
                  throw Error('Unable to parse color from string "' + d + '"');
              else if ("object" === typeof d)
                if (((a = d), void 0 !== a.r || void 0 !== a.red))
                  this.setValues("rgb", a);
                else if (void 0 !== a.l || void 0 !== a.lightness)
                  this.setValues("hsl", a);
                else if (void 0 !== a.v || void 0 !== a.value)
                  this.setValues("hsv", a);
                else if (void 0 !== a.w || void 0 !== a.whiteness)
                  this.setValues("hwb", a);
                else if (void 0 !== a.c || void 0 !== a.cyan)
                  this.setValues("cmyk", a);
                else
                  throw Error(
                    "Unable to parse color from object " + JSON.stringify(d)
                  );
            };
          f.prototype = {
            rgb: function () {
              return this.setSpace("rgb", arguments);
            },
            hsl: function () {
              return this.setSpace("hsl", arguments);
            },
            hsv: function () {
              return this.setSpace("hsv", arguments);
            },
            hwb: function () {
              return this.setSpace("hwb", arguments);
            },
            cmyk: function () {
              return this.setSpace("cmyk", arguments);
            },
            rgbArray: function () {
              return this.values.rgb;
            },
            hslArray: function () {
              return this.values.hsl;
            },
            hsvArray: function () {
              return this.values.hsv;
            },
            hwbArray: function () {
              var d = this.values;
              return 1 !== d.alpha ? d.hwb.concat([d.alpha]) : d.hwb;
            },
            cmykArray: function () {
              return this.values.cmyk;
            },
            rgbaArray: function () {
              var d = this.values;
              return d.rgb.concat([d.alpha]);
            },
            hslaArray: function () {
              var d = this.values;
              return d.hsl.concat([d.alpha]);
            },
            alpha: function (d) {
              if (void 0 === d) return this.values.alpha;
              this.setValues("alpha", d);
              return this;
            },
            red: function (d) {
              return this.setChannel("rgb", 0, d);
            },
            green: function (d) {
              return this.setChannel("rgb", 1, d);
            },
            blue: function (d) {
              return this.setChannel("rgb", 2, d);
            },
            hue: function (d) {
              d && ((d %= 360), (d = 0 > d ? 360 + d : d));
              return this.setChannel("hsl", 0, d);
            },
            saturation: function (d) {
              return this.setChannel("hsl", 1, d);
            },
            lightness: function (d) {
              return this.setChannel("hsl", 2, d);
            },
            saturationv: function (d) {
              return this.setChannel("hsv", 1, d);
            },
            whiteness: function (d) {
              return this.setChannel("hwb", 1, d);
            },
            blackness: function (d) {
              return this.setChannel("hwb", 2, d);
            },
            value: function (d) {
              return this.setChannel("hsv", 2, d);
            },
            cyan: function (d) {
              return this.setChannel("cmyk", 0, d);
            },
            magenta: function (d) {
              return this.setChannel("cmyk", 1, d);
            },
            yellow: function (d) {
              return this.setChannel("cmyk", 2, d);
            },
            black: function (d) {
              return this.setChannel("cmyk", 3, d);
            },
            hexString: function () {
              return l.hexString(this.values.rgb);
            },
            rgbString: function () {
              return l.rgbString(this.values.rgb, this.values.alpha);
            },
            rgbaString: function () {
              return l.rgbaString(this.values.rgb, this.values.alpha);
            },
            percentString: function () {
              return l.percentString(this.values.rgb, this.values.alpha);
            },
            hslString: function () {
              return l.hslString(this.values.hsl, this.values.alpha);
            },
            hslaString: function () {
              return l.hslaString(this.values.hsl, this.values.alpha);
            },
            hwbString: function () {
              return l.hwbString(this.values.hwb, this.values.alpha);
            },
            keyword: function () {
              return l.keyword(this.values.rgb, this.values.alpha);
            },
            rgbNumber: function () {
              var d = this.values.rgb;
              return (d[0] << 16) | (d[1] << 8) | d[2];
            },
            luminosity: function () {
              for (var d = this.values.rgb, a = [], c = 0; c < d.length; c++) {
                var e = d[c] / 255;
                a[c] =
                  0.03928 >= e ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4);
              }
              return 0.2126 * a[0] + 0.7152 * a[1] + 0.0722 * a[2];
            },
            contrast: function (d) {
              var a = this.luminosity();
              d = d.luminosity();
              return a > d ? (a + 0.05) / (d + 0.05) : (d + 0.05) / (a + 0.05);
            },
            level: function (d) {
              d = this.contrast(d);
              return 7.1 <= d ? "AAA" : 4.5 <= d ? "AA" : "";
            },
            dark: function () {
              var d = this.values.rgb;
              return 128 > (299 * d[0] + 587 * d[1] + 114 * d[2]) / 1e3;
            },
            light: function () {
              return !this.dark();
            },
            negate: function () {
              for (var d = [], a = 0; 3 > a; a++)
                d[a] = 255 - this.values.rgb[a];
              this.setValues("rgb", d);
              return this;
            },
            lighten: function (d) {
              var a = this.values.hsl;
              a[2] += a[2] * d;
              this.setValues("hsl", a);
              return this;
            },
            darken: function (d) {
              var a = this.values.hsl;
              a[2] -= a[2] * d;
              this.setValues("hsl", a);
              return this;
            },
            saturate: function (d) {
              var a = this.values.hsl;
              a[1] += a[1] * d;
              this.setValues("hsl", a);
              return this;
            },
            desaturate: function (d) {
              var a = this.values.hsl;
              a[1] -= a[1] * d;
              this.setValues("hsl", a);
              return this;
            },
            whiten: function (d) {
              var a = this.values.hwb;
              a[1] += a[1] * d;
              this.setValues("hwb", a);
              return this;
            },
            blacken: function (d) {
              var a = this.values.hwb;
              a[2] += a[2] * d;
              this.setValues("hwb", a);
              return this;
            },
            greyscale: function () {
              var d = this.values.rgb;
              d = 0.3 * d[0] + 0.59 * d[1] + 0.11 * d[2];
              this.setValues("rgb", [d, d, d]);
              return this;
            },
            clearer: function (d) {
              var a = this.values.alpha;
              this.setValues("alpha", a - a * d);
              return this;
            },
            opaquer: function (d) {
              var a = this.values.alpha;
              this.setValues("alpha", a + a * d);
              return this;
            },
            rotate: function (d) {
              var a = this.values.hsl;
              d = (a[0] + d) % 360;
              a[0] = 0 > d ? 360 + d : d;
              this.setValues("hsl", a);
              return this;
            },
            mix: function (d, a) {
              a = void 0 === a ? 0.5 : a;
              var c = 2 * a - 1,
                e = this.alpha() - d.alpha();
              c = ((-1 === c * e ? c : (c + e) / (1 + c * e)) + 1) / 2;
              e = 1 - c;
              return this.rgb(
                c * this.red() + e * d.red(),
                c * this.green() + e * d.green(),
                c * this.blue() + e * d.blue()
              ).alpha(this.alpha() * a + d.alpha() * (1 - a));
            },
            toJSON: function () {
              return this.rgb();
            },
            clone: function () {
              var d = new f(),
                a = this.values,
                c = d.values,
                e;
              for (e in a)
                if (a.hasOwnProperty(e)) {
                  var k = a[e],
                    w = {}.toString.call(k);
                  "[object Array]" === w
                    ? (c[e] = k.slice(0))
                    : "[object Number]" === w
                    ? (c[e] = k)
                    : console.error("unexpected color value:", k);
                }
              return d;
            },
          };
          f.prototype.spaces = {
            rgb: ["red", "green", "blue"],
            hsl: ["hue", "saturation", "lightness"],
            hsv: ["hue", "saturation", "value"],
            hwb: ["hue", "whiteness", "blackness"],
            cmyk: ["cyan", "magenta", "yellow", "black"],
          };
          f.prototype.maxes = {
            rgb: [255, 255, 255],
            hsl: [360, 100, 100],
            hsv: [360, 100, 100],
            hwb: [360, 100, 100],
            cmyk: [100, 100, 100, 100],
          };
          f.prototype.getValues = function (d) {
            for (var a = this.values, c = {}, e = 0; e < d.length; e++)
              c[d.charAt(e)] = a[d][e];
            1 !== a.alpha && (c.a = a.alpha);
            return c;
          };
          f.prototype.setValues = function (d, a) {
            var c = this.values,
              e = this.spaces,
              k = this.maxes,
              f = 1;
            if ("alpha" === d) f = a;
            else if (a.length) (c[d] = a.slice(0, d.length)), (f = a[d.length]);
            else if (void 0 !== a[d.charAt(0)]) {
              for (f = 0; f < d.length; f++) c[d][f] = a[d.charAt(f)];
              f = a.a;
            } else if (void 0 !== a[e[d][0]]) {
              var v = e[d];
              for (f = 0; f < d.length; f++) c[d][f] = a[v[f]];
              f = a.alpha;
            }
            c.alpha = Math.max(0, Math.min(1, void 0 === f ? c.alpha : f));
            if ("alpha" === d) return !1;
            for (f = 0; f < d.length; f++)
              (a = Math.max(0, Math.min(k[d][f], c[d][f]))),
                (c[d][f] = Math.round(a));
            for (var q in e) q !== d && (c[q] = h[d][q](c[d]));
            return !0;
          };
          f.prototype.setSpace = function (d, a) {
            var c = a[0];
            if (void 0 === c) return this.getValues(d);
            "number" === typeof c && (c = Array.prototype.slice.call(a));
            this.setValues(d, c);
            return this;
          };
          f.prototype.setChannel = function (d, a, c) {
            var e = this.values[d];
            if (void 0 === c) return e[a];
            if (c === e[a]) return this;
            e[a] = c;
            this.setValues(d, e);
            return this;
          };
          "undefined" !== typeof window && (window.Color = f);
          n.exports = f;
        },
        { 2: 2, 5: 5 },
      ],
      4: [
        function (u, n, t) {
          function h(a) {
            var e = a[0] / 255,
              c = a[1] / 255,
              d = a[2] / 255;
            a = Math.min(e, c, d);
            var k = Math.max(e, c, d),
              f = k - a,
              p;
            k == a
              ? (p = 0)
              : e == k
              ? (p = (c - d) / f)
              : c == k
              ? (p = 2 + (d - e) / f)
              : d == k && (p = 4 + (e - c) / f);
            p = Math.min(60 * p, 360);
            0 > p && (p += 360);
            e = (a + k) / 2;
            return [
              p,
              100 * (k == a ? 0 : 0.5 >= e ? f / (k + a) : f / (2 - k - a)),
              100 * e,
            ];
          }
          function l(a) {
            var e = a[0],
              c = a[1];
            a = a[2];
            var d = Math.min(e, c, a),
              k = Math.max(e, c, a),
              f = k - d,
              p;
            k == d
              ? (p = 0)
              : e == k
              ? (p = (c - a) / f)
              : c == k
              ? (p = 2 + (a - e) / f)
              : a == k && (p = 4 + (e - c) / f);
            p = Math.min(60 * p, 360);
            0 > p && (p += 360);
            return [
              p,
              0 == k ? 0 : ((f / k) * 1e3) / 10,
              ((k / 255) * 1e3) / 10,
            ];
          }
          function f(a) {
            var e = a[0],
              c = a[1],
              d = a[2];
            a = h(a)[0];
            var k = (1 / 255) * Math.min(e, Math.min(c, d));
            d = 1 - (1 / 255) * Math.max(e, Math.max(c, d));
            return [a, 100 * k, 100 * d];
          }
          function d(a) {
            var e = a[0] / 255,
              c = a[1] / 255;
            a = a[2] / 255;
            var d = Math.min(1 - e, 1 - c, 1 - a);
            return [
              100 * ((1 - e - d) / (1 - d) || 0),
              100 * ((1 - c - d) / (1 - d) || 0),
              100 * ((1 - a - d) / (1 - d) || 0),
              100 * d,
            ];
          }
          function a(a) {
            return A[JSON.stringify(a)];
          }
          function c(a) {
            var e = a[0] / 255,
              c = a[1] / 255;
            a = a[2] / 255;
            e = 0.04045 < e ? Math.pow((e + 0.055) / 1.055, 2.4) : e / 12.92;
            c = 0.04045 < c ? Math.pow((c + 0.055) / 1.055, 2.4) : c / 12.92;
            a = 0.04045 < a ? Math.pow((a + 0.055) / 1.055, 2.4) : a / 12.92;
            return [
              100 * (0.4124 * e + 0.3576 * c + 0.1805 * a),
              100 * (0.2126 * e + 0.7152 * c + 0.0722 * a),
              100 * (0.0193 * e + 0.1192 * c + 0.9505 * a),
            ];
          }
          function e(a) {
            var e = c(a);
            a = e[0];
            var d = e[1];
            e = e[2];
            a /= 95.047;
            d /= 100;
            e /= 108.883;
            a = 0.008856 < a ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116;
            d = 0.008856 < d ? Math.pow(d, 1 / 3) : 7.787 * d + 16 / 116;
            e = 0.008856 < e ? Math.pow(e, 1 / 3) : 7.787 * e + 16 / 116;
            return [116 * d - 16, 500 * (a - d), 200 * (d - e)];
          }
          function k(a) {
            var e = a[0] / 360,
              c = a[1] / 100;
            a = a[2] / 100;
            if (0 == c) {
              var d = 255 * a;
              return [d, d, d];
            }
            c = 0.5 > a ? a * (1 + c) : a + c - a * c;
            a = 2 * a - c;
            for (var k = [0, 0, 0], f = 0; 3 > f; f++)
              (d = e + (1 / 3) * -(f - 1)),
                0 > d && d++,
                1 < d && d--,
                (d =
                  1 > 6 * d
                    ? a + 6 * (c - a) * d
                    : 1 > 2 * d
                    ? c
                    : 2 > 3 * d
                    ? a + (c - a) * (2 / 3 - d) * 6
                    : a),
                (k[f] = 255 * d);
            return k;
          }
          function w(a) {
            var e = a[0] / 60,
              c = a[1] / 100;
            a = a[2] / 100;
            var d = Math.floor(e) % 6,
              k = e - Math.floor(e);
            e = 255 * a * (1 - c);
            var f = 255 * a * (1 - c * k);
            c = 255 * a * (1 - c * (1 - k));
            a *= 255;
            switch (d) {
              case 0:
                return [a, c, e];
              case 1:
                return [f, a, e];
              case 2:
                return [e, a, c];
              case 3:
                return [e, f, a];
              case 4:
                return [c, e, a];
              case 5:
                return [a, e, f];
            }
          }
          function v(a) {
            var e = a[0] / 360,
              c = a[1] / 100,
              d = a[2] / 100;
            a = c + d;
            1 < a && ((c /= a), (d /= a));
            a = Math.floor(6 * e);
            d = 1 - d;
            e = 6 * e - a;
            0 != (a & 1) && (e = 1 - e);
            e = c + e * (d - c);
            switch (a) {
              default:
              case 6:
              case 0:
                r = d;
                g = e;
                b = c;
                break;
              case 1:
                r = e;
                g = d;
                b = c;
                break;
              case 2:
                r = c;
                g = d;
                b = e;
                break;
              case 3:
                r = c;
                g = e;
                b = d;
                break;
              case 4:
                r = e;
                g = c;
                b = d;
                break;
              case 5:
                (r = d), (g = c), (b = e);
            }
            return [255 * r, 255 * g, 255 * b];
          }
          function q(a) {
            var e = a[3] / 100;
            return [
              255 * (1 - Math.min(1, (a[0] / 100) * (1 - e) + e)),
              255 * (1 - Math.min(1, (a[1] / 100) * (1 - e) + e)),
              255 * (1 - Math.min(1, (a[2] / 100) * (1 - e) + e)),
            ];
          }
          function p(a) {
            var e = a[0] / 100,
              c = a[1] / 100,
              d = a[2] / 100;
            a = 3.2406 * e + -1.5372 * c + -0.4986 * d;
            var k = -0.9689 * e + 1.8758 * c + 0.0415 * d;
            e = 0.0557 * e + -0.204 * c + 1.057 * d;
            a =
              0.0031308 < a
                ? 1.055 * Math.pow(a, 1 / 2.4) - 0.055
                : (a *= 12.92);
            k =
              0.0031308 < k
                ? 1.055 * Math.pow(k, 1 / 2.4) - 0.055
                : (k *= 12.92);
            e =
              0.0031308 < e
                ? 1.055 * Math.pow(e, 1 / 2.4) - 0.055
                : (e *= 12.92);
            a = Math.min(Math.max(0, a), 1);
            k = Math.min(Math.max(0, k), 1);
            e = Math.min(Math.max(0, e), 1);
            return [255 * a, 255 * k, 255 * e];
          }
          function x(a) {
            var e = a[0],
              c = a[1];
            a = a[2];
            e /= 95.047;
            c /= 100;
            a /= 108.883;
            e = 0.008856 < e ? Math.pow(e, 1 / 3) : 7.787 * e + 16 / 116;
            c = 0.008856 < c ? Math.pow(c, 1 / 3) : 7.787 * c + 16 / 116;
            a = 0.008856 < a ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116;
            return [116 * c - 16, 500 * (e - c), 200 * (c - a)];
          }
          function y(a) {
            var e = a[0],
              c = a[1];
            a = a[2];
            if (8 >= e) {
              e = (100 * e) / 903.3;
              var d = (e / 100) * 7.787 + 16 / 116;
            } else
              (e = 100 * Math.pow((e + 16) / 116, 3)),
                (d = Math.pow(e / 100, 1 / 3));
            var k =
                0.008856 >= k / 95.047
                  ? (k = (95.047 * (c / 500 + d - 16 / 116)) / 7.787)
                  : 95.047 * Math.pow(c / 500 + d, 3),
              f =
                0.008859 >= f / 108.883
                  ? (f = (108.883 * (d - a / 200 - 16 / 116)) / 7.787)
                  : 108.883 * Math.pow(d - a / 200, 3);
            return [k, e, f];
          }
          function F(a) {
            var e = a[0],
              c = a[1];
            a = a[2];
            var d = (360 * Math.atan2(a, c)) / 2 / Math.PI;
            0 > d && (d += 360);
            return [e, Math.sqrt(c * c + a * a), d];
          }
          function E(a) {
            return p(y(a));
          }
          function B(a) {
            var e = a[0],
              c = a[1];
            a = (a[2] / 360) * 2 * Math.PI;
            return [e, c * Math.cos(a), c * Math.sin(a)];
          }
          n.exports = {
            rgb2hsl: h,
            rgb2hsv: l,
            rgb2hwb: f,
            rgb2cmyk: d,
            rgb2keyword: a,
            rgb2xyz: c,
            rgb2lab: e,
            rgb2lch: function (a) {
              return F(e(a));
            },
            hsl2rgb: k,
            hsl2hsv: function (a) {
              var e = a[0],
                c = a[1] / 100;
              a = a[2] / 100;
              if (0 === a) return [0, 0, 0];
              a *= 2;
              c *= 1 >= a ? a : 2 - a;
              return [e, ((2 * c) / (a + c)) * 100, ((a + c) / 2) * 100];
            },
            hsl2hwb: function (a) {
              return f(k(a));
            },
            hsl2cmyk: function (a) {
              return d(k(a));
            },
            hsl2keyword: function (e) {
              return a(k(e));
            },
            hsv2rgb: w,
            hsv2hsl: function (a) {
              var e = a[0],
                c = a[1] / 100,
                d = a[2] / 100;
              a = (2 - c) * d;
              return [
                e,
                100 * ((c * d) / (1 >= a ? a : 2 - a) || 0),
                (a / 2) * 100,
              ];
            },
            hsv2hwb: function (a) {
              return f(w(a));
            },
            hsv2cmyk: function (a) {
              return d(w(a));
            },
            hsv2keyword: function (e) {
              return a(w(e));
            },
            hwb2rgb: v,
            hwb2hsl: function (a) {
              return h(v(a));
            },
            hwb2hsv: function (a) {
              return l(v(a));
            },
            hwb2cmyk: function (a) {
              return d(v(a));
            },
            hwb2keyword: function (e) {
              return a(v(e));
            },
            cmyk2rgb: q,
            cmyk2hsl: function (a) {
              return h(q(a));
            },
            cmyk2hsv: function (a) {
              return l(q(a));
            },
            cmyk2hwb: function (a) {
              return f(q(a));
            },
            cmyk2keyword: function (e) {
              return a(q(e));
            },
            keyword2rgb: function (a) {
              return G[a];
            },
            keyword2hsl: function (a) {
              return h(G[a]);
            },
            keyword2hsv: function (a) {
              return l(G[a]);
            },
            keyword2hwb: function (a) {
              return f(G[a]);
            },
            keyword2cmyk: function (a) {
              return d(G[a]);
            },
            keyword2lab: function (a) {
              return e(G[a]);
            },
            keyword2xyz: function (a) {
              return c(G[a]);
            },
            xyz2rgb: p,
            xyz2lab: x,
            xyz2lch: function (a) {
              return F(x(a));
            },
            lab2xyz: y,
            lab2rgb: E,
            lab2lch: F,
            lch2lab: B,
            lch2xyz: function (a) {
              return y(B(a));
            },
            lch2rgb: function (a) {
              return E(B(a));
            },
          };
          var G = {
              aliceblue: [240, 248, 255],
              antiquewhite: [250, 235, 215],
              aqua: [0, 255, 255],
              aquamarine: [127, 255, 212],
              azure: [240, 255, 255],
              beige: [245, 245, 220],
              bisque: [255, 228, 196],
              black: [0, 0, 0],
              blanchedalmond: [255, 235, 205],
              blue: [0, 0, 255],
              blueviolet: [138, 43, 226],
              brown: [165, 42, 42],
              burlywood: [222, 184, 135],
              cadetblue: [95, 158, 160],
              chartreuse: [127, 255, 0],
              chocolate: [210, 105, 30],
              coral: [255, 127, 80],
              cornflowerblue: [100, 149, 237],
              cornsilk: [255, 248, 220],
              crimson: [220, 20, 60],
              cyan: [0, 255, 255],
              darkblue: [0, 0, 139],
              darkcyan: [0, 139, 139],
              darkgoldenrod: [184, 134, 11],
              darkgray: [169, 169, 169],
              darkgreen: [0, 100, 0],
              darkgrey: [169, 169, 169],
              darkkhaki: [189, 183, 107],
              darkmagenta: [139, 0, 139],
              darkolivegreen: [85, 107, 47],
              darkorange: [255, 140, 0],
              darkorchid: [153, 50, 204],
              darkred: [139, 0, 0],
              darksalmon: [233, 150, 122],
              darkseagreen: [143, 188, 143],
              darkslateblue: [72, 61, 139],
              darkslategray: [47, 79, 79],
              darkslategrey: [47, 79, 79],
              darkturquoise: [0, 206, 209],
              darkviolet: [148, 0, 211],
              deeppink: [255, 20, 147],
              deepskyblue: [0, 191, 255],
              dimgray: [105, 105, 105],
              dimgrey: [105, 105, 105],
              dodgerblue: [30, 144, 255],
              firebrick: [178, 34, 34],
              floralwhite: [255, 250, 240],
              forestgreen: [34, 139, 34],
              fuchsia: [255, 0, 255],
              gainsboro: [220, 220, 220],
              ghostwhite: [248, 248, 255],
              gold: [255, 215, 0],
              goldenrod: [218, 165, 32],
              gray: [128, 128, 128],
              green: [0, 128, 0],
              greenyellow: [173, 255, 47],
              grey: [128, 128, 128],
              honeydew: [240, 255, 240],
              hotpink: [255, 105, 180],
              indianred: [205, 92, 92],
              indigo: [75, 0, 130],
              ivory: [255, 255, 240],
              khaki: [240, 230, 140],
              lavender: [230, 230, 250],
              lavenderblush: [255, 240, 245],
              lawngreen: [124, 252, 0],
              lemonchiffon: [255, 250, 205],
              lightblue: [173, 216, 230],
              lightcoral: [240, 128, 128],
              lightcyan: [224, 255, 255],
              lightgoldenrodyellow: [250, 250, 210],
              lightgray: [211, 211, 211],
              lightgreen: [144, 238, 144],
              lightgrey: [211, 211, 211],
              lightpink: [255, 182, 193],
              lightsalmon: [255, 160, 122],
              lightseagreen: [32, 178, 170],
              lightskyblue: [135, 206, 250],
              lightslategray: [119, 136, 153],
              lightslategrey: [119, 136, 153],
              lightsteelblue: [176, 196, 222],
              lightyellow: [255, 255, 224],
              lime: [0, 255, 0],
              limegreen: [50, 205, 50],
              linen: [250, 240, 230],
              magenta: [255, 0, 255],
              maroon: [128, 0, 0],
              mediumaquamarine: [102, 205, 170],
              mediumblue: [0, 0, 205],
              mediumorchid: [186, 85, 211],
              mediumpurple: [147, 112, 219],
              mediumseagreen: [60, 179, 113],
              mediumslateblue: [123, 104, 238],
              mediumspringgreen: [0, 250, 154],
              mediumturquoise: [72, 209, 204],
              mediumvioletred: [199, 21, 133],
              midnightblue: [25, 25, 112],
              mintcream: [245, 255, 250],
              mistyrose: [255, 228, 225],
              moccasin: [255, 228, 181],
              navajowhite: [255, 222, 173],
              navy: [0, 0, 128],
              oldlace: [253, 245, 230],
              olive: [128, 128, 0],
              olivedrab: [107, 142, 35],
              orange: [255, 165, 0],
              orangered: [255, 69, 0],
              orchid: [218, 112, 214],
              palegoldenrod: [238, 232, 170],
              palegreen: [152, 251, 152],
              paleturquoise: [175, 238, 238],
              palevioletred: [219, 112, 147],
              papayawhip: [255, 239, 213],
              peachpuff: [255, 218, 185],
              peru: [205, 133, 63],
              pink: [255, 192, 203],
              plum: [221, 160, 221],
              powderblue: [176, 224, 230],
              purple: [128, 0, 128],
              rebeccapurple: [102, 51, 153],
              red: [255, 0, 0],
              rosybrown: [188, 143, 143],
              royalblue: [65, 105, 225],
              saddlebrown: [139, 69, 19],
              salmon: [250, 128, 114],
              sandybrown: [244, 164, 96],
              seagreen: [46, 139, 87],
              seashell: [255, 245, 238],
              sienna: [160, 82, 45],
              silver: [192, 192, 192],
              skyblue: [135, 206, 235],
              slateblue: [106, 90, 205],
              slategray: [112, 128, 144],
              slategrey: [112, 128, 144],
              snow: [255, 250, 250],
              springgreen: [0, 255, 127],
              steelblue: [70, 130, 180],
              tan: [210, 180, 140],
              teal: [0, 128, 128],
              thistle: [216, 191, 216],
              tomato: [255, 99, 71],
              turquoise: [64, 224, 208],
              violet: [238, 130, 238],
              wheat: [245, 222, 179],
              white: [255, 255, 255],
              whitesmoke: [245, 245, 245],
              yellow: [255, 255, 0],
              yellowgreen: [154, 205, 50],
            },
            A = {},
            z;
          for (z in G) A[JSON.stringify(G[z])] = z;
        },
        {},
      ],
      5: [
        function (u, n, t) {
          var h = u(4),
            l = function () {
              return new d();
            },
            f;
          for (f in h)
            (l[f + "Raw"] = (function (a) {
              return function (c) {
                "number" == typeof c &&
                  (c = Array.prototype.slice.call(arguments));
                return h[a](c);
              };
            })(f)),
              (t = /(\w+)2(\w+)/.exec(f)),
              (u = t[1]),
              (t = t[2]),
              (l[u] = l[u] || {}),
              (l[u][t] = l[f] =
                (function (a) {
                  return function (c) {
                    "number" == typeof c &&
                      (c = Array.prototype.slice.call(arguments));
                    var e = h[a](c);
                    if ("string" == typeof e || void 0 === e) return e;
                    for (var d = 0; d < e.length; d++) e[d] = Math.round(e[d]);
                    return e;
                  };
                })(f));
          var d = function () {
            this.convs = {};
          };
          d.prototype.routeSpace = function (a, c) {
            var e = c[0];
            if (void 0 === e) return this.getValues(a);
            "number" == typeof e && (e = Array.prototype.slice.call(c));
            return this.setValues(a, e);
          };
          d.prototype.setValues = function (a, c) {
            this.space = a;
            this.convs = {};
            this.convs[a] = c;
            return this;
          };
          d.prototype.getValues = function (a) {
            var c = this.convs[a];
            c ||
              ((c = this.space),
              (c = l[c][a](this.convs[c])),
              (this.convs[a] = c));
            return c;
          };
          ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function (a) {
            d.prototype[a] = function (c) {
              return this.routeSpace(a, arguments);
            };
          });
          n.exports = l;
        },
        { 4: 4 },
      ],
      6: [
        function (u, n, t) {
          n.exports = {
            aliceblue: [240, 248, 255],
            antiquewhite: [250, 235, 215],
            aqua: [0, 255, 255],
            aquamarine: [127, 255, 212],
            azure: [240, 255, 255],
            beige: [245, 245, 220],
            bisque: [255, 228, 196],
            black: [0, 0, 0],
            blanchedalmond: [255, 235, 205],
            blue: [0, 0, 255],
            blueviolet: [138, 43, 226],
            brown: [165, 42, 42],
            burlywood: [222, 184, 135],
            cadetblue: [95, 158, 160],
            chartreuse: [127, 255, 0],
            chocolate: [210, 105, 30],
            coral: [255, 127, 80],
            cornflowerblue: [100, 149, 237],
            cornsilk: [255, 248, 220],
            crimson: [220, 20, 60],
            cyan: [0, 255, 255],
            darkblue: [0, 0, 139],
            darkcyan: [0, 139, 139],
            darkgoldenrod: [184, 134, 11],
            darkgray: [169, 169, 169],
            darkgreen: [0, 100, 0],
            darkgrey: [169, 169, 169],
            darkkhaki: [189, 183, 107],
            darkmagenta: [139, 0, 139],
            darkolivegreen: [85, 107, 47],
            darkorange: [255, 140, 0],
            darkorchid: [153, 50, 204],
            darkred: [139, 0, 0],
            darksalmon: [233, 150, 122],
            darkseagreen: [143, 188, 143],
            darkslateblue: [72, 61, 139],
            darkslategray: [47, 79, 79],
            darkslategrey: [47, 79, 79],
            darkturquoise: [0, 206, 209],
            darkviolet: [148, 0, 211],
            deeppink: [255, 20, 147],
            deepskyblue: [0, 191, 255],
            dimgray: [105, 105, 105],
            dimgrey: [105, 105, 105],
            dodgerblue: [30, 144, 255],
            firebrick: [178, 34, 34],
            floralwhite: [255, 250, 240],
            forestgreen: [34, 139, 34],
            fuchsia: [255, 0, 255],
            gainsboro: [220, 220, 220],
            ghostwhite: [248, 248, 255],
            gold: [255, 215, 0],
            goldenrod: [218, 165, 32],
            gray: [128, 128, 128],
            green: [0, 128, 0],
            greenyellow: [173, 255, 47],
            grey: [128, 128, 128],
            honeydew: [240, 255, 240],
            hotpink: [255, 105, 180],
            indianred: [205, 92, 92],
            indigo: [75, 0, 130],
            ivory: [255, 255, 240],
            khaki: [240, 230, 140],
            lavender: [230, 230, 250],
            lavenderblush: [255, 240, 245],
            lawngreen: [124, 252, 0],
            lemonchiffon: [255, 250, 205],
            lightblue: [173, 216, 230],
            lightcoral: [240, 128, 128],
            lightcyan: [224, 255, 255],
            lightgoldenrodyellow: [250, 250, 210],
            lightgray: [211, 211, 211],
            lightgreen: [144, 238, 144],
            lightgrey: [211, 211, 211],
            lightpink: [255, 182, 193],
            lightsalmon: [255, 160, 122],
            lightseagreen: [32, 178, 170],
            lightskyblue: [135, 206, 250],
            lightslategray: [119, 136, 153],
            lightslategrey: [119, 136, 153],
            lightsteelblue: [176, 196, 222],
            lightyellow: [255, 255, 224],
            lime: [0, 255, 0],
            limegreen: [50, 205, 50],
            linen: [250, 240, 230],
            magenta: [255, 0, 255],
            maroon: [128, 0, 0],
            mediumaquamarine: [102, 205, 170],
            mediumblue: [0, 0, 205],
            mediumorchid: [186, 85, 211],
            mediumpurple: [147, 112, 219],
            mediumseagreen: [60, 179, 113],
            mediumslateblue: [123, 104, 238],
            mediumspringgreen: [0, 250, 154],
            mediumturquoise: [72, 209, 204],
            mediumvioletred: [199, 21, 133],
            midnightblue: [25, 25, 112],
            mintcream: [245, 255, 250],
            mistyrose: [255, 228, 225],
            moccasin: [255, 228, 181],
            navajowhite: [255, 222, 173],
            navy: [0, 0, 128],
            oldlace: [253, 245, 230],
            olive: [128, 128, 0],
            olivedrab: [107, 142, 35],
            orange: [255, 165, 0],
            orangered: [255, 69, 0],
            orchid: [218, 112, 214],
            palegoldenrod: [238, 232, 170],
            palegreen: [152, 251, 152],
            paleturquoise: [175, 238, 238],
            palevioletred: [219, 112, 147],
            papayawhip: [255, 239, 213],
            peachpuff: [255, 218, 185],
            peru: [205, 133, 63],
            pink: [255, 192, 203],
            plum: [221, 160, 221],
            powderblue: [176, 224, 230],
            purple: [128, 0, 128],
            rebeccapurple: [102, 51, 153],
            red: [255, 0, 0],
            rosybrown: [188, 143, 143],
            royalblue: [65, 105, 225],
            saddlebrown: [139, 69, 19],
            salmon: [250, 128, 114],
            sandybrown: [244, 164, 96],
            seagreen: [46, 139, 87],
            seashell: [255, 245, 238],
            sienna: [160, 82, 45],
            silver: [192, 192, 192],
            skyblue: [135, 206, 235],
            slateblue: [106, 90, 205],
            slategray: [112, 128, 144],
            slategrey: [112, 128, 144],
            snow: [255, 250, 250],
            springgreen: [0, 255, 127],
            steelblue: [70, 130, 180],
            tan: [210, 180, 140],
            teal: [0, 128, 128],
            thistle: [216, 191, 216],
            tomato: [255, 99, 71],
            turquoise: [64, 224, 208],
            violet: [238, 130, 238],
            wheat: [245, 222, 179],
            white: [255, 255, 255],
            whitesmoke: [245, 245, 245],
            yellow: [255, 255, 0],
            yellowgreen: [154, 205, 50],
          };
        },
        {},
      ],
      7: [
        function (u, n, t) {
          t = u(28)();
          u(26)(t);
          u(42)(t);
          u(22)(t);
          u(31)(t);
          u(25)(t);
          u(21)(t);
          u(23)(t);
          u(24)(t);
          u(29)(t);
          u(33)(t);
          u(34)(t);
          u(32)(t);
          u(35)(t);
          u(30)(t);
          u(27)(t);
          u(36)(t);
          u(37)(t);
          u(38)(t);
          u(39)(t);
          u(40)(t);
          u(45)(t);
          u(43)(t);
          u(44)(t);
          u(46)(t);
          u(47)(t);
          u(48)(t);
          u(15)(t);
          u(16)(t);
          u(17)(t);
          u(18)(t);
          u(19)(t);
          u(20)(t);
          u(8)(t);
          u(9)(t);
          u(10)(t);
          u(11)(t);
          u(12)(t);
          u(13)(t);
          u(14)(t);
          window.Chart = n.exports = t;
        },
        {
          10: 10,
          11: 11,
          12: 12,
          13: 13,
          14: 14,
          15: 15,
          16: 16,
          17: 17,
          18: 18,
          19: 19,
          20: 20,
          21: 21,
          22: 22,
          23: 23,
          24: 24,
          25: 25,
          26: 26,
          27: 27,
          28: 28,
          29: 29,
          30: 30,
          31: 31,
          32: 32,
          33: 33,
          34: 34,
          35: 35,
          36: 36,
          37: 37,
          38: 38,
          39: 39,
          40: 40,
          42: 42,
          43: 43,
          44: 44,
          45: 45,
          46: 46,
          47: 47,
          48: 48,
          8: 8,
          9: 9,
        },
      ],
      8: [
        function (u, n, t) {
          n.exports = function (h) {
            h.Bar = function (l, f) {
              f.type = "bar";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      9: [
        function (u, n, t) {
          n.exports = function (h) {
            h.Bubble = function (l, f) {
              f.type = "bubble";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      10: [
        function (u, n, t) {
          n.exports = function (h) {
            h.Doughnut = function (l, f) {
              f.type = "doughnut";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      11: [
        function (u, n, t) {
          n.exports = function (h) {
            h.Line = function (l, f) {
              f.type = "line";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      12: [
        function (u, n, t) {
          n.exports = function (h) {
            h.PolarArea = function (l, f) {
              f.type = "polarArea";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      13: [
        function (u, n, t) {
          n.exports = function (h) {
            h.Radar = function (l, f) {
              f.type = "radar";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      14: [
        function (u, n, t) {
          n.exports = function (h) {
            h.defaults.scatter = {
              hover: { mode: "single" },
              scales: {
                xAxes: [{ type: "linear", position: "bottom", id: "x-axis-1" }],
                yAxes: [{ type: "linear", position: "left", id: "y-axis-1" }],
              },
              tooltips: {
                callbacks: {
                  title: function () {
                    return "";
                  },
                  label: function (h) {
                    return "(" + h.xLabel + ", " + h.yLabel + ")";
                  },
                },
              },
            };
            h.controllers.scatter = h.controllers.line;
            h.Scatter = function (l, f) {
              f.type = "scatter";
              return new h(l, f);
            };
          };
        },
        {},
      ],
      15: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.bar = {
              hover: { mode: "label" },
              scales: {
                xAxes: [
                  {
                    type: "category",
                    categoryPercentage: 0.8,
                    barPercentage: 0.9,
                    gridLines: { offsetGridLines: !0 },
                  },
                ],
                yAxes: [{ type: "linear" }],
              },
            };
            h.controllers.bar = h.DatasetController.extend({
              dataElementType: h.elements.Rectangle,
              initialize: function (f, d) {
                h.DatasetController.prototype.initialize.call(this, f, d);
                f = this.getMeta();
                d = this.getDataset();
                f.stack = d.stack;
                f.bar = !0;
              },
              getStackCount: function () {
                var f = this,
                  d = f.getMeta(),
                  a = f.getScaleForId(d.yAxisID),
                  c = [];
                l.each(
                  f.chart.data.datasets,
                  function (e, d) {
                    e = f.chart.getDatasetMeta(d);
                    e.bar &&
                      f.chart.isDatasetVisible(d) &&
                      (!1 === a.options.stacked ||
                        (!0 === a.options.stacked &&
                          -1 === c.indexOf(e.stack)) ||
                        (void 0 === a.options.stacked &&
                          (void 0 === e.stack || -1 === c.indexOf(e.stack)))) &&
                      c.push(e.stack);
                  },
                  f
                );
                return c.length;
              },
              update: function (f) {
                var d = this;
                l.each(
                  d.getMeta().data,
                  function (a, c) {
                    d.updateElement(a, c, f);
                  },
                  d
                );
              },
              updateElement: function (f, d, a) {
                var c = this.getMeta(),
                  e = this.getScaleForId(c.xAxisID),
                  k = this.getScaleForId(c.yAxisID);
                c = k.getBasePixel();
                var w = this.chart.options.elements.rectangle,
                  v = f.custom || {},
                  q = this.getDataset();
                f._xScale = e;
                f._yScale = k;
                f._datasetIndex = this.index;
                f._index = d;
                e = this.getRuler(d);
                f._model = {
                  x: this.calculateBarX(d, this.index, e),
                  y: a ? c : this.calculateBarY(d, this.index),
                  label: this.chart.data.labels[d],
                  datasetLabel: q.label,
                  horizontal: !1,
                  base: a ? c : this.calculateBarBase(this.index, d),
                  width: this.calculateBarWidth(e),
                  backgroundColor: v.backgroundColor
                    ? v.backgroundColor
                    : l.getValueAtIndexOrDefault(
                        q.backgroundColor,
                        d,
                        w.backgroundColor
                      ),
                  borderSkipped: v.borderSkipped
                    ? v.borderSkipped
                    : w.borderSkipped,
                  borderColor: v.borderColor
                    ? v.borderColor
                    : l.getValueAtIndexOrDefault(
                        q.borderColor,
                        d,
                        w.borderColor
                      ),
                  borderWidth: v.borderWidth
                    ? v.borderWidth
                    : l.getValueAtIndexOrDefault(
                        q.borderWidth,
                        d,
                        w.borderWidth
                      ),
                };
                f.pivot();
              },
              calculateBarBase: function (f, d) {
                var a = this.getMeta(),
                  c = this.getScaleForId(a.yAxisID),
                  e = c.getBaseValue(),
                  k = e;
                if (
                  !0 === c.options.stacked ||
                  (void 0 === c.options.stacked && void 0 !== a.stack)
                ) {
                  for (
                    var w = this.chart,
                      v = w.data.datasets,
                      q = Number(v[f].data[d]),
                      p = 0;
                    p < f;
                    p++
                  ) {
                    var x = v[p],
                      y = w.getDatasetMeta(p);
                    y.bar &&
                      y.yAxisID === c.id &&
                      w.isDatasetVisible(p) &&
                      a.stack === y.stack &&
                      ((x = Number(x.data[d])),
                      (e += 0 > q ? Math.min(x, k) : Math.max(x, k)));
                  }
                  return c.getPixelForValue(e);
                }
                return c.getBasePixel();
              },
              getRuler: function () {
                var f = this.getMeta();
                f = this.getScaleForId(f.xAxisID);
                var d = this.getStackCount(),
                  a = f.width / f.ticks.length,
                  c = a * f.options.categoryPercentage,
                  e = c / d;
                return {
                  stackCount: d,
                  tickWidth: a,
                  categoryWidth: c,
                  categorySpacing: (a - a * f.options.categoryPercentage) / 2,
                  fullBarWidth: e,
                  barWidth: e * f.options.barPercentage,
                  barSpacing: e - e * f.options.barPercentage,
                };
              },
              calculateBarWidth: function (f) {
                var d = this.getMeta();
                d = this.getScaleForId(d.xAxisID);
                return d.options.barThickness
                  ? d.options.barThickness
                  : f.barWidth;
              },
              getStackIndex: function (f) {
                var d = this.chart.getDatasetMeta(f),
                  a = this.getScaleForId(d.yAxisID),
                  c,
                  e = [d.stack];
                for (c = 0; c < f; ++c)
                  (d = this.chart.getDatasetMeta(c)),
                    d.bar &&
                      this.chart.isDatasetVisible(c) &&
                      (!1 === a.options.stacked ||
                        (!0 === a.options.stacked &&
                          -1 === e.indexOf(d.stack)) ||
                        (void 0 === a.options.stacked &&
                          (void 0 === d.stack || -1 === e.indexOf(d.stack)))) &&
                      e.push(d.stack);
                return e.length - 1;
              },
              calculateBarX: function (f, d, a) {
                var c = this.getMeta(),
                  e = this.getScaleForId(c.xAxisID);
                c = this.getStackIndex(d);
                f = e.getPixelForValue(null, f, d, this.chart.isCombo);
                f -= this.chart.isCombo ? a.tickWidth / 2 : 0;
                return (
                  f +
                  a.barWidth / 2 +
                  a.categorySpacing +
                  a.barWidth * c +
                  a.barSpacing / 2 +
                  a.barSpacing * c
                );
              },
              calculateBarY: function (f, d) {
                var a = this.getMeta(),
                  c = this.getScaleForId(a.yAxisID),
                  e = Number(this.getDataset().data[f]);
                if (
                  c.options.stacked ||
                  (void 0 === c.options.stacked && void 0 !== a.stack)
                ) {
                  for (var k = c.getBaseValue(), w = k, v = 0; v < d; v++) {
                    var q = this.chart.data.datasets[v],
                      p = this.chart.getDatasetMeta(v);
                    p.bar &&
                      p.yAxisID === c.id &&
                      this.chart.isDatasetVisible(v) &&
                      a.stack === p.stack &&
                      ((q = Number(q.data[f])),
                      0 > q ? (k += q || 0) : (w += q || 0));
                  }
                  return 0 > e
                    ? c.getPixelForValue(k + e)
                    : c.getPixelForValue(w + e);
                }
                return c.getPixelForValue(e);
              },
              draw: function (f) {
                f = f || 1;
                var d = this.getMeta().data,
                  a = this.getDataset(),
                  c;
                h.canvasHelpers.clipArea(
                  this.chart.chart.ctx,
                  this.chart.chartArea
                );
                var e = 0;
                for (c = d.length; e < c; ++e) {
                  var k = a.data[e];
                  null === k ||
                    void 0 === k ||
                    isNaN(k) ||
                    d[e].transition(f).draw();
                }
                h.canvasHelpers.unclipArea(this.chart.chart.ctx);
              },
              setHoverStyle: function (f) {
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f._index,
                  c = f.custom || {};
                f = f._model;
                f.backgroundColor = c.hoverBackgroundColor
                  ? c.hoverBackgroundColor
                  : l.getValueAtIndexOrDefault(
                      d.hoverBackgroundColor,
                      a,
                      l.getHoverColor(f.backgroundColor)
                    );
                f.borderColor = c.hoverBorderColor
                  ? c.hoverBorderColor
                  : l.getValueAtIndexOrDefault(
                      d.hoverBorderColor,
                      a,
                      l.getHoverColor(f.borderColor)
                    );
                f.borderWidth = c.hoverBorderWidth
                  ? c.hoverBorderWidth
                  : l.getValueAtIndexOrDefault(
                      d.hoverBorderWidth,
                      a,
                      f.borderWidth
                    );
              },
              removeHoverStyle: function (f) {
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f._index,
                  c = f.custom || {};
                f = f._model;
                var e = this.chart.options.elements.rectangle;
                f.backgroundColor = c.backgroundColor
                  ? c.backgroundColor
                  : l.getValueAtIndexOrDefault(
                      d.backgroundColor,
                      a,
                      e.backgroundColor
                    );
                f.borderColor = c.borderColor
                  ? c.borderColor
                  : l.getValueAtIndexOrDefault(d.borderColor, a, e.borderColor);
                f.borderWidth = c.borderWidth
                  ? c.borderWidth
                  : l.getValueAtIndexOrDefault(d.borderWidth, a, e.borderWidth);
              },
            });
            h.defaults.horizontalBar = {
              hover: { mode: "label" },
              scales: {
                xAxes: [{ type: "linear", position: "bottom" }],
                yAxes: [
                  {
                    position: "left",
                    type: "category",
                    categoryPercentage: 0.8,
                    barPercentage: 0.9,
                    gridLines: { offsetGridLines: !0 },
                  },
                ],
              },
              elements: { rectangle: { borderSkipped: "left" } },
              tooltips: {
                callbacks: {
                  title: function (f, d) {
                    var a = "";
                    0 < f.length &&
                      (f[0].yLabel
                        ? (a = f[0].yLabel)
                        : 0 < d.labels.length &&
                          f[0].index < d.labels.length &&
                          (a = d.labels[f[0].index]));
                    return a;
                  },
                  label: function (f, d) {
                    return (
                      (d.datasets[f.datasetIndex].label || "") + ": " + f.xLabel
                    );
                  },
                },
              },
            };
            h.controllers.horizontalBar = h.controllers.bar.extend({
              getStackCount: function () {
                var f = this,
                  d = f.getMeta(),
                  a = f.getScaleForId(d.xAxisID),
                  c = [];
                l.each(
                  f.chart.data.datasets,
                  function (e, d) {
                    e = f.chart.getDatasetMeta(d);
                    e.bar &&
                      f.chart.isDatasetVisible(d) &&
                      (!1 === a.options.stacked ||
                        (!0 === a.options.stacked &&
                          -1 === c.indexOf(e.stack)) ||
                        (void 0 === a.options.stacked &&
                          (void 0 === e.stack || -1 === c.indexOf(e.stack)))) &&
                      c.push(e.stack);
                  },
                  f
                );
                return c.length;
              },
              updateElement: function (f, d, a) {
                var c = this.getMeta(),
                  e = this.getScaleForId(c.xAxisID),
                  k = this.getScaleForId(c.yAxisID);
                c = e.getBasePixel();
                var w = f.custom || {},
                  v = this.getDataset(),
                  q = this.chart.options.elements.rectangle;
                f._xScale = e;
                f._yScale = k;
                f._datasetIndex = this.index;
                f._index = d;
                e = this.getRuler(d);
                f._model = {
                  x: a ? c : this.calculateBarX(d, this.index),
                  y: this.calculateBarY(d, this.index, e),
                  label: this.chart.data.labels[d],
                  datasetLabel: v.label,
                  horizontal: !0,
                  base: a ? c : this.calculateBarBase(this.index, d),
                  height: this.calculateBarHeight(e),
                  backgroundColor: w.backgroundColor
                    ? w.backgroundColor
                    : l.getValueAtIndexOrDefault(
                        v.backgroundColor,
                        d,
                        q.backgroundColor
                      ),
                  borderSkipped: w.borderSkipped
                    ? w.borderSkipped
                    : q.borderSkipped,
                  borderColor: w.borderColor
                    ? w.borderColor
                    : l.getValueAtIndexOrDefault(
                        v.borderColor,
                        d,
                        q.borderColor
                      ),
                  borderWidth: w.borderWidth
                    ? w.borderWidth
                    : l.getValueAtIndexOrDefault(
                        v.borderWidth,
                        d,
                        q.borderWidth
                      ),
                };
                f.pivot();
              },
              calculateBarBase: function (f, d) {
                var a = this.getMeta(),
                  c = this.getScaleForId(a.xAxisID),
                  e = c.getBaseValue(),
                  k = e;
                if (
                  c.options.stacked ||
                  (void 0 === c.options.stacked && void 0 !== a.stack)
                ) {
                  for (
                    var w = this.chart,
                      v = w.data.datasets,
                      q = Number(v[f].data[d]),
                      p = 0;
                    p < f;
                    p++
                  ) {
                    var x = v[p],
                      y = w.getDatasetMeta(p);
                    y.bar &&
                      y.xAxisID === c.id &&
                      w.isDatasetVisible(p) &&
                      a.stack === y.stack &&
                      ((x = Number(x.data[d])),
                      (e += 0 > q ? Math.min(x, k) : Math.max(x, k)));
                  }
                  return c.getPixelForValue(e);
                }
                return c.getBasePixel();
              },
              getRuler: function () {
                var f = this.getMeta();
                f = this.getScaleForId(f.yAxisID);
                var d = this.getStackCount(),
                  a = f.height / f.ticks.length,
                  c = a * f.options.categoryPercentage,
                  e = c / d;
                return {
                  stackCount: d,
                  tickHeight: a,
                  categoryHeight: c,
                  categorySpacing: (a - a * f.options.categoryPercentage) / 2,
                  fullBarHeight: e,
                  barHeight: e * f.options.barPercentage,
                  barSpacing: e - e * f.options.barPercentage,
                };
              },
              calculateBarHeight: function (f) {
                var d = this.getMeta();
                d = this.getScaleForId(d.yAxisID);
                return d.options.barThickness
                  ? d.options.barThickness
                  : f.barHeight;
              },
              getStackIndex: function (f) {
                var d = this.chart.getDatasetMeta(f),
                  a = this.getScaleForId(d.xAxisID),
                  c,
                  e = [d.stack];
                for (c = 0; c < f; ++c)
                  (d = this.chart.getDatasetMeta(c)),
                    d.bar &&
                      this.chart.isDatasetVisible(c) &&
                      (!1 === a.options.stacked ||
                        (!0 === a.options.stacked &&
                          -1 === e.indexOf(d.stack)) ||
                        (void 0 === a.options.stacked &&
                          (void 0 === d.stack || -1 === e.indexOf(d.stack)))) &&
                      e.push(d.stack);
                return e.length - 1;
              },
              calculateBarX: function (f, d) {
                var a = this.getMeta(),
                  c = this.getScaleForId(a.xAxisID),
                  e = Number(this.getDataset().data[f]);
                if (
                  c.options.stacked ||
                  (void 0 === c.options.stacked && void 0 !== a.stack)
                ) {
                  for (var k = c.getBaseValue(), w = k, v = 0; v < d; v++) {
                    var q = this.chart.data.datasets[v],
                      p = this.chart.getDatasetMeta(v);
                    p.bar &&
                      p.xAxisID === c.id &&
                      this.chart.isDatasetVisible(v) &&
                      a.stack === p.stack &&
                      ((q = Number(q.data[f])),
                      0 > q ? (k += q || 0) : (w += q || 0));
                  }
                  return 0 > e
                    ? c.getPixelForValue(k + e)
                    : c.getPixelForValue(w + e);
                }
                return c.getPixelForValue(e);
              },
              calculateBarY: function (f, d, a) {
                var c = this.getMeta(),
                  e = this.getScaleForId(c.yAxisID);
                c = this.getStackIndex(d);
                f = e.getPixelForValue(null, f, d, this.chart.isCombo);
                f -= this.chart.isCombo ? a.tickHeight / 2 : 0;
                return (
                  f +
                  a.barHeight / 2 +
                  a.categorySpacing +
                  a.barHeight * c +
                  a.barSpacing / 2 +
                  a.barSpacing * c
                );
              },
            });
          };
        },
        {},
      ],
      16: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.bubble = {
              hover: { mode: "single" },
              scales: {
                xAxes: [{ type: "linear", position: "bottom", id: "x-axis-0" }],
                yAxes: [{ type: "linear", position: "left", id: "y-axis-0" }],
              },
              tooltips: {
                callbacks: {
                  title: function () {
                    return "";
                  },
                  label: function (f, d) {
                    return (
                      (d.datasets[f.datasetIndex].label || "") +
                      ": (" +
                      f.xLabel +
                      ", " +
                      f.yLabel +
                      ", " +
                      d.datasets[f.datasetIndex].data[f.index].r +
                      ")"
                    );
                  },
                },
              },
            };
            h.controllers.bubble = h.DatasetController.extend({
              dataElementType: h.elements.Point,
              update: function (f) {
                var d = this,
                  a = d.getMeta().data;
                l.each(a, function (a, e) {
                  d.updateElement(a, e, f);
                });
              },
              updateElement: function (f, d, a) {
                var c = this.getMeta(),
                  e = this.getScaleForId(c.xAxisID),
                  k = this.getScaleForId(c.yAxisID);
                c = f.custom || {};
                var w = this.getDataset(),
                  v = w.data[d],
                  q = this.chart.options.elements.point,
                  p = this.index;
                l.extend(f, {
                  _xScale: e,
                  _yScale: k,
                  _datasetIndex: p,
                  _index: d,
                  _model: {
                    x: a
                      ? e.getPixelForDecimal(0.5)
                      : e.getPixelForValue(
                          "object" === typeof v ? v : NaN,
                          d,
                          p,
                          this.chart.isCombo
                        ),
                    y: a ? k.getBasePixel() : k.getPixelForValue(v, d, p),
                    radius: a ? 0 : c.radius ? c.radius : this.getRadius(v),
                    hitRadius: c.hitRadius
                      ? c.hitRadius
                      : l.getValueAtIndexOrDefault(w.hitRadius, d, q.hitRadius),
                  },
                });
                h.DatasetController.prototype.removeHoverStyle.call(this, f, q);
                d = f._model;
                d.skip = c.skip ? c.skip : isNaN(d.x) || isNaN(d.y);
                f.pivot();
              },
              getRadius: function (f) {
                return f.r || this.chart.options.elements.point.radius;
              },
              setHoverStyle: function (f) {
                h.DatasetController.prototype.setHoverStyle.call(this, f);
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f._index,
                  c = f.custom || {};
                f._model.radius = c.hoverRadius
                  ? c.hoverRadius
                  : l.getValueAtIndexOrDefault(
                      d.hoverRadius,
                      a,
                      this.chart.options.elements.point.hoverRadius
                    ) + this.getRadius(d.data[a]);
              },
              removeHoverStyle: function (f) {
                h.DatasetController.prototype.removeHoverStyle.call(
                  this,
                  f,
                  this.chart.options.elements.point
                );
                var d =
                    this.chart.data.datasets[f._datasetIndex].data[f._index],
                  a = f.custom || {};
                f._model.radius = a.radius ? a.radius : this.getRadius(d);
              },
            });
          };
        },
        {},
      ],
      17: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = h.defaults;
            f.doughnut = {
              animation: { animateRotate: !0, animateScale: !1 },
              aspectRatio: 1,
              hover: { mode: "single" },
              legendCallback: function (d) {
                var a = [];
                a.push('<ul class="' + d.id + '-legend">');
                var c = d.data;
                d = c.datasets;
                c = c.labels;
                if (d.length)
                  for (var e = 0; e < d[0].data.length; ++e)
                    a.push(
                      '<li><span style="background-color:' +
                        d[0].backgroundColor[e] +
                        '"></span>'
                    ),
                      c[e] && a.push(c[e]),
                      a.push("</li>");
                a.push("</ul>");
                return a.join("");
              },
              legend: {
                labels: {
                  generateLabels: function (d) {
                    var a = d.data;
                    return a.labels.length && a.datasets.length
                      ? a.labels.map(function (c, e) {
                          var k = d.getDatasetMeta(0),
                            f = a.datasets[0],
                            v = k.data[e],
                            q = (v && v.custom) || {},
                            p = l.getValueAtIndexOrDefault,
                            x = d.options.elements.arc;
                          v = q.backgroundColor
                            ? q.backgroundColor
                            : p(f.backgroundColor, e, x.backgroundColor);
                          var y = q.borderColor
                            ? q.borderColor
                            : p(f.borderColor, e, x.borderColor);
                          q = q.borderWidth
                            ? q.borderWidth
                            : p(f.borderWidth, e, x.borderWidth);
                          return {
                            text: c,
                            fillStyle: v,
                            strokeStyle: y,
                            lineWidth: q,
                            hidden: isNaN(f.data[e]) || k.data[e].hidden,
                            index: e,
                          };
                        })
                      : [];
                  },
                },
                onClick: function (d, a) {
                  d = a.index;
                  a = this.chart;
                  var c,
                    e = 0;
                  for (c = (a.data.datasets || []).length; e < c; ++e) {
                    var k = a.getDatasetMeta(e);
                    k.data[d] && (k.data[d].hidden = !k.data[d].hidden);
                  }
                  a.update();
                },
              },
              cutoutPercentage: 50,
              rotation: -0.5 * Math.PI,
              circumference: 2 * Math.PI,
              tooltips: {
                callbacks: {
                  title: function () {
                    return "";
                  },
                  label: function (d, a) {
                    var c = a.labels[d.index];
                    d = ": " + a.datasets[d.datasetIndex].data[d.index];
                    l.isArray(c) ? ((c = c.slice()), (c[0] += d)) : (c += d);
                    return c;
                  },
                },
              },
            };
            f.pie = l.clone(f.doughnut);
            l.extend(f.pie, { cutoutPercentage: 0 });
            h.controllers.doughnut = h.controllers.pie =
              h.DatasetController.extend({
                dataElementType: h.elements.Arc,
                linkScales: l.noop,
                getRingIndex: function (d) {
                  for (var a = 0, c = 0; c < d; ++c)
                    this.chart.isDatasetVisible(c) && ++a;
                  return a;
                },
                update: function (d) {
                  var a = this,
                    c = a.chart,
                    e = c.chartArea,
                    k = c.options,
                    f = k.elements.arc,
                    v = e.right - e.left - f.borderWidth;
                  e = e.bottom - e.top - f.borderWidth;
                  var q = Math.min(v, e),
                    p = 0,
                    x = 0;
                  f = a.getMeta();
                  var y = k.cutoutPercentage,
                    h = k.circumference;
                  if (h < 2 * Math.PI) {
                    q = k.rotation % (2 * Math.PI);
                    q +=
                      2 * Math.PI * (q >= Math.PI ? -1 : q < -Math.PI ? 1 : 0);
                    h = q + h;
                    var n = Math.cos(q);
                    x = Math.sin(q);
                    var t = Math.cos(h),
                      u = Math.sin(h),
                      A = y / 100;
                    p =
                      (q <= -Math.PI && -Math.PI <= h) ||
                      (q <= Math.PI && Math.PI <= h)
                        ? -1
                        : Math.min(n * (0 > n ? 1 : A), t * (0 > t ? 1 : A));
                    k =
                      (q <= 0.5 * -Math.PI && 0.5 * -Math.PI <= h) ||
                      (q <= 1.5 * Math.PI && 1.5 * Math.PI <= h)
                        ? -1
                        : Math.min(x * (0 > x ? 1 : A), u * (0 > u ? 1 : A));
                    n =
                      (0 >= q && 0 <= h) ||
                      (q <= 2 * Math.PI && 2 * Math.PI <= h)
                        ? 1
                        : Math.max(n * (0 < n ? 1 : A), t * (0 < t ? 1 : A));
                    h =
                      (q <= 0.5 * Math.PI && 0.5 * Math.PI <= h) ||
                      (q <= 2.5 * Math.PI && 2.5 * Math.PI <= h)
                        ? 1
                        : Math.max(x * (0 < x ? 1 : A), u * (0 < u ? 1 : A));
                    q = Math.min(v / (0.5 * (n - p)), e / (0.5 * (h - k)));
                    p = -0.5 * (n + p);
                    x = -0.5 * (h + k);
                  }
                  c.borderWidth = a.getMaxBorderWidth(f.data);
                  c.outerRadius = Math.max((q - c.borderWidth) / 2, 0);
                  c.innerRadius = Math.max(
                    y ? (c.outerRadius / 100) * y : 0,
                    0
                  );
                  c.radiusLength =
                    (c.outerRadius - c.innerRadius) /
                    c.getVisibleDatasetCount();
                  c.offsetX = p * c.outerRadius;
                  c.offsetY = x * c.outerRadius;
                  f.total = a.calculateTotal();
                  a.outerRadius =
                    c.outerRadius - c.radiusLength * a.getRingIndex(a.index);
                  a.innerRadius = Math.max(a.outerRadius - c.radiusLength, 0);
                  l.each(f.data, function (e, c) {
                    a.updateElement(e, c, d);
                  });
                },
                updateElement: function (d, a, c) {
                  var e = this.chart,
                    k = e.chartArea,
                    f = e.options,
                    v = f.animation,
                    q = (k.left + k.right) / 2;
                  k = (k.top + k.bottom) / 2;
                  var p = f.rotation,
                    x = f.rotation,
                    y = this.getDataset(),
                    h =
                      c && v.animateRotate
                        ? 0
                        : d.hidden
                        ? 0
                        : this.calculateCircumference(y.data[a]) *
                          (f.circumference / (2 * Math.PI)),
                    n = l.getValueAtIndexOrDefault;
                  l.extend(d, {
                    _datasetIndex: this.index,
                    _index: a,
                    _model: {
                      x: q + e.offsetX,
                      y: k + e.offsetY,
                      startAngle: p,
                      endAngle: x,
                      circumference: h,
                      outerRadius: c && v.animateScale ? 0 : this.outerRadius,
                      innerRadius: c && v.animateScale ? 0 : this.innerRadius,
                      label: n(y.label, a, e.data.labels[a]),
                    },
                  });
                  e = d._model;
                  this.removeHoverStyle(d);
                  (c && v.animateRotate) ||
                    ((e.startAngle =
                      0 === a
                        ? f.rotation
                        : this.getMeta().data[a - 1]._model.endAngle),
                    (e.endAngle = e.startAngle + e.circumference));
                  d.pivot();
                },
                removeHoverStyle: function (d) {
                  h.DatasetController.prototype.removeHoverStyle.call(
                    this,
                    d,
                    this.chart.options.elements.arc
                  );
                },
                calculateTotal: function () {
                  var d = this.getDataset(),
                    a = this.getMeta(),
                    c = 0,
                    e;
                  l.each(a.data, function (a, f) {
                    e = d.data[f];
                    isNaN(e) || a.hidden || (c += Math.abs(e));
                  });
                  return c;
                },
                calculateCircumference: function (d) {
                  var a = this.getMeta().total;
                  return 0 < a && !isNaN(d) ? (d / a) * Math.PI * 2 : 0;
                },
                getMaxBorderWidth: function (d) {
                  for (
                    var a = 0, c = this.index, e = d.length, k, f, v = 0;
                    v < e;
                    v++
                  )
                    (k = d[v]._model ? d[v]._model.borderWidth : 0),
                      (f = d[v]._chart
                        ? d[v]._chart.config.data.datasets[c].hoverBorderWidth
                        : 0),
                      (a = k > a ? k : a),
                      (a = f > a ? f : a);
                  return a;
                },
              });
          };
        },
        {},
      ],
      18: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.line = {
              showLines: !0,
              spanGaps: !1,
              hover: { mode: "label" },
              scales: {
                xAxes: [{ type: "category", id: "x-axis-0" }],
                yAxes: [{ type: "linear", id: "y-axis-0" }],
              },
            };
            h.controllers.line = h.DatasetController.extend({
              datasetElementType: h.elements.Line,
              dataElementType: h.elements.Point,
              update: function (f) {
                var d = this.getMeta(),
                  a = d.dataset,
                  c = d.data || [],
                  e = this.chart.options,
                  k = e.elements.line,
                  w = this.getScaleForId(d.yAxisID),
                  v = this.getDataset();
                if ((d = l.getValueOrDefault(v.showLine, e.showLines))) {
                  var q = a.custom || {};
                  void 0 !== v.tension &&
                    void 0 === v.lineTension &&
                    (v.lineTension = v.tension);
                  a._scale = w;
                  a._datasetIndex = this.index;
                  a._children = c;
                  a._model = {
                    spanGaps: v.spanGaps ? v.spanGaps : e.spanGaps,
                    tension: q.tension
                      ? q.tension
                      : l.getValueOrDefault(v.lineTension, k.tension),
                    backgroundColor: q.backgroundColor
                      ? q.backgroundColor
                      : v.backgroundColor || k.backgroundColor,
                    borderWidth: q.borderWidth
                      ? q.borderWidth
                      : v.borderWidth || k.borderWidth,
                    borderColor: q.borderColor
                      ? q.borderColor
                      : v.borderColor || k.borderColor,
                    borderCapStyle: q.borderCapStyle
                      ? q.borderCapStyle
                      : v.borderCapStyle || k.borderCapStyle,
                    borderDash: q.borderDash
                      ? q.borderDash
                      : v.borderDash || k.borderDash,
                    borderDashOffset: q.borderDashOffset
                      ? q.borderDashOffset
                      : v.borderDashOffset || k.borderDashOffset,
                    borderJoinStyle: q.borderJoinStyle
                      ? q.borderJoinStyle
                      : v.borderJoinStyle || k.borderJoinStyle,
                    fill: q.fill ? q.fill : void 0 !== v.fill ? v.fill : k.fill,
                    steppedLine: q.steppedLine
                      ? q.steppedLine
                      : l.getValueOrDefault(v.steppedLine, k.stepped),
                    cubicInterpolationMode: q.cubicInterpolationMode
                      ? q.cubicInterpolationMode
                      : l.getValueOrDefault(
                          v.cubicInterpolationMode,
                          k.cubicInterpolationMode
                        ),
                    scaleTop: w.top,
                    scaleBottom: w.bottom,
                    scaleZero: w.getBasePixel(),
                  };
                  a.pivot();
                }
                e = 0;
                for (k = c.length; e < k; ++e) this.updateElement(c[e], e, f);
                d && 0 !== a._model.tension && this.updateBezierControlPoints();
                e = 0;
                for (k = c.length; e < k; ++e) c[e].pivot();
              },
              getPointBackgroundColor: function (f, d) {
                var a = this.chart.options.elements.point.backgroundColor,
                  c = this.getDataset();
                f = f.custom || {};
                f.backgroundColor
                  ? (a = f.backgroundColor)
                  : c.pointBackgroundColor
                  ? (a = l.getValueAtIndexOrDefault(
                      c.pointBackgroundColor,
                      d,
                      a
                    ))
                  : c.backgroundColor && (a = c.backgroundColor);
                return a;
              },
              getPointBorderColor: function (f, d) {
                var a = this.chart.options.elements.point.borderColor,
                  c = this.getDataset();
                f = f.custom || {};
                f.borderColor
                  ? (a = f.borderColor)
                  : c.pointBorderColor
                  ? (a = l.getValueAtIndexOrDefault(c.pointBorderColor, d, a))
                  : c.borderColor && (a = c.borderColor);
                return a;
              },
              getPointBorderWidth: function (f, d) {
                var a = this.chart.options.elements.point.borderWidth,
                  c = this.getDataset();
                f = f.custom || {};
                isNaN(f.borderWidth)
                  ? isNaN(c.pointBorderWidth)
                    ? isNaN(c.borderWidth) || (a = c.borderWidth)
                    : (a = l.getValueAtIndexOrDefault(c.pointBorderWidth, d, a))
                  : (a = f.borderWidth);
                return a;
              },
              updateElement: function (f, d, a) {
                var c = this.getMeta(),
                  e = f.custom || {},
                  k = this.getDataset(),
                  w = this.index,
                  v = k.data[d],
                  q = this.getScaleForId(c.yAxisID),
                  p = this.getScaleForId(c.xAxisID),
                  x = this.chart.options.elements.point,
                  y =
                    1 === (this.chart.data.labels || []).length ||
                    1 === k.data.length ||
                    this.chart.isCombo;
                void 0 !== k.radius &&
                  void 0 === k.pointRadius &&
                  (k.pointRadius = k.radius);
                void 0 !== k.hitRadius &&
                  void 0 === k.pointHitRadius &&
                  (k.pointHitRadius = k.hitRadius);
                y = p.getPixelForValue(
                  "object" === typeof v ? v : NaN,
                  d,
                  w,
                  y
                );
                a = a ? q.getBasePixel() : this.calculatePointY(v, d, w);
                f._xScale = p;
                f._yScale = q;
                f._datasetIndex = w;
                f._index = d;
                f._model = {
                  x: y,
                  y: a,
                  skip: e.skip || isNaN(y) || isNaN(a),
                  radius:
                    e.radius ||
                    l.getValueAtIndexOrDefault(k.pointRadius, d, x.radius),
                  pointStyle:
                    e.pointStyle ||
                    l.getValueAtIndexOrDefault(k.pointStyle, d, x.pointStyle),
                  backgroundColor: this.getPointBackgroundColor(f, d),
                  borderColor: this.getPointBorderColor(f, d),
                  borderWidth: this.getPointBorderWidth(f, d),
                  tension: c.dataset._model ? c.dataset._model.tension : 0,
                  steppedLine: c.dataset._model
                    ? c.dataset._model.steppedLine
                    : !1,
                  hitRadius:
                    e.hitRadius ||
                    l.getValueAtIndexOrDefault(
                      k.pointHitRadius,
                      d,
                      x.hitRadius
                    ),
                };
              },
              calculatePointY: function (f, d, a) {
                var c = this.chart,
                  e = this.getMeta();
                e = this.getScaleForId(e.yAxisID);
                var k = 0,
                  w = 0,
                  v;
                if (e.options.stacked) {
                  for (v = 0; v < a; v++) {
                    var q = c.data.datasets[v],
                      p = c.getDatasetMeta(v);
                    "line" === p.type &&
                      p.yAxisID === e.id &&
                      c.isDatasetVisible(v) &&
                      ((q = Number(e.getRightValue(q.data[d]))),
                      0 > q ? (w += q || 0) : (k += q || 0));
                  }
                  f = Number(e.getRightValue(f));
                  return 0 > f
                    ? e.getPixelForValue(w + f)
                    : e.getPixelForValue(k + f);
                }
                return e.getPixelForValue(f);
              },
              updateBezierControlPoints: function () {
                var f = this.getMeta(),
                  d = this.chart.chartArea,
                  a = f.data || [],
                  c;
                f.dataset._model.spanGaps &&
                  (a = a.filter(function (a) {
                    return !a._model.skip;
                  }));
                if ("monotone" === f.dataset._model.cubicInterpolationMode)
                  l.splineCurveMonotone(a);
                else {
                  var e = 0;
                  for (c = a.length; e < c; ++e) {
                    var k = a[e];
                    k = k._model;
                    var w = l.splineCurve(
                      l.previousItem(a, e)._model,
                      k,
                      l.nextItem(a, e)._model,
                      f.dataset._model.tension
                    );
                    k.controlPointPreviousX = w.previous.x;
                    k.controlPointPreviousY = w.previous.y;
                    k.controlPointNextX = w.next.x;
                    k.controlPointNextY = w.next.y;
                  }
                }
                if (this.chart.options.elements.line.capBezierPoints)
                  for (e = 0, c = a.length; e < c; ++e)
                    (k = a[e]._model),
                      (k.controlPointPreviousX = Math.max(
                        Math.min(k.controlPointPreviousX, d.right),
                        d.left
                      )),
                      (k.controlPointPreviousY = Math.max(
                        Math.min(k.controlPointPreviousY, d.bottom),
                        d.top
                      )),
                      (k.controlPointNextX = Math.max(
                        Math.min(k.controlPointNextX, d.right),
                        d.left
                      )),
                      (k.controlPointNextY = Math.max(
                        Math.min(k.controlPointNextY, d.bottom),
                        d.top
                      ));
              },
              draw: function (f) {
                var d = this.getMeta(),
                  a = d.data || [];
                f = f || 1;
                var c,
                  e = 0;
                for (c = a.length; e < c; ++e) a[e].transition(f);
                h.canvasHelpers.clipArea(
                  this.chart.chart.ctx,
                  this.chart.chartArea
                );
                e = this.getDataset();
                l.getValueOrDefault(e.showLine, this.chart.options.showLines) &&
                  d.dataset.transition(f).draw();
                h.canvasHelpers.unclipArea(this.chart.chart.ctx);
                e = 0;
                for (c = a.length; e < c; ++e) a[e].draw(this.chart.chartArea);
              },
              setHoverStyle: function (f) {
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f._index,
                  c = f.custom || {};
                f = f._model;
                f.radius =
                  c.hoverRadius ||
                  l.getValueAtIndexOrDefault(
                    d.pointHoverRadius,
                    a,
                    this.chart.options.elements.point.hoverRadius
                  );
                f.backgroundColor =
                  c.hoverBackgroundColor ||
                  l.getValueAtIndexOrDefault(
                    d.pointHoverBackgroundColor,
                    a,
                    l.getHoverColor(f.backgroundColor)
                  );
                f.borderColor =
                  c.hoverBorderColor ||
                  l.getValueAtIndexOrDefault(
                    d.pointHoverBorderColor,
                    a,
                    l.getHoverColor(f.borderColor)
                  );
                f.borderWidth =
                  c.hoverBorderWidth ||
                  l.getValueAtIndexOrDefault(
                    d.pointHoverBorderWidth,
                    a,
                    f.borderWidth
                  );
              },
              removeHoverStyle: function (f) {
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f._index,
                  c = f.custom || {},
                  e = f._model;
                void 0 !== d.radius &&
                  void 0 === d.pointRadius &&
                  (d.pointRadius = d.radius);
                e.radius =
                  c.radius ||
                  l.getValueAtIndexOrDefault(
                    d.pointRadius,
                    a,
                    this.chart.options.elements.point.radius
                  );
                e.backgroundColor = this.getPointBackgroundColor(f, a);
                e.borderColor = this.getPointBorderColor(f, a);
                e.borderWidth = this.getPointBorderWidth(f, a);
              },
            });
          };
        },
        {},
      ],
      19: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.polarArea = {
              scale: {
                type: "radialLinear",
                lineArc: !0,
                ticks: { beginAtZero: !0 },
              },
              animation: { animateRotate: !0, animateScale: !0 },
              startAngle: -0.5 * Math.PI,
              aspectRatio: 1,
              legendCallback: function (f) {
                var d = [];
                d.push('<ul class="' + f.id + '-legend">');
                var a = f.data;
                f = a.datasets;
                a = a.labels;
                if (f.length)
                  for (var c = 0; c < f[0].data.length; ++c)
                    d.push(
                      '<li><span style="background-color:' +
                        f[0].backgroundColor[c] +
                        '"></span>'
                    ),
                      a[c] && d.push(a[c]),
                      d.push("</li>");
                d.push("</ul>");
                return d.join("");
              },
              legend: {
                labels: {
                  generateLabels: function (f) {
                    var d = f.data;
                    return d.labels.length && d.datasets.length
                      ? d.labels.map(function (a, c) {
                          var e = f.getDatasetMeta(0),
                            k = d.datasets[0],
                            w = e.data[c].custom || {},
                            v = l.getValueAtIndexOrDefault,
                            q = f.options.elements.arc,
                            p = w.backgroundColor
                              ? w.backgroundColor
                              : v(k.backgroundColor, c, q.backgroundColor),
                            x = w.borderColor
                              ? w.borderColor
                              : v(k.borderColor, c, q.borderColor);
                          w = w.borderWidth
                            ? w.borderWidth
                            : v(k.borderWidth, c, q.borderWidth);
                          return {
                            text: a,
                            fillStyle: p,
                            strokeStyle: x,
                            lineWidth: w,
                            hidden: isNaN(k.data[c]) || e.data[c].hidden,
                            index: c,
                          };
                        })
                      : [];
                  },
                },
                onClick: function (f, d) {
                  f = d.index;
                  d = this.chart;
                  var a,
                    c = 0;
                  for (a = (d.data.datasets || []).length; c < a; ++c) {
                    var e = d.getDatasetMeta(c);
                    e.data[f].hidden = !e.data[f].hidden;
                  }
                  d.update();
                },
              },
              tooltips: {
                callbacks: {
                  title: function () {
                    return "";
                  },
                  label: function (f, d) {
                    return d.labels[f.index] + ": " + f.yLabel;
                  },
                },
              },
            };
            h.controllers.polarArea = h.DatasetController.extend({
              dataElementType: h.elements.Arc,
              linkScales: l.noop,
              update: function (f) {
                var d = this,
                  a = d.chart,
                  c = a.chartArea,
                  e = d.getMeta(),
                  k = a.options;
                a.outerRadius = Math.max(
                  (Math.min(c.right - c.left, c.bottom - c.top) -
                    k.elements.arc.borderWidth / 2) /
                    2,
                  0
                );
                a.innerRadius = Math.max(
                  k.cutoutPercentage
                    ? (a.outerRadius / 100) * k.cutoutPercentage
                    : 1,
                  0
                );
                a.radiusLength =
                  (a.outerRadius - a.innerRadius) / a.getVisibleDatasetCount();
                d.outerRadius = a.outerRadius - a.radiusLength * d.index;
                d.innerRadius = d.outerRadius - a.radiusLength;
                e.count = d.countVisibleElements();
                l.each(e.data, function (a, e) {
                  d.updateElement(a, e, f);
                });
              },
              updateElement: function (f, d, a) {
                var c = this.chart,
                  e = this.getDataset(),
                  k = c.options,
                  w = k.animation,
                  v = c.scale,
                  q = l.getValueAtIndexOrDefault;
                c = c.data.labels;
                for (
                  var p = this.calculateCircumference(e.data[d]),
                    x = v.xCenter,
                    y = v.yCenter,
                    h = 0,
                    n = this.getMeta(),
                    t = 0;
                  t < d;
                  ++t
                )
                  isNaN(e.data[t]) || n.data[t].hidden || ++h;
                k = k.startAngle;
                n = f.hidden ? 0 : v.getDistanceFromCenterForValue(e.data[d]);
                h = k + p * h;
                p = h + (f.hidden ? 0 : p);
                e = w.animateScale
                  ? 0
                  : v.getDistanceFromCenterForValue(e.data[d]);
                l.extend(f, {
                  _datasetIndex: this.index,
                  _index: d,
                  _scale: v,
                  _model: {
                    x: x,
                    y: y,
                    innerRadius: 0,
                    outerRadius: a ? e : n,
                    startAngle: a && w.animateRotate ? k : h,
                    endAngle: a && w.animateRotate ? k : p,
                    label: q(c, d, c[d]),
                  },
                });
                this.removeHoverStyle(f);
                f.pivot();
              },
              removeHoverStyle: function (f) {
                h.DatasetController.prototype.removeHoverStyle.call(
                  this,
                  f,
                  this.chart.options.elements.arc
                );
              },
              countVisibleElements: function () {
                var f = this.getDataset(),
                  d = this.getMeta(),
                  a = 0;
                l.each(d.data, function (c, e) {
                  isNaN(f.data[e]) || c.hidden || a++;
                });
                return a;
              },
              calculateCircumference: function (f) {
                var d = this.getMeta().count;
                return 0 < d && !isNaN(f) ? (2 * Math.PI) / d : 0;
              },
            });
          };
        },
        {},
      ],
      20: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.radar = {
              aspectRatio: 1,
              scale: { type: "radialLinear" },
              elements: { line: { tension: 0 } },
            };
            h.controllers.radar = h.DatasetController.extend({
              datasetElementType: h.elements.Line,
              dataElementType: h.elements.Point,
              linkScales: l.noop,
              update: function (f) {
                var d = this,
                  a = d.getMeta(),
                  c = a.data,
                  e = a.dataset.custom || {},
                  k = d.getDataset(),
                  w = d.chart.options.elements.line,
                  v = d.chart.scale;
                void 0 !== k.tension &&
                  void 0 === k.lineTension &&
                  (k.lineTension = k.tension);
                l.extend(a.dataset, {
                  _datasetIndex: d.index,
                  _children: c,
                  _loop: !0,
                  _model: {
                    tension: e.tension
                      ? e.tension
                      : l.getValueOrDefault(k.lineTension, w.tension),
                    backgroundColor: e.backgroundColor
                      ? e.backgroundColor
                      : k.backgroundColor || w.backgroundColor,
                    borderWidth: e.borderWidth
                      ? e.borderWidth
                      : k.borderWidth || w.borderWidth,
                    borderColor: e.borderColor
                      ? e.borderColor
                      : k.borderColor || w.borderColor,
                    fill: e.fill ? e.fill : void 0 !== k.fill ? k.fill : w.fill,
                    borderCapStyle: e.borderCapStyle
                      ? e.borderCapStyle
                      : k.borderCapStyle || w.borderCapStyle,
                    borderDash: e.borderDash
                      ? e.borderDash
                      : k.borderDash || w.borderDash,
                    borderDashOffset: e.borderDashOffset
                      ? e.borderDashOffset
                      : k.borderDashOffset || w.borderDashOffset,
                    borderJoinStyle: e.borderJoinStyle
                      ? e.borderJoinStyle
                      : k.borderJoinStyle || w.borderJoinStyle,
                    scaleTop: v.top,
                    scaleBottom: v.bottom,
                    scaleZero: v.getBasePosition(),
                  },
                });
                a.dataset.pivot();
                l.each(
                  c,
                  function (a, e) {
                    d.updateElement(a, e, f);
                  },
                  d
                );
                d.updateBezierControlPoints();
              },
              updateElement: function (f, d, a) {
                var c = f.custom || {},
                  e = this.getDataset(),
                  k = this.chart.scale,
                  w = this.chart.options.elements.point,
                  v = k.getPointPositionForValue(d, e.data[d]);
                l.extend(f, {
                  _datasetIndex: this.index,
                  _index: d,
                  _scale: k,
                  _model: {
                    x: a ? k.xCenter : v.x,
                    y: a ? k.yCenter : v.y,
                    tension: c.tension
                      ? c.tension
                      : l.getValueOrDefault(
                          e.lineTension,
                          this.chart.options.elements.line.tension
                        ),
                    radius: c.radius
                      ? c.radius
                      : l.getValueAtIndexOrDefault(e.pointRadius, d, w.radius),
                    backgroundColor: c.backgroundColor
                      ? c.backgroundColor
                      : l.getValueAtIndexOrDefault(
                          e.pointBackgroundColor,
                          d,
                          w.backgroundColor
                        ),
                    borderColor: c.borderColor
                      ? c.borderColor
                      : l.getValueAtIndexOrDefault(
                          e.pointBorderColor,
                          d,
                          w.borderColor
                        ),
                    borderWidth: c.borderWidth
                      ? c.borderWidth
                      : l.getValueAtIndexOrDefault(
                          e.pointBorderWidth,
                          d,
                          w.borderWidth
                        ),
                    pointStyle: c.pointStyle
                      ? c.pointStyle
                      : l.getValueAtIndexOrDefault(
                          e.pointStyle,
                          d,
                          w.pointStyle
                        ),
                    hitRadius: c.hitRadius
                      ? c.hitRadius
                      : l.getValueAtIndexOrDefault(e.hitRadius, d, w.hitRadius),
                  },
                });
                f._model.skip = c.skip
                  ? c.skip
                  : isNaN(f._model.x) || isNaN(f._model.y);
              },
              updateBezierControlPoints: function () {
                var f = this.chart.chartArea,
                  d = this.getMeta();
                l.each(d.data, function (a, c) {
                  var e = a._model;
                  c = l.splineCurve(
                    l.previousItem(d.data, c, !0)._model,
                    e,
                    l.nextItem(d.data, c, !0)._model,
                    e.tension
                  );
                  e.controlPointPreviousX = Math.max(
                    Math.min(c.previous.x, f.right),
                    f.left
                  );
                  e.controlPointPreviousY = Math.max(
                    Math.min(c.previous.y, f.bottom),
                    f.top
                  );
                  e.controlPointNextX = Math.max(
                    Math.min(c.next.x, f.right),
                    f.left
                  );
                  e.controlPointNextY = Math.max(
                    Math.min(c.next.y, f.bottom),
                    f.top
                  );
                  a.pivot();
                });
              },
              draw: function (f) {
                var d = this.getMeta(),
                  a = f || 1;
                l.each(d.data, function (c) {
                  c.transition(a);
                });
                d.dataset.transition(a).draw();
                l.each(d.data, function (a) {
                  a.draw();
                });
              },
              setHoverStyle: function (f) {
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f.custom || {},
                  c = f._index;
                f = f._model;
                f.radius = a.hoverRadius
                  ? a.hoverRadius
                  : l.getValueAtIndexOrDefault(
                      d.pointHoverRadius,
                      c,
                      this.chart.options.elements.point.hoverRadius
                    );
                f.backgroundColor = a.hoverBackgroundColor
                  ? a.hoverBackgroundColor
                  : l.getValueAtIndexOrDefault(
                      d.pointHoverBackgroundColor,
                      c,
                      l.getHoverColor(f.backgroundColor)
                    );
                f.borderColor = a.hoverBorderColor
                  ? a.hoverBorderColor
                  : l.getValueAtIndexOrDefault(
                      d.pointHoverBorderColor,
                      c,
                      l.getHoverColor(f.borderColor)
                    );
                f.borderWidth = a.hoverBorderWidth
                  ? a.hoverBorderWidth
                  : l.getValueAtIndexOrDefault(
                      d.pointHoverBorderWidth,
                      c,
                      f.borderWidth
                    );
              },
              removeHoverStyle: function (f) {
                var d = this.chart.data.datasets[f._datasetIndex],
                  a = f.custom || {},
                  c = f._index;
                f = f._model;
                var e = this.chart.options.elements.point;
                f.radius = a.radius
                  ? a.radius
                  : l.getValueAtIndexOrDefault(d.radius, c, e.radius);
                f.backgroundColor = a.backgroundColor
                  ? a.backgroundColor
                  : l.getValueAtIndexOrDefault(
                      d.pointBackgroundColor,
                      c,
                      e.backgroundColor
                    );
                f.borderColor = a.borderColor
                  ? a.borderColor
                  : l.getValueAtIndexOrDefault(
                      d.pointBorderColor,
                      c,
                      e.borderColor
                    );
                f.borderWidth = a.borderWidth
                  ? a.borderWidth
                  : l.getValueAtIndexOrDefault(
                      d.pointBorderWidth,
                      c,
                      e.borderWidth
                    );
              },
            });
          };
        },
        {},
      ],
      21: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.global.animation = {
              duration: 1e3,
              easing: "easeOutQuart",
              onProgress: l.noop,
              onComplete: l.noop,
            };
            h.Animation = h.Element.extend({
              currentStep: null,
              numSteps: 60,
              easing: "",
              render: null,
              onAnimationProgress: null,
              onAnimationComplete: null,
            });
            h.animationService = {
              frameDuration: 17,
              animations: [],
              dropFrames: 0,
              request: null,
              addAnimation: function (f, d, a, c) {
                c || (f.animating = !0);
                for (a = 0; a < this.animations.length; ++a)
                  if (this.animations[a].chartInstance === f) {
                    this.animations[a].animationObject = d;
                    return;
                  }
                this.animations.push({ chartInstance: f, animationObject: d });
                1 === this.animations.length && this.requestAnimationFrame();
              },
              cancelAnimation: function (f) {
                var d = l.findIndex(this.animations, function (a) {
                  return a.chartInstance === f;
                });
                -1 !== d && (this.animations.splice(d, 1), (f.animating = !1));
              },
              requestAnimationFrame: function () {
                var f = this;
                null === f.request &&
                  (f.request = l.requestAnimFrame.call(window, function () {
                    f.request = null;
                    f.startDigest();
                  }));
              },
              startDigest: function () {
                var f = Date.now(),
                  d = 0;
                1 < this.dropFrames &&
                  ((d = Math.floor(this.dropFrames)), (this.dropFrames %= 1));
                for (var a = 0; a < this.animations.length; )
                  null === this.animations[a].animationObject.currentStep &&
                    (this.animations[a].animationObject.currentStep = 0),
                    (this.animations[a].animationObject.currentStep += 1 + d),
                    this.animations[a].animationObject.currentStep >
                      this.animations[a].animationObject.numSteps &&
                      (this.animations[a].animationObject.currentStep =
                        this.animations[a].animationObject.numSteps),
                    this.animations[a].animationObject.render(
                      this.animations[a].chartInstance,
                      this.animations[a].animationObject
                    ),
                    this.animations[a].animationObject.onAnimationProgress &&
                      this.animations[a].animationObject.onAnimationProgress
                        .call &&
                      this.animations[
                        a
                      ].animationObject.onAnimationProgress.call(
                        this.animations[a].chartInstance,
                        this.animations[a]
                      ),
                    this.animations[a].animationObject.currentStep ===
                    this.animations[a].animationObject.numSteps
                      ? (this.animations[a].animationObject
                          .onAnimationComplete &&
                          this.animations[a].animationObject.onAnimationComplete
                            .call &&
                          this.animations[
                            a
                          ].animationObject.onAnimationComplete.call(
                            this.animations[a].chartInstance,
                            this.animations[a]
                          ),
                        (this.animations[a].chartInstance.animating = !1),
                        this.animations.splice(a, 1))
                      : ++a;
                f = (Date.now() - f) / this.frameDuration;
                this.dropFrames += f;
                0 < this.animations.length && this.requestAnimationFrame();
              },
            };
          };
        },
        {},
      ],
      22: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = (h.canvasHelpers = {});
            l.drawPoint = function (f, d, a, c, e) {
              if ("object" === typeof d) {
                var k = d.toString();
                if (
                  "[object HTMLImageElement]" === k ||
                  "[object HTMLCanvasElement]" === k
                ) {
                  f.drawImage(d, c - d.width / 2, e - d.height / 2);
                  return;
                }
              }
              if (!(isNaN(a) || 0 >= a)) {
                switch (d) {
                  default:
                    f.beginPath();
                    f.arc(c, e, a, 0, 2 * Math.PI);
                    f.closePath();
                    f.fill();
                    break;
                  case "triangle":
                    f.beginPath();
                    a = (3 * a) / Math.sqrt(3);
                    d = (a * Math.sqrt(3)) / 2;
                    f.moveTo(c - a / 2, e + d / 3);
                    f.lineTo(c + a / 2, e + d / 3);
                    f.lineTo(c, e - (2 * d) / 3);
                    f.closePath();
                    f.fill();
                    break;
                  case "rect":
                    a *= 1 / Math.SQRT2;
                    f.beginPath();
                    f.fillRect(c - a, e - a, 2 * a, 2 * a);
                    f.strokeRect(c - a, e - a, 2 * a, 2 * a);
                    break;
                  case "rectRounded":
                    d = a / Math.SQRT2;
                    k = Math.SQRT2 * a;
                    h.helpers.drawRoundedRectangle(
                      f,
                      c - d,
                      e - d,
                      k,
                      k,
                      a / 2
                    );
                    f.fill();
                    break;
                  case "rectRot":
                    a *= 1 / Math.SQRT2;
                    f.beginPath();
                    f.moveTo(c - a, e);
                    f.lineTo(c, e + a);
                    f.lineTo(c + a, e);
                    f.lineTo(c, e - a);
                    f.closePath();
                    f.fill();
                    break;
                  case "cross":
                    f.beginPath();
                    f.moveTo(c, e + a);
                    f.lineTo(c, e - a);
                    f.moveTo(c - a, e);
                    f.lineTo(c + a, e);
                    f.closePath();
                    break;
                  case "crossRot":
                    f.beginPath();
                    d = Math.cos(Math.PI / 4) * a;
                    a *= Math.sin(Math.PI / 4);
                    f.moveTo(c - d, e - a);
                    f.lineTo(c + d, e + a);
                    f.moveTo(c - d, e + a);
                    f.lineTo(c + d, e - a);
                    f.closePath();
                    break;
                  case "star":
                    f.beginPath();
                    f.moveTo(c, e + a);
                    f.lineTo(c, e - a);
                    f.moveTo(c - a, e);
                    f.lineTo(c + a, e);
                    d = Math.cos(Math.PI / 4) * a;
                    a *= Math.sin(Math.PI / 4);
                    f.moveTo(c - d, e - a);
                    f.lineTo(c + d, e + a);
                    f.moveTo(c - d, e + a);
                    f.lineTo(c + d, e - a);
                    f.closePath();
                    break;
                  case "line":
                    f.beginPath();
                    f.moveTo(c - a, e);
                    f.lineTo(c + a, e);
                    f.closePath();
                    break;
                  case "dash":
                    f.beginPath(),
                      f.moveTo(c, e),
                      f.lineTo(c + a, e),
                      f.closePath();
                }
                f.stroke();
              }
            };
            l.clipArea = function (f, d) {
              f.save();
              f.beginPath();
              f.rect(d.left, d.top, d.right - d.left, d.bottom - d.top);
              f.clip();
            };
            l.unclipArea = function (f) {
              f.restore();
            };
          };
        },
        {},
      ],
      23: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a) {
              a = a || {};
              var e = (a.data = a.data || {});
              e.datasets = e.datasets || [];
              e.labels = e.labels || [];
              a.options = d.configMerge(
                h.defaults.global,
                h.defaults[a.type],
                a.options || {}
              );
              return a;
            }
            function f(a) {
              var e = a.options;
              e.scale
                ? (a.scale.options = e.scale)
                : e.scales &&
                  e.scales.xAxes.concat(e.scales.yAxes).forEach(function (e) {
                    a.scales[e.id].options = e;
                  });
              a.tooltip._options = e.tooltips;
            }
            var d = h.helpers,
              a = h.plugins,
              c = h.platform;
            h.types = {};
            h.instances = {};
            h.controllers = {};
            h.Controller = function (a, k, f) {
              var e = this;
              k = l(k);
              var w = (a = c.acquireContext(a, k)) && a.canvas,
                p = w && w.height,
                x = w && w.width;
              f.ctx = a;
              f.canvas = w;
              f.config = k;
              f.width = x;
              f.height = p;
              f.aspectRatio = p ? x / p : null;
              e.id = d.uid();
              e.chart = f;
              e.config = k;
              e.options = k.options;
              e._bufferedRender = !1;
              h.instances[e.id] = e;
              Object.defineProperty(e, "data", {
                get: function () {
                  return e.config.data;
                },
              });
              if (!a || !w)
                return (
                  console.error(
                    "Failed to create chart: can't acquire context from the given item"
                  ),
                  e
                );
              e.initialize();
              e.update();
              return e;
            };
            d.extend(h.Controller.prototype, {
              initialize: function () {
                a.notify(this, "beforeInit");
                d.retinaScale(this.chart);
                this.bindEvents();
                this.options.responsive && this.resize(!0);
                this.ensureScalesHaveIDs();
                this.buildScales();
                this.initToolTip();
                a.notify(this, "afterInit");
                return this;
              },
              clear: function () {
                d.clear(this.chart);
                return this;
              },
              stop: function () {
                h.animationService.cancelAnimation(this);
                return this;
              },
              resize: function (e) {
                var c = this.chart,
                  f = c.canvas,
                  v =
                    (this.options.maintainAspectRatio && c.aspectRatio) || null,
                  q = Math.floor(d.getMaximumWidth(f));
                v = Math.floor(v ? q / v : d.getMaximumHeight(f));
                if (c.width !== q || c.height !== v)
                  if (
                    ((f.width = c.width = q),
                    (f.height = c.height = v),
                    (f.style.width = q + "px"),
                    (f.style.height = v + "px"),
                    d.retinaScale(c),
                    !e)
                  ) {
                    e = { width: q, height: v };
                    a.notify(this, "resize", [e]);
                    if (this.options.onResize) this.options.onResize(this, e);
                    this.stop();
                    this.update(this.options.responsiveAnimationDuration);
                  }
              },
              ensureScalesHaveIDs: function () {
                var a = this.options,
                  c = a.scales || {};
                a = a.scale;
                d.each(c.xAxes, function (a, e) {
                  a.id = a.id || "x-axis-" + e;
                });
                d.each(c.yAxes, function (a, e) {
                  a.id = a.id || "y-axis-" + e;
                });
                a && (a.id = a.id || "scale");
              },
              buildScales: function () {
                var a = this,
                  c = a.options,
                  f = (a.scales = {}),
                  v = [];
                c.scales &&
                  (v = v.concat(
                    (c.scales.xAxes || []).map(function (a) {
                      return { options: a, dtype: "category" };
                    }),
                    (c.scales.yAxes || []).map(function (a) {
                      return { options: a, dtype: "linear" };
                    })
                  ));
                c.scale &&
                  v.push({
                    options: c.scale,
                    dtype: "radialLinear",
                    isDefault: !0,
                  });
                d.each(v, function (e) {
                  var c = e.options,
                    k = d.getValueOrDefault(c.type, e.dtype);
                  if ((k = h.scaleService.getScaleConstructor(k)))
                    (c = new k({
                      id: c.id,
                      options: c,
                      ctx: a.chart.ctx,
                      chart: a,
                    })),
                      (f[c.id] = c),
                      e.isDefault && (a.scale = c);
                });
                h.scaleService.addScalesToLayout(this);
              },
              buildOrUpdateControllers: function () {
                var a = this,
                  c = [],
                  f = [];
                d.each(
                  a.data.datasets,
                  function (e, d) {
                    var k = a.getDatasetMeta(d);
                    k.type || (k.type = e.type || a.config.type);
                    c.push(k.type);
                    k.controller
                      ? k.controller.updateIndex(d)
                      : ((k.controller = new h.controllers[k.type](a, d)),
                        f.push(k.controller));
                  },
                  a
                );
                if (1 < c.length)
                  for (var v = 1; v < c.length; v++)
                    if (c[v] !== c[v - 1]) {
                      a.isCombo = !0;
                      break;
                    }
                return f;
              },
              resetElements: function () {
                var a = this;
                d.each(
                  a.data.datasets,
                  function (e, c) {
                    a.getDatasetMeta(c).controller.reset();
                  },
                  a
                );
              },
              reset: function () {
                this.resetElements();
                this.tooltip.initialize();
              },
              update: function (e, c) {
                var k = this;
                f(k);
                if (!1 !== a.notify(k, "beforeUpdate")) {
                  k.tooltip._data = k.data;
                  var v = k.buildOrUpdateControllers();
                  d.each(
                    k.data.datasets,
                    function (a, e) {
                      k.getDatasetMeta(e).controller.buildOrUpdateElements();
                    },
                    k
                  );
                  k.updateLayout();
                  d.each(v, function (a) {
                    a.reset();
                  });
                  k.updateDatasets();
                  a.notify(k, "afterUpdate");
                  k._bufferedRender
                    ? (k._bufferedRequest = { lazy: c, duration: e })
                    : k.render(e, c);
                }
              },
              updateLayout: function () {
                !1 !== a.notify(this, "beforeLayout") &&
                  (h.layoutService.update(
                    this,
                    this.chart.width,
                    this.chart.height
                  ),
                  a.notify(this, "afterScaleUpdate"),
                  a.notify(this, "afterLayout"));
              },
              updateDatasets: function () {
                if (!1 !== a.notify(this, "beforeDatasetsUpdate")) {
                  for (var e = 0, c = this.data.datasets.length; e < c; ++e)
                    this.getDatasetMeta(e).controller.update();
                  a.notify(this, "afterDatasetsUpdate");
                }
              },
              render: function (e, c) {
                var k = this;
                if (!1 !== a.notify(k, "beforeRender")) {
                  var f = k.options.animation,
                    q = function () {
                      a.notify(k, "afterRender");
                      var e = f && f.onComplete;
                      e && e.call && e.call(k);
                    };
                  if (
                    f &&
                    (("undefined" !== typeof e && 0 !== e) ||
                      ("undefined" === typeof e && 0 !== f.duration))
                  ) {
                    var p = new h.Animation();
                    p.numSteps = (e || f.duration) / 16.66;
                    p.easing = f.easing;
                    p.render = function (a, e) {
                      var c = e.currentStep / e.numSteps,
                        k = (0, d.easingEffects[e.easing])(c);
                      a.draw(k, c, e.currentStep);
                    };
                    p.onAnimationProgress = f.onProgress;
                    p.onAnimationComplete = q;
                    h.animationService.addAnimation(k, p, e, c);
                  } else k.draw(), q();
                  return k;
                }
              },
              draw: function (e) {
                var c = this;
                c.clear();
                if (void 0 === e || null === e) e = 1;
                !1 !== a.notify(c, "beforeDraw", [e]) &&
                  (d.each(
                    c.boxes,
                    function (a) {
                      a.draw(c.chartArea);
                    },
                    c
                  ),
                  c.scale && c.scale.draw(),
                  c.drawDatasets(e),
                  c.tooltip.transition(e).draw(),
                  a.notify(c, "afterDraw", [e]));
              },
              drawDatasets: function (e) {
                var c = this;
                !1 !== a.notify(c, "beforeDatasetsDraw", [e]) &&
                  (d.each(
                    c.data.datasets,
                    function (a, d) {
                      c.isDatasetVisible(d) &&
                        c.getDatasetMeta(d).controller.draw(e);
                    },
                    c,
                    !0
                  ),
                  a.notify(c, "afterDatasetsDraw", [e]));
              },
              getElementAtEvent: function (a) {
                return h.Interaction.modes.single(this, a);
              },
              getElementsAtEvent: function (a) {
                return h.Interaction.modes.label(this, a, { intersect: !0 });
              },
              getElementsAtXAxis: function (a) {
                return h.Interaction.modes["x-axis"](this, a, {
                  intersect: !0,
                });
              },
              getElementsAtEventForMode: function (a, c, d) {
                c = h.Interaction.modes[c];
                return "function" === typeof c ? c(this, a, d) : [];
              },
              getDatasetAtEvent: function (a) {
                return h.Interaction.modes.dataset(this, a, { intersect: !0 });
              },
              getDatasetMeta: function (a) {
                a = this.data.datasets[a];
                a._meta || (a._meta = {});
                var e = a._meta[this.id];
                e ||
                  (e = a._meta[this.id] =
                    {
                      type: null,
                      data: [],
                      dataset: null,
                      controller: null,
                      hidden: null,
                      xAxisID: null,
                      yAxisID: null,
                    });
                return e;
              },
              getVisibleDatasetCount: function () {
                for (
                  var a = 0, c = 0, d = this.data.datasets.length;
                  c < d;
                  ++c
                )
                  this.isDatasetVisible(c) && a++;
                return a;
              },
              isDatasetVisible: function (a) {
                var e = this.getDatasetMeta(a);
                return "boolean" === typeof e.hidden
                  ? !e.hidden
                  : !this.data.datasets[a].hidden;
              },
              generateLegend: function () {
                return this.options.legendCallback(this);
              },
              destroy: function () {
                var e = this.chart.canvas,
                  k;
                this.stop();
                var f = 0;
                for (k = this.data.datasets.length; f < k; ++f) {
                  var v = this.getDatasetMeta(f);
                  v.controller &&
                    (v.controller.destroy(), (v.controller = null));
                }
                e &&
                  (this.unbindEvents(),
                  d.clear(this.chart),
                  c.releaseContext(this.chart.ctx),
                  (this.chart.canvas = null),
                  (this.chart.ctx = null));
                a.notify(this, "destroy");
                delete h.instances[this.id];
              },
              toBase64Image: function () {
                return this.chart.canvas.toDataURL.apply(
                  this.chart.canvas,
                  arguments
                );
              },
              initToolTip: function () {
                this.tooltip = new h.Tooltip(
                  {
                    _chart: this.chart,
                    _chartInstance: this,
                    _data: this.data,
                    _options: this.options.tooltips,
                  },
                  this
                );
                this.tooltip.initialize();
              },
              bindEvents: function () {
                var a = this,
                  k = (a._listeners = {}),
                  f = function () {
                    a.eventHandler.apply(a, arguments);
                  };
                d.each(a.options.events, function (e) {
                  c.addEventListener(a, e, f);
                  k[e] = f;
                });
                a.options.responsive &&
                  ((f = function () {
                    a.resize();
                  }),
                  c.addEventListener(a, "resize", f),
                  (k.resize = f));
              },
              unbindEvents: function () {
                var a = this,
                  k = a._listeners;
                k &&
                  (delete a._listeners,
                  d.each(k, function (e, d) {
                    c.removeEventListener(a, d, e);
                  }));
              },
              updateHoverStyle: function (a, c, d) {
                c = d ? "setHoverStyle" : "removeHoverStyle";
                var e,
                  k = 0;
                for (e = a.length; k < e; ++k)
                  if ((d = a[k]))
                    this.getDatasetMeta(d._datasetIndex).controller[c](d);
              },
              eventHandler: function (e) {
                var c = this.tooltip;
                if (!1 !== a.notify(this, "beforeEvent", [e])) {
                  this._bufferedRender = !0;
                  this._bufferedRequest = null;
                  var d = this.handleEvent(e);
                  d |= c && c.handleEvent(e);
                  a.notify(this, "afterEvent", [e]);
                  (e = this._bufferedRequest)
                    ? this.render(e.duration, e.lazy)
                    : d &&
                      !this.animating &&
                      (this.stop(),
                      this.render(this.options.hover.animationDuration, !0));
                  this._bufferedRender = !1;
                  this._bufferedRequest = null;
                  return this;
                }
              },
              handleEvent: function (a) {
                var e = this.options || {},
                  c = e.hover;
                this.lastActive = this.lastActive || [];
                this.active =
                  "mouseout" === a.type
                    ? []
                    : this.getElementsAtEventForMode(a, c.mode, c);
                c.onHover && c.onHover.call(this, a.native, this.active);
                ("mouseup" === a.type || "click" === a.type) &&
                  e.onClick &&
                  e.onClick.call(this, a.native, this.active);
                this.lastActive.length &&
                  this.updateHoverStyle(this.lastActive, c.mode, !1);
                this.active.length &&
                  c.mode &&
                  this.updateHoverStyle(this.active, c.mode, !0);
                a = !d.arrayEquals(this.active, this.lastActive);
                this.lastActive = this.active;
                return a;
              },
            });
          };
        },
        {},
      ],
      24: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(c, e) {
              c._chartjs
                ? c._chartjs.listeners.push(e)
                : (Object.defineProperty(c, "_chartjs", {
                    configurable: !0,
                    enumerable: !1,
                    value: { listeners: [e] },
                  }),
                  a.forEach(function (a) {
                    var e = "onData" + a.charAt(0).toUpperCase() + a.slice(1),
                      k = c[a];
                    Object.defineProperty(c, a, {
                      configurable: !0,
                      enumerable: !1,
                      value: function () {
                        var a = Array.prototype.slice.call(arguments),
                          f = k.apply(this, a);
                        d.each(c._chartjs.listeners, function (c) {
                          "function" === typeof c[e] && c[e].apply(c, a);
                        });
                        return f;
                      },
                    });
                  }));
            }
            function f(c, e) {
              var d = c._chartjs;
              d &&
                ((d = d.listeners),
                (e = d.indexOf(e)),
                -1 !== e && d.splice(e, 1),
                0 < d.length ||
                  (a.forEach(function (a) {
                    delete c[a];
                  }),
                  delete c._chartjs));
            }
            var d = h.helpers,
              a = ["push", "pop", "shift", "splice", "unshift"];
            h.DatasetController = function (a, e) {
              this.initialize(a, e);
            };
            d.extend(h.DatasetController.prototype, {
              datasetElementType: null,
              dataElementType: null,
              initialize: function (a, e) {
                this.chart = a;
                this.index = e;
                this.linkScales();
                this.addElements();
              },
              updateIndex: function (a) {
                this.index = a;
              },
              linkScales: function () {
                var a = this.getMeta(),
                  e = this.getDataset();
                null === a.xAxisID &&
                  (a.xAxisID =
                    e.xAxisID || this.chart.options.scales.xAxes[0].id);
                null === a.yAxisID &&
                  (a.yAxisID =
                    e.yAxisID || this.chart.options.scales.yAxes[0].id);
              },
              getDataset: function () {
                return this.chart.data.datasets[this.index];
              },
              getMeta: function () {
                return this.chart.getDatasetMeta(this.index);
              },
              getScaleForId: function (a) {
                return this.chart.scales[a];
              },
              reset: function () {
                this.update(!0);
              },
              destroy: function () {
                this._data && f(this._data, this);
              },
              createMetaDataset: function () {
                var a = this.datasetElementType;
                return (
                  a &&
                  new a({ _chart: this.chart.chart, _datasetIndex: this.index })
                );
              },
              createMetaData: function (a) {
                var e = this.dataElementType;
                return (
                  e &&
                  new e({
                    _chart: this.chart.chart,
                    _datasetIndex: this.index,
                    _index: a,
                  })
                );
              },
              addElements: function () {
                var a = this.getMeta(),
                  e = this.getDataset().data || [],
                  d = a.data,
                  f = 0;
                for (e = e.length; f < e; ++f)
                  d[f] = d[f] || this.createMetaData(f);
                a.dataset = a.dataset || this.createMetaDataset();
              },
              addElementAndReset: function (a) {
                var e = this.createMetaData(a);
                this.getMeta().data.splice(a, 0, e);
                this.updateElement(e, a, !0);
              },
              buildOrUpdateElements: function () {
                var a = this.getDataset();
                a = a.data || (a.data = []);
                this._data !== a &&
                  (this._data && f(this._data, this),
                  l(a, this),
                  (this._data = a));
                this.resyncElements();
              },
              update: d.noop,
              draw: function (a) {
                a = a || 1;
                var e,
                  c = this.getMeta().data,
                  d = 0;
                for (e = c.length; d < e; ++d) c[d].transition(a).draw();
              },
              removeHoverStyle: function (a, e) {
                var c = this.chart.data.datasets[a._datasetIndex],
                  f = a._index,
                  v = a.custom || {},
                  q = d.getValueAtIndexOrDefault;
                a = a._model;
                a.backgroundColor = v.backgroundColor
                  ? v.backgroundColor
                  : q(c.backgroundColor, f, e.backgroundColor);
                a.borderColor = v.borderColor
                  ? v.borderColor
                  : q(c.borderColor, f, e.borderColor);
                a.borderWidth = v.borderWidth
                  ? v.borderWidth
                  : q(c.borderWidth, f, e.borderWidth);
              },
              setHoverStyle: function (a) {
                var e = this.chart.data.datasets[a._datasetIndex],
                  c = a._index,
                  f = a.custom || {},
                  v = d.getValueAtIndexOrDefault,
                  q = d.getHoverColor;
                a = a._model;
                a.backgroundColor = f.hoverBackgroundColor
                  ? f.hoverBackgroundColor
                  : v(e.hoverBackgroundColor, c, q(a.backgroundColor));
                a.borderColor = f.hoverBorderColor
                  ? f.hoverBorderColor
                  : v(e.hoverBorderColor, c, q(a.borderColor));
                a.borderWidth = f.hoverBorderWidth
                  ? f.hoverBorderWidth
                  : v(e.hoverBorderWidth, c, a.borderWidth);
              },
              resyncElements: function () {
                var a = this.getMeta(),
                  e = this.getDataset().data,
                  d = a.data.length;
                e = e.length;
                e < d
                  ? a.data.splice(e, d - e)
                  : e > d && this.insertElements(d, e - d);
              },
              insertElements: function (a, e) {
                for (var c = 0; c < e; ++c) this.addElementAndReset(a + c);
              },
              onDataPush: function () {
                this.insertElements(
                  this.getDataset().data.length - 1,
                  arguments.length
                );
              },
              onDataPop: function () {
                this.getMeta().data.pop();
              },
              onDataShift: function () {
                this.getMeta().data.shift();
              },
              onDataSplice: function (a, e) {
                this.getMeta().data.splice(a, e);
                this.insertElements(a, arguments.length - 2);
              },
              onDataUnshift: function () {
                this.insertElements(0, arguments.length);
              },
            });
            h.DatasetController.extend = d.inherits;
          };
        },
        {},
      ],
      25: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.elements = {};
            h.Element = function (f) {
              l.extend(this, f);
              this.initialize.apply(this, arguments);
            };
            l.extend(h.Element.prototype, {
              initialize: function () {
                this.hidden = !1;
              },
              pivot: function () {
                this._view || (this._view = l.clone(this._model));
                this._start = l.clone(this._view);
                return this;
              },
              transition: function (f) {
                var d = this;
                d._view || (d._view = l.clone(d._model));
                if (1 === f) return (d._view = d._model), (d._start = null), d;
                d._start || d.pivot();
                l.each(
                  d._model,
                  function (a, c) {
                    if ("_" !== c[0])
                      if (!d._view.hasOwnProperty(c))
                        "number" !== typeof a || isNaN(d._view[c])
                          ? (d._view[c] = a)
                          : (d._view[c] = a * f);
                      else if (a !== d._view[c])
                        if ("string" === typeof a)
                          try {
                            var e = l
                              .color(d._model[c])
                              .mix(l.color(d._start[c]), f);
                            d._view[c] = e.rgbString();
                          } catch (k) {
                            d._view[c] = a;
                          }
                        else
                          "number" === typeof a
                            ? ((a =
                                void 0 !== d._start[c] &&
                                !1 === isNaN(d._start[c])
                                  ? d._start[c]
                                  : 0),
                              (d._view[c] = (d._model[c] - a) * f + a))
                            : (d._view[c] = a);
                  },
                  d
                );
                return d;
              },
              tooltipPosition: function () {
                return { x: this._model.x, y: this._model.y };
              },
              hasValue: function () {
                return l.isNumber(this._model.x) && l.isNumber(this._model.y);
              },
            });
            h.Element.extend = l.inherits;
          };
        },
        {},
      ],
      26: [
        function (u, n, t) {
          var h = u(3);
          n.exports = function (l) {
            function f(a, c, d) {
              if ("string" === typeof a) {
                var e = parseInt(a, 10);
                -1 !== a.indexOf("%") && (e = (e / 100) * c.parentNode[d]);
              } else e = a;
              return e;
            }
            function d(a, c, d) {
              var e = document.defaultView,
                k = a.parentNode,
                p = e.getComputedStyle(a)[c];
              c = e.getComputedStyle(k)[c];
              e = void 0 !== p && null !== p && "none" !== p;
              var w = void 0 !== c && null !== c && "none" !== c,
                y = Number.POSITIVE_INFINITY;
              return e || w
                ? Math.min(e ? f(p, a, d) : y, w ? f(c, k, d) : y)
                : "none";
            }
            var a = (l.helpers = {});
            a.each = function (e, c, d, f) {
              if (a.isArray(e)) {
                var k = e.length;
                if (f) for (f = k - 1; 0 <= f; f--) c.call(d, e[f], f);
                else for (f = 0; f < k; f++) c.call(d, e[f], f);
              } else if ("object" === typeof e) {
                var p = Object.keys(e);
                k = p.length;
                for (f = 0; f < k; f++) c.call(d, e[p[f]], p[f]);
              }
            };
            a.clone = function (e) {
              var c = {};
              a.each(e, function (e, d) {
                a.isArray(e)
                  ? (c[d] = e.slice(0))
                  : (c[d] =
                      "object" === typeof e && null !== e ? a.clone(e) : e);
              });
              return c;
            };
            a.extend = function (e) {
              for (
                var c = function (a, c) {
                    e[c] = a;
                  },
                  d = 1,
                  f = arguments.length;
                d < f;
                d++
              )
                a.each(arguments[d], c);
              return e;
            };
            a.configMerge = function (e) {
              var c = a.clone(e);
              a.each(Array.prototype.slice.call(arguments, 1), function (e) {
                a.each(e, function (e, d) {
                  var k = c.hasOwnProperty(d),
                    f = k ? c[d] : {};
                  "scales" === d
                    ? (c[d] = a.scaleMerge(f, e))
                    : "scale" === d
                    ? (c[d] = a.configMerge(
                        f,
                        l.scaleService.getScaleDefaults(e.type),
                        e
                      ))
                    : !k ||
                      "object" !== typeof f ||
                      a.isArray(f) ||
                      null === f ||
                      "object" !== typeof e ||
                      a.isArray(e)
                    ? (c[d] = e)
                    : (c[d] = a.configMerge(f, e));
                });
              });
              return c;
            };
            a.scaleMerge = function (e, c) {
              var d = a.clone(e);
              a.each(c, function (e, c) {
                "xAxes" === c || "yAxes" === c
                  ? d.hasOwnProperty(c)
                    ? a.each(e, function (e, k) {
                        var f = a.getValueOrDefault(
                          e.type,
                          "xAxes" === c ? "category" : "linear"
                        );
                        f = l.scaleService.getScaleDefaults(f);
                        k >= d[c].length || !d[c][k].type
                          ? d[c].push(a.configMerge(f, e))
                          : (d[c][k] =
                              e.type && e.type !== d[c][k].type
                                ? a.configMerge(d[c][k], f, e)
                                : a.configMerge(d[c][k], e));
                      })
                    : ((d[c] = []),
                      a.each(e, function (e) {
                        var k = a.getValueOrDefault(
                          e.type,
                          "xAxes" === c ? "category" : "linear"
                        );
                        d[c].push(
                          a.configMerge(l.scaleService.getScaleDefaults(k), e)
                        );
                      }))
                  : d.hasOwnProperty(c) &&
                    "object" === typeof d[c] &&
                    null !== d[c] &&
                    "object" === typeof e
                  ? (d[c] = a.configMerge(d[c], e))
                  : (d[c] = e);
              });
              return d;
            };
            a.getValueAtIndexOrDefault = function (e, c, d) {
              return void 0 === e || null === e
                ? d
                : a.isArray(e)
                ? c < e.length
                  ? e[c]
                  : d
                : e;
            };
            a.getValueOrDefault = function (a, c) {
              return void 0 === a ? c : a;
            };
            a.indexOf = Array.prototype.indexOf
              ? function (a, c) {
                  return a.indexOf(c);
                }
              : function (a, c) {
                  for (var e = 0, d = a.length; e < d; ++e)
                    if (a[e] === c) return e;
                  return -1;
                };
            a.where = function (e, c) {
              if (a.isArray(e) && Array.prototype.filter) return e.filter(c);
              var d = [];
              a.each(e, function (a) {
                c(a) && d.push(a);
              });
              return d;
            };
            a.findIndex = Array.prototype.findIndex
              ? function (a, c, d) {
                  return a.findIndex(c, d);
                }
              : function (a, c, d) {
                  d = void 0 === d ? a : d;
                  for (var e = 0, k = a.length; e < k; ++e)
                    if (c.call(d, a[e], e, a)) return e;
                  return -1;
                };
            a.findNextWhere = function (a, c, d) {
              if (void 0 === d || null === d) d = -1;
              for (d += 1; d < a.length; d++) {
                var e = a[d];
                if (c(e)) return e;
              }
            };
            a.findPreviousWhere = function (a, c, d) {
              if (void 0 === d || null === d) d = a.length;
              for (--d; 0 <= d; d--) {
                var e = a[d];
                if (c(e)) return e;
              }
            };
            a.inherits = function (e) {
              var c = this,
                d =
                  e && e.hasOwnProperty("constructor")
                    ? e.constructor
                    : function () {
                        return c.apply(this, arguments);
                      },
                f = function () {
                  this.constructor = d;
                };
              f.prototype = c.prototype;
              d.prototype = new f();
              d.extend = a.inherits;
              e && a.extend(d.prototype, e);
              d.__super__ = c.prototype;
              return d;
            };
            a.noop = function () {};
            a.uid = (function () {
              var a = 0;
              return function () {
                return a++;
              };
            })();
            a.isNumber = function (a) {
              return !isNaN(parseFloat(a)) && isFinite(a);
            };
            a.almostEquals = function (a, c, d) {
              return Math.abs(a - c) < d;
            };
            a.almostWhole = function (a, c) {
              var e = Math.round(a);
              return e - c < a && e + c > a;
            };
            a.max = function (a) {
              return a.reduce(function (a, c) {
                return isNaN(c) ? a : Math.max(a, c);
              }, Number.NEGATIVE_INFINITY);
            };
            a.min = function (a) {
              return a.reduce(function (a, c) {
                return isNaN(c) ? a : Math.min(a, c);
              }, Number.POSITIVE_INFINITY);
            };
            a.sign = Math.sign
              ? function (a) {
                  return Math.sign(a);
                }
              : function (a) {
                  a = +a;
                  return 0 === a || isNaN(a) ? a : 0 < a ? 1 : -1;
                };
            a.log10 = Math.log10
              ? function (a) {
                  return Math.log10(a);
                }
              : function (a) {
                  return Math.log(a) / Math.LN10;
                };
            a.toRadians = function (a) {
              return (Math.PI / 180) * a;
            };
            a.toDegrees = function (a) {
              return (180 / Math.PI) * a;
            };
            a.getAngleFromPoint = function (a, c) {
              var e = c.x - a.x;
              c = c.y - a.y;
              a = Math.sqrt(e * e + c * c);
              e = Math.atan2(c, e);
              e < -0.5 * Math.PI && (e += 2 * Math.PI);
              return { angle: e, distance: a };
            };
            a.distanceBetweenPoints = function (a, c) {
              return Math.sqrt(Math.pow(c.x - a.x, 2) + Math.pow(c.y - a.y, 2));
            };
            a.aliasPixel = function (a) {
              return 0 === a % 2 ? 0 : 0.5;
            };
            a.splineCurve = function (a, c, d, f) {
              a = a.skip ? c : a;
              d = d.skip ? c : d;
              var e = Math.sqrt(
                  Math.pow(c.x - a.x, 2) + Math.pow(c.y - a.y, 2)
                ),
                k = Math.sqrt(Math.pow(d.x - c.x, 2) + Math.pow(d.y - c.y, 2)),
                w = e / (e + k);
              e = k / (e + k);
              w = isNaN(w) ? 0 : w;
              e = isNaN(e) ? 0 : e;
              w *= f;
              f *= e;
              return {
                previous: {
                  x: c.x - w * (d.x - a.x),
                  y: c.y - w * (d.y - a.y),
                },
                next: { x: c.x + f * (d.x - a.x), y: c.y + f * (d.y - a.y) },
              };
            };
            a.EPSILON = Number.EPSILON || 1e-14;
            a.splineCurveMonotone = function (c) {
              c = (c || []).map(function (a) {
                return { model: a._model, deltaK: 0, mK: 0 };
              });
              var e = c.length,
                d,
                f;
              for (d = 0; d < e; ++d) {
                var q = c[d];
                if (!q.model.skip) {
                  var p = 0 < d ? c[d - 1] : null;
                  if ((f = d < e - 1 ? c[d + 1] : null) && !f.model.skip) {
                    var x = f.model.x - q.model.x;
                    q.deltaK = 0 !== x ? (f.model.y - q.model.y) / x : 0;
                  }
                  !p || p.model.skip
                    ? (q.mK = q.deltaK)
                    : !f || f.model.skip
                    ? (q.mK = p.deltaK)
                    : this.sign(p.deltaK) !== this.sign(q.deltaK)
                    ? (q.mK = 0)
                    : (q.mK = (p.deltaK + q.deltaK) / 2);
                }
              }
              for (d = 0; d < e - 1; ++d)
                if (
                  ((q = c[d]), (f = c[d + 1]), !q.model.skip && !f.model.skip)
                )
                  if (a.almostEquals(q.deltaK, 0, this.EPSILON))
                    q.mK = f.mK = 0;
                  else {
                    p = q.mK / q.deltaK;
                    x = f.mK / q.deltaK;
                    var y = Math.pow(p, 2) + Math.pow(x, 2);
                    9 >= y ||
                      ((y = 3 / Math.sqrt(y)),
                      (q.mK = p * y * q.deltaK),
                      (f.mK = x * y * q.deltaK));
                  }
              for (d = 0; d < e; ++d)
                (q = c[d]),
                  q.model.skip ||
                    ((p = 0 < d ? c[d - 1] : null),
                    (f = d < e - 1 ? c[d + 1] : null),
                    p &&
                      !p.model.skip &&
                      ((p = (q.model.x - p.model.x) / 3),
                      (q.model.controlPointPreviousX = q.model.x - p),
                      (q.model.controlPointPreviousY = q.model.y - p * q.mK)),
                    f &&
                      !f.model.skip &&
                      ((p = (f.model.x - q.model.x) / 3),
                      (q.model.controlPointNextX = q.model.x + p),
                      (q.model.controlPointNextY = q.model.y + p * q.mK)));
            };
            a.nextItem = function (a, c, d) {
              return d
                ? c >= a.length - 1
                  ? a[0]
                  : a[c + 1]
                : c >= a.length - 1
                ? a[a.length - 1]
                : a[c + 1];
            };
            a.previousItem = function (a, c, d) {
              return d
                ? 0 >= c
                  ? a[a.length - 1]
                  : a[c - 1]
                : 0 >= c
                ? a[0]
                : a[c - 1];
            };
            a.niceNum = function (c, d) {
              var e = Math.floor(a.log10(c));
              c /= Math.pow(10, e);
              return (
                (d
                  ? 1.5 > c
                    ? 1
                    : 3 > c
                    ? 2
                    : 7 > c
                    ? 5
                    : 10
                  : 1 >= c
                  ? 1
                  : 2 >= c
                  ? 2
                  : 5 >= c
                  ? 5
                  : 10) * Math.pow(10, e)
              );
            };
            var c = (a.easingEffects = {
              linear: function (a) {
                return a;
              },
              easeInQuad: function (a) {
                return a * a;
              },
              easeOutQuad: function (a) {
                return -1 * a * (a - 2);
              },
              easeInOutQuad: function (a) {
                return 1 > (a /= 0.5)
                  ? 0.5 * a * a
                  : -0.5 * (--a * (a - 2) - 1);
              },
              easeInCubic: function (a) {
                return a * a * a;
              },
              easeOutCubic: function (a) {
                return (a = a / 1 - 1) * a * a + 1;
              },
              easeInOutCubic: function (a) {
                return 1 > (a /= 0.5)
                  ? 0.5 * a * a * a
                  : 0.5 * ((a -= 2) * a * a + 2);
              },
              easeInQuart: function (a) {
                return a * a * a * a;
              },
              easeOutQuart: function (a) {
                return -1 * ((a = a / 1 - 1) * a * a * a - 1);
              },
              easeInOutQuart: function (a) {
                return 1 > (a /= 0.5)
                  ? 0.5 * a * a * a * a
                  : -0.5 * ((a -= 2) * a * a * a - 2);
              },
              easeInQuint: function (a) {
                return (a /= 1) * a * a * a * a;
              },
              easeOutQuint: function (a) {
                return (a = a / 1 - 1) * a * a * a * a + 1;
              },
              easeInOutQuint: function (a) {
                return 1 > (a /= 0.5)
                  ? 0.5 * a * a * a * a * a
                  : 0.5 * ((a -= 2) * a * a * a * a + 2);
              },
              easeInSine: function (a) {
                return -1 * Math.cos((a / 1) * (Math.PI / 2)) + 1;
              },
              easeOutSine: function (a) {
                return 1 * Math.sin((a / 1) * (Math.PI / 2));
              },
              easeInOutSine: function (a) {
                return -0.5 * (Math.cos(Math.PI * a) - 1);
              },
              easeInExpo: function (a) {
                return 0 === a ? 1 : 1 * Math.pow(2, 10 * (a / 1 - 1));
              },
              easeOutExpo: function (a) {
                return 1 === a ? 1 : -Math.pow(2, -10 * a) + 1;
              },
              easeInOutExpo: function (a) {
                return 0 === a
                  ? 0
                  : 1 === a
                  ? 1
                  : 1 > (a /= 0.5)
                  ? 0.5 * Math.pow(2, 10 * (a - 1))
                  : 0.5 * (-Math.pow(2, -10 * --a) + 2);
              },
              easeInCirc: function (a) {
                return 1 <= a ? a : -1 * (Math.sqrt(1 - (a /= 1) * a) - 1);
              },
              easeOutCirc: function (a) {
                return 1 * Math.sqrt(1 - (a = a / 1 - 1) * a);
              },
              easeInOutCirc: function (a) {
                return 1 > (a /= 0.5)
                  ? -0.5 * (Math.sqrt(1 - a * a) - 1)
                  : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1);
              },
              easeInElastic: function (a) {
                var c = 0,
                  e = 1;
                if (0 === a) return 0;
                if (1 === (a /= 1)) return 1;
                c || (c = 0.3);
                if (1 > e) {
                  e = 1;
                  var d = c / 4;
                } else d = (c / (2 * Math.PI)) * Math.asin(1 / e);
                return -(
                  e *
                  Math.pow(2, 10 * --a) *
                  Math.sin((2 * (1 * a - d) * Math.PI) / c)
                );
              },
              easeOutElastic: function (a) {
                var c = 0,
                  e = 1;
                if (0 === a) return 0;
                if (1 === (a /= 1)) return 1;
                c || (c = 0.3);
                if (1 > e) {
                  e = 1;
                  var d = c / 4;
                } else d = (c / (2 * Math.PI)) * Math.asin(1 / e);
                return (
                  e *
                    Math.pow(2, -10 * a) *
                    Math.sin((2 * (1 * a - d) * Math.PI) / c) +
                  1
                );
              },
              easeInOutElastic: function (a) {
                var c = 0,
                  e = 1;
                if (0 === a) return 0;
                if (2 === (a /= 0.5)) return 1;
                c || (c = 0.3 * 1.5);
                if (1 > e) {
                  e = 1;
                  var d = c / 4;
                } else d = (c / (2 * Math.PI)) * Math.asin(1 / e);
                return 1 > a
                  ? -0.5 *
                      e *
                      Math.pow(2, 10 * --a) *
                      Math.sin((2 * (1 * a - d) * Math.PI) / c)
                  : e *
                      Math.pow(2, -10 * --a) *
                      Math.sin((2 * (1 * a - d) * Math.PI) / c) *
                      0.5 +
                      1;
              },
              easeInBack: function (a) {
                return (a /= 1) * a * (2.70158 * a - 1.70158);
              },
              easeOutBack: function (a) {
                return (a = a / 1 - 1) * a * (2.70158 * a + 1.70158) + 1;
              },
              easeInOutBack: function (a) {
                var c = 1.70158;
                return 1 > (a /= 0.5)
                  ? 0.5 * a * a * (((c *= 1.525) + 1) * a - c)
                  : 0.5 * ((a -= 2) * a * (((c *= 1.525) + 1) * a + c) + 2);
              },
              easeInBounce: function (a) {
                return 1 - c.easeOutBounce(1 - a);
              },
              easeOutBounce: function (a) {
                return (a /= 1) < 1 / 2.75
                  ? 7.5625 * a * a
                  : a < 2 / 2.75
                  ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75
                  : a < 2.5 / 2.75
                  ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375
                  : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375;
              },
              easeInOutBounce: function (a) {
                return 0.5 > a
                  ? 0.5 * c.easeInBounce(2 * a)
                  : 0.5 * c.easeOutBounce(2 * a - 1) + 0.5;
              },
            });
            a.requestAnimFrame = (function () {
              return (
                window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (a) {
                  return window.setTimeout(a, 1e3 / 60);
                }
              );
            })();
            a.getRelativePosition = function (c, d) {
              var e = c.originalEvent || c,
                k = c.currentTarget || c.srcElement,
                f = k.getBoundingClientRect(),
                p = e.touches;
              p && 0 < p.length
                ? ((c = p[0].clientX), (e = p[0].clientY))
                : ((c = e.clientX), (e = e.clientY));
              p = parseFloat(a.getStyle(k, "padding-left"));
              var x = parseFloat(a.getStyle(k, "padding-top")),
                y = parseFloat(a.getStyle(k, "padding-right")),
                h = parseFloat(a.getStyle(k, "padding-bottom"));
              h = f.bottom - f.top - x - h;
              c = Math.round(
                (((c - f.left - p) / (f.right - f.left - p - y)) * k.width) /
                  d.currentDevicePixelRatio
              );
              e = Math.round(
                (((e - f.top - x) / h) * k.height) / d.currentDevicePixelRatio
              );
              return { x: c, y: e };
            };
            a.addEvent = function (a, c, d) {
              a.addEventListener
                ? a.addEventListener(c, d)
                : a.attachEvent
                ? a.attachEvent("on" + c, d)
                : (a["on" + c] = d);
            };
            a.removeEvent = function (c, d, f) {
              c.removeEventListener
                ? c.removeEventListener(d, f, !1)
                : c.detachEvent
                ? c.detachEvent("on" + d, f)
                : (c["on" + d] = a.noop);
            };
            a.getConstraintWidth = function (a) {
              return d(a, "max-width", "clientWidth");
            };
            a.getConstraintHeight = function (a) {
              return d(a, "max-height", "clientHeight");
            };
            a.getMaximumWidth = function (c) {
              var e = c.parentNode,
                d = parseInt(a.getStyle(e, "padding-left"), 10),
                f = parseInt(a.getStyle(e, "padding-right"), 10);
              e = e.clientWidth - d - f;
              c = a.getConstraintWidth(c);
              return isNaN(c) ? e : Math.min(e, c);
            };
            a.getMaximumHeight = function (c) {
              var e = c.parentNode,
                d = parseInt(a.getStyle(e, "padding-top"), 10),
                f = parseInt(a.getStyle(e, "padding-bottom"), 10);
              e = e.clientHeight - d - f;
              c = a.getConstraintHeight(c);
              return isNaN(c) ? e : Math.min(e, c);
            };
            a.getStyle = function (a, c) {
              return a.currentStyle
                ? a.currentStyle[c]
                : document.defaultView
                    .getComputedStyle(a, null)
                    .getPropertyValue(c);
            };
            a.retinaScale = function (a) {
              var c = (a.currentDevicePixelRatio =
                window.devicePixelRatio || 1);
              if (1 !== c) {
                var e = a.canvas,
                  d = a.height,
                  f = a.width;
                e.height = d * c;
                e.width = f * c;
                a.ctx.scale(c, c);
                e.style.height = d + "px";
                e.style.width = f + "px";
              }
            };
            a.clear = function (a) {
              a.ctx.clearRect(0, 0, a.width, a.height);
            };
            a.fontString = function (a, c, d) {
              return c + " " + a + "px " + d;
            };
            a.longestText = function (c, d, f, v) {
              v = v || {};
              var e = (v.data = v.data || {}),
                k = (v.garbageCollect = v.garbageCollect || []);
              v.font !== d &&
                ((e = v.data = {}), (k = v.garbageCollect = []), (v.font = d));
              c.font = d;
              var x = 0;
              a.each(f, function (d) {
                void 0 !== d && null !== d && !0 !== a.isArray(d)
                  ? (x = a.measureText(c, e, k, x, d))
                  : a.isArray(d) &&
                    a.each(d, function (d) {
                      void 0 === d ||
                        null === d ||
                        a.isArray(d) ||
                        (x = a.measureText(c, e, k, x, d));
                    });
              });
              d = k.length / 2;
              if (d > f.length) {
                for (f = 0; f < d; f++) delete e[k[f]];
                k.splice(0, d);
              }
              return x;
            };
            a.measureText = function (a, c, d, f, q) {
              var e = c[q];
              e || ((e = c[q] = a.measureText(q).width), d.push(q));
              e > f && (f = e);
              return f;
            };
            a.numberOfLabelLines = function (c) {
              var e = 1;
              a.each(c, function (c) {
                a.isArray(c) && c.length > e && (e = c.length);
              });
              return e;
            };
            a.drawRoundedRectangle = function (a, c, d, f, q, p) {
              a.beginPath();
              a.moveTo(c + p, d);
              a.lineTo(c + f - p, d);
              a.quadraticCurveTo(c + f, d, c + f, d + p);
              a.lineTo(c + f, d + q - p);
              a.quadraticCurveTo(c + f, d + q, c + f - p, d + q);
              a.lineTo(c + p, d + q);
              a.quadraticCurveTo(c, d + q, c, d + q - p);
              a.lineTo(c, d + p);
              a.quadraticCurveTo(c, d, c + p, d);
              a.closePath();
            };
            a.color = function (a) {
              return h
                ? a instanceof CanvasGradient
                  ? h(l.defaults.global.defaultColor)
                  : h(a)
                : (console.error("Color.js not found!"), a);
            };
            a.isArray = Array.isArray
              ? function (a) {
                  return Array.isArray(a);
                }
              : function (a) {
                  return "[object Array]" === Object.prototype.toString.call(a);
                };
            a.arrayEquals = function (c, d) {
              var e;
              if (!c || !d || c.length !== d.length) return !1;
              var k = 0;
              for (e = c.length; k < e; ++k) {
                var f = c[k],
                  p = d[k];
                if (f instanceof Array && p instanceof Array) {
                  if (!a.arrayEquals(f, p)) return !1;
                } else if (f !== p) return !1;
              }
              return !0;
            };
            a.callCallback = function (a, c, d) {
              a && "function" === typeof a.call && a.apply(d, c);
            };
            a.getHoverColor = function (c) {
              return c instanceof CanvasPattern
                ? c
                : a.color(c).saturate(0.5).darken(0.1).rgbString();
            };
          };
        },
        { 3: 3 },
      ],
      27: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a, c) {
              return a.native
                ? { x: a.x, y: a.y }
                : e.getRelativePosition(a, c);
            }
            function f(a, c) {
              var e = a.data.datasets,
                d,
                k,
                f = 0;
              for (d = e.length; f < d; ++f)
                if (a.isDatasetVisible(f)) {
                  e = a.getDatasetMeta(f);
                  var w = 0;
                  for (k = e.data.length; w < k; ++w) {
                    var h = e.data[w];
                    h._view.skip || c(h);
                  }
                }
            }
            function d(a, c) {
              var e = [];
              f(a, function (a) {
                a.inRange(c.x, c.y) && e.push(a);
              });
              return e;
            }
            function a(a, c, d, q) {
              var k = Number.POSITIVE_INFINITY,
                x = [];
              q || (q = e.distanceBetweenPoints);
              f(a, function (a) {
                if (!d || a.inRange(c.x, c.y)) {
                  var e = a.getCenterPoint();
                  e = q(c, e);
                  e < k ? ((x = [a]), (k = e)) : e === k && x.push(a);
                }
              });
              return x;
            }
            function c(c, e, f) {
              e = l(e, c.chart);
              var k = function (a, c) {
                  return Math.abs(a.x - c.x);
                },
                p = f.intersect ? d(c, e) : a(c, e, !1, k),
                x = [];
              if (!p.length) return [];
              c.data.datasets.forEach(function (a, e) {
                c.isDatasetVisible(e) &&
                  (a = c.getDatasetMeta(e).data[p[0]._index]) &&
                  !a._view.skip &&
                  x.push(a);
              });
              return x;
            }
            var e = h.helpers;
            h.Interaction = {
              modes: {
                single: function (a, c) {
                  var e = l(c, a.chart),
                    d = [];
                  f(a, function (a) {
                    if (a.inRange(e.x, e.y)) return d.push(a), d;
                  });
                  return d.slice(0, 1);
                },
                label: c,
                index: c,
                dataset: function (c, e, f) {
                  e = l(e, c.chart);
                  f = f.intersect ? d(c, e) : a(c, e, !1);
                  0 < f.length &&
                    (f = c.getDatasetMeta(f[0]._datasetIndex).data);
                  return f;
                },
                "x-axis": function (a, e) {
                  return c(a, e, !0);
                },
                point: function (a, c) {
                  c = l(c, a.chart);
                  return d(a, c);
                },
                nearest: function (c, e, d) {
                  e = l(e, c.chart);
                  c = a(c, e, d.intersect);
                  1 < c.length &&
                    c.sort(function (a, c) {
                      var e = a.getArea(),
                        d = c.getArea();
                      e -= d;
                      0 === e && (e = a._datasetIndex - c._datasetIndex);
                      return e;
                    });
                  return c.slice(0, 1);
                },
                x: function (a, c, e) {
                  var d = l(c, a.chart),
                    k = [],
                    x = !1;
                  f(a, function (a) {
                    a.inXRange(d.x) && k.push(a);
                    a.inRange(d.x, d.y) && (x = !0);
                  });
                  e.intersect && !x && (k = []);
                  return k;
                },
                y: function (a, c, e) {
                  var d = l(c, a.chart),
                    k = [],
                    x = !1;
                  f(a, function (a) {
                    a.inYRange(d.y) && k.push(a);
                    a.inRange(d.x, d.y) && (x = !0);
                  });
                  e.intersect && !x && (k = []);
                  return k;
                },
              },
            };
          };
        },
        {},
      ],
      28: [
        function (u, n, t) {
          n.exports = function () {
            var h = function (l, f) {
              return (this.controller = new h.Controller(l, f, this));
            };
            h.defaults = {
              global: {
                responsive: !0,
                responsiveAnimationDuration: 0,
                maintainAspectRatio: !0,
                events: [
                  "mousemove",
                  "mouseout",
                  "click",
                  "touchstart",
                  "touchmove",
                ],
                hover: {
                  onHover: null,
                  mode: "nearest",
                  intersect: !0,
                  animationDuration: 400,
                },
                onClick: null,
                defaultColor: "rgba(0,0,0,0.1)",
                defaultFontColor: "#666",
                defaultFontFamily:
                  "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                defaultFontSize: 12,
                defaultFontStyle: "normal",
                showLines: !0,
                elements: {},
                legendCallback: function (h) {
                  var f = [];
                  f.push('<ul class="' + h.id + '-legend">');
                  for (var d = 0; d < h.data.datasets.length; d++)
                    f.push(
                      '<li><span style="background-color:' +
                        h.data.datasets[d].backgroundColor +
                        '"></span>'
                    ),
                      h.data.datasets[d].label &&
                        f.push(h.data.datasets[d].label),
                      f.push("</li>");
                  f.push("</ul>");
                  return f.join("");
                },
              },
            };
            return (h.Chart = h);
          };
        },
        {},
      ],
      29: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.layoutService = {
              defaults: {},
              addBox: function (f, d) {
                f.boxes || (f.boxes = []);
                f.boxes.push(d);
              },
              removeBox: function (f, d) {
                f.boxes && f.boxes.splice(f.boxes.indexOf(d), 1);
              },
              update: function (f, d, a) {
                function c(a) {
                  var c = l.findNextWhere(J, function (c) {
                    return c.box === a;
                  });
                  c &&
                    (a.isHorizontal()
                      ? a.update(a.options.fullWidth ? u : D, G / 2, {
                          left: Math.max(K, M),
                          right: Math.max(N, I),
                          top: 0,
                          bottom: 0,
                        })
                      : a.update(c.minSize.width, H));
                }
                function e(a) {
                  a.isHorizontal()
                    ? ((a.left = a.options.fullWidth ? v : K),
                      (a.right = a.options.fullWidth ? d - q : K + D),
                      (a.top = R),
                      (a.bottom = R + a.height),
                      (R = a.bottom))
                    : ((a.left = S),
                      (a.right = S + a.width),
                      (a.top = L),
                      (a.bottom = L + H),
                      (S = a.right));
                }
                if (f) {
                  var k = f.options.layout,
                    h = k ? k.padding : null,
                    v = 0,
                    q = 0,
                    p = (k = 0);
                  isNaN(h)
                    ? ((v = h.left || 0),
                      (q = h.right || 0),
                      (k = h.top || 0),
                      (p = h.bottom || 0))
                    : (p = k = q = v = h);
                  h = l.where(f.boxes, function (a) {
                    return "left" === a.options.position;
                  });
                  var x = l.where(f.boxes, function (a) {
                      return "right" === a.options.position;
                    }),
                    y = l.where(f.boxes, function (a) {
                      return "top" === a.options.position;
                    }),
                    n = l.where(f.boxes, function (a) {
                      return "bottom" === a.options.position;
                    }),
                    t = l.where(f.boxes, function (a) {
                      return "chartArea" === a.options.position;
                    });
                  y.sort(function (a, c) {
                    return (
                      (c.options.fullWidth ? 1 : 0) -
                      (a.options.fullWidth ? 1 : 0)
                    );
                  });
                  n.sort(function (a, c) {
                    return (
                      (a.options.fullWidth ? 1 : 0) -
                      (c.options.fullWidth ? 1 : 0)
                    );
                  });
                  var u = d - v - q,
                    G = a - k - p,
                    A = G / 2,
                    z = (d - u / 2) / (h.length + x.length),
                    C = (a - A) / (y.length + n.length),
                    D = u,
                    H = G,
                    J = [];
                  l.each(h.concat(x, y, n), function (a) {
                    var c = a.isHorizontal();
                    if (c) {
                      var e = a.update(a.options.fullWidth ? u : D, C);
                      H -= e.height;
                    } else (e = a.update(z, A)), (D -= e.width);
                    J.push({ horizontal: c, minSize: e, box: a });
                  });
                  var M = 0,
                    I = 0,
                    O = 0,
                    P = 0;
                  l.each(y.concat(n), function (a) {
                    a.getPadding &&
                      ((a = a.getPadding()),
                      (M = Math.max(M, a.left)),
                      (I = Math.max(I, a.right)));
                  });
                  l.each(h.concat(x), function (a) {
                    a.getPadding &&
                      ((a = a.getPadding()),
                      (O = Math.max(O, a.top)),
                      (P = Math.max(P, a.bottom)));
                  });
                  var K = v,
                    N = q,
                    L = k,
                    Q = p;
                  l.each(h.concat(x), c);
                  l.each(h, function (a) {
                    K += a.width;
                  });
                  l.each(x, function (a) {
                    N += a.width;
                  });
                  l.each(y.concat(n), c);
                  l.each(y, function (a) {
                    L += a.height;
                  });
                  l.each(n, function (a) {
                    Q += a.height;
                  });
                  l.each(h.concat(x), function (a) {
                    var c = l.findNextWhere(J, function (c) {
                        return c.box === a;
                      }),
                      e = { left: 0, right: 0, top: L, bottom: Q };
                    c && a.update(c.minSize.width, H, e);
                  });
                  K = v;
                  N = q;
                  L = k;
                  Q = p;
                  l.each(h, function (a) {
                    K += a.width;
                  });
                  l.each(x, function (a) {
                    N += a.width;
                  });
                  l.each(y, function (a) {
                    L += a.height;
                  });
                  l.each(n, function (a) {
                    Q += a.height;
                  });
                  p = Math.max(M - K, 0);
                  K += p;
                  N += Math.max(I - N, 0);
                  var V = Math.max(O - L, 0);
                  L += V;
                  Q += Math.max(P - Q, 0);
                  var T = a - L - Q,
                    U = d - K - N;
                  if (U !== D || T !== H)
                    l.each(h, function (a) {
                      a.height = T;
                    }),
                      l.each(x, function (a) {
                        a.height = T;
                      }),
                      l.each(y, function (a) {
                        a.options.fullWidth || (a.width = U);
                      }),
                      l.each(n, function (a) {
                        a.options.fullWidth || (a.width = U);
                      }),
                      (H = T),
                      (D = U);
                  var S = v + p,
                    R = k + V;
                  l.each(h.concat(y), e);
                  S += D;
                  R += H;
                  l.each(x, e);
                  l.each(n, e);
                  f.chartArea = {
                    left: K,
                    top: L,
                    right: K + D,
                    bottom: L + H,
                  };
                  l.each(t, function (a) {
                    a.left = f.chartArea.left;
                    a.top = f.chartArea.top;
                    a.right = f.chartArea.right;
                    a.bottom = f.chartArea.bottom;
                    a.update(D, H);
                  });
                }
              },
            };
          };
        },
        {},
      ],
      30: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a, c) {
              c = new h.Legend({ ctx: a.chart.ctx, options: c, chart: a });
              a.legend = c;
              h.layoutService.addBox(a, c);
            }
            var f = h.helpers,
              d = f.noop;
            h.defaults.global.legend = {
              display: !0,
              position: "top",
              fullWidth: !0,
              reverse: !1,
              onClick: function (a, c) {
                a = c.datasetIndex;
                c = this.chart;
                var e = c.getDatasetMeta(a);
                e.hidden =
                  null === e.hidden ? !c.data.datasets[a].hidden : null;
                c.update();
              },
              onHover: null,
              labels: {
                boxWidth: 40,
                padding: 10,
                generateLabels: function (a) {
                  var c = a.data;
                  return f.isArray(c.datasets)
                    ? c.datasets.map(function (c, d) {
                        return {
                          text: c.label,
                          fillStyle: f.isArray(c.backgroundColor)
                            ? c.backgroundColor[0]
                            : c.backgroundColor,
                          hidden: !a.isDatasetVisible(d),
                          lineCap: c.borderCapStyle,
                          lineDash: c.borderDash,
                          lineDashOffset: c.borderDashOffset,
                          lineJoin: c.borderJoinStyle,
                          lineWidth: c.borderWidth,
                          strokeStyle: c.borderColor,
                          pointStyle: c.pointStyle,
                          datasetIndex: d,
                        };
                      }, this)
                    : [];
                },
              },
            };
            h.Legend = h.Element.extend({
              initialize: function (a) {
                f.extend(this, a);
                this.legendHitBoxes = [];
                this.doughnutMode = !1;
              },
              beforeUpdate: d,
              update: function (a, c, e) {
                this.beforeUpdate();
                this.maxWidth = a;
                this.maxHeight = c;
                this.margins = e;
                this.beforeSetDimensions();
                this.setDimensions();
                this.afterSetDimensions();
                this.beforeBuildLabels();
                this.buildLabels();
                this.afterBuildLabels();
                this.beforeFit();
                this.fit();
                this.afterFit();
                this.afterUpdate();
                return this.minSize;
              },
              afterUpdate: d,
              beforeSetDimensions: d,
              setDimensions: function () {
                this.isHorizontal()
                  ? ((this.width = this.maxWidth),
                    (this.left = 0),
                    (this.right = this.width))
                  : ((this.height = this.maxHeight),
                    (this.top = 0),
                    (this.bottom = this.height));
                this.paddingBottom =
                  this.paddingRight =
                  this.paddingTop =
                  this.paddingLeft =
                    0;
                this.minSize = { width: 0, height: 0 };
              },
              afterSetDimensions: d,
              beforeBuildLabels: d,
              buildLabels: function () {
                var a = this,
                  c = a.options.labels,
                  e = c.generateLabels.call(a, a.chart);
                c.filter &&
                  (e = e.filter(function (e) {
                    return c.filter(e, a.chart.data);
                  }));
                a.options.reverse && e.reverse();
                a.legendItems = e;
              },
              afterBuildLabels: d,
              beforeFit: d,
              fit: function () {
                var a = this,
                  c = a.options,
                  e = c.labels;
                c = c.display;
                var d = a.ctx,
                  w = h.defaults.global,
                  v = f.getValueOrDefault,
                  q = v(e.fontSize, w.defaultFontSize),
                  p = v(e.fontStyle, w.defaultFontStyle);
                w = v(e.fontFamily, w.defaultFontFamily);
                p = f.fontString(q, p, w);
                var x = (a.legendHitBoxes = []),
                  y = a.minSize;
                (w = a.isHorizontal())
                  ? ((y.width = a.maxWidth), (y.height = c ? 10 : 0))
                  : ((y.width = c ? 10 : 0), (y.height = a.maxHeight));
                if (c)
                  if (((d.font = p), w)) {
                    var l = (a.lineWidths = [0]),
                      n = a.legendItems.length ? q + e.padding : 0;
                    d.textAlign = "left";
                    d.textBaseline = "top";
                    f.each(a.legendItems, function (c, f) {
                      c =
                        (e.usePointStyle ? q * Math.SQRT2 : e.boxWidth) +
                        q / 2 +
                        d.measureText(c.text).width;
                      l[l.length - 1] + c + e.padding >= a.width &&
                        ((n += q + e.padding), (l[l.length] = a.left));
                      x[f] = { left: 0, top: 0, width: c, height: q };
                      l[l.length - 1] += c + e.padding;
                    });
                    y.height += n;
                  } else {
                    c = e.padding;
                    var t = (a.columnWidths = []),
                      u = e.padding,
                      A = 0,
                      z = 0,
                      C = q + c;
                    f.each(a.legendItems, function (a, c) {
                      a =
                        (e.usePointStyle ? q * Math.SQRT2 : e.boxWidth) +
                        q / 2 +
                        d.measureText(a.text).width;
                      z + C > y.height &&
                        ((u += A + e.padding), t.push(A), (z = A = 0));
                      A = Math.max(A, a);
                      z += C;
                      x[c] = { left: 0, top: 0, width: a, height: q };
                    });
                    u += A;
                    t.push(A);
                    y.width += u;
                  }
                a.width = y.width;
                a.height = y.height;
              },
              afterFit: d,
              isHorizontal: function () {
                return (
                  "top" === this.options.position ||
                  "bottom" === this.options.position
                );
              },
              draw: function () {
                var a,
                  c,
                  e,
                  d = this,
                  w = d.options,
                  v = w.labels,
                  q = h.defaults.global,
                  p = q.elements.line,
                  x = d.width,
                  y = d.lineWidths;
                if (w.display) {
                  var l = d.ctx,
                    n = f.getValueOrDefault,
                    t = n(v.fontColor, q.defaultFontColor),
                    u = n(v.fontSize, q.defaultFontSize),
                    A = n(v.fontStyle, q.defaultFontStyle),
                    z = n(v.fontFamily, q.defaultFontFamily);
                  A = f.fontString(u, A, z);
                  l.textAlign = "left";
                  l.textBaseline = "top";
                  l.lineWidth = 0.5;
                  l.strokeStyle = t;
                  l.fillStyle = t;
                  l.font = A;
                  var C = v.usePointStyle ? u * Math.SQRT2 : v.boxWidth,
                    D = d.legendHitBoxes,
                    H = d.isHorizontal();
                  H
                    ? ((a = d.left + (x - y[0]) / 2),
                      (c = d.top + v.padding),
                      (e = 0))
                    : ((a = d.left + v.padding),
                      (c = d.top + v.padding),
                      (e = 0));
                  var J = u + v.padding;
                  f.each(d.legendItems, function (f, k) {
                    var t = l.measureText(f.text).width,
                      F = C + u / 2 + t,
                      E = a,
                      B = c;
                    H
                      ? E + F >= x &&
                        ((B = c += J), e++, (E = a = d.left + (x - y[e]) / 2))
                      : B + J > d.bottom &&
                        ((E = a = E + d.columnWidths[e] + v.padding),
                        (B = c = d.top + v.padding),
                        e++);
                    var G = E,
                      A = B;
                    if (!(isNaN(C) || 0 >= C)) {
                      l.save();
                      l.fillStyle = n(f.fillStyle, q.defaultColor);
                      l.lineCap = n(f.lineCap, p.borderCapStyle);
                      l.lineDashOffset = n(
                        f.lineDashOffset,
                        p.borderDashOffset
                      );
                      l.lineJoin = n(f.lineJoin, p.borderJoinStyle);
                      l.lineWidth = n(f.lineWidth, p.borderWidth);
                      l.strokeStyle = n(f.strokeStyle, q.defaultColor);
                      var z = 0 === n(f.lineWidth, p.borderWidth);
                      l.setLineDash &&
                        l.setLineDash(n(f.lineDash, p.borderDash));
                      if (w.labels && w.labels.usePointStyle) {
                        z = (u * Math.SQRT2) / 2;
                        var M = z / Math.SQRT2;
                        h.canvasHelpers.drawPoint(
                          l,
                          f.pointStyle,
                          z,
                          G + M,
                          A + M
                        );
                      } else
                        z || l.strokeRect(G, A, C, u), l.fillRect(G, A, C, u);
                      l.restore();
                    }
                    D[k].left = E;
                    D[k].top = B;
                    k = E;
                    l.fillText(f.text, C + u / 2 + k, B);
                    f.hidden &&
                      (l.beginPath(),
                      (l.lineWidth = 2),
                      l.moveTo(C + u / 2 + k, B + u / 2),
                      l.lineTo(C + u / 2 + k + t, B + u / 2),
                      l.stroke());
                    H ? (a += F + v.padding) : (c += J);
                  });
                }
              },
              handleEvent: function (a) {
                var c = this.options,
                  e = "mouseup" === a.type ? "click" : a.type,
                  d = !1;
                if ("mousemove" === e) {
                  if (!c.onHover) return;
                } else if ("click" === e) {
                  if (!c.onClick) return;
                } else return;
                var f = a.x,
                  h = a.y;
                if (
                  f >= this.left &&
                  f <= this.right &&
                  h >= this.top &&
                  h <= this.bottom
                )
                  for (var q = this.legendHitBoxes, p = 0; p < q.length; ++p) {
                    var x = q[p];
                    if (
                      f >= x.left &&
                      f <= x.left + x.width &&
                      h >= x.top &&
                      h <= x.top + x.height
                    )
                      if ("click" === e) {
                        c.onClick.call(this, a.native, this.legendItems[p]);
                        d = !0;
                        break;
                      } else if ("mousemove" === e) {
                        c.onHover.call(this, a.native, this.legendItems[p]);
                        d = !0;
                        break;
                      }
                  }
                return d;
              },
            });
            h.plugins.register({
              beforeInit: function (a) {
                var c = a.options.legend;
                c && l(a, c);
              },
              beforeUpdate: function (a) {
                var c = a.options.legend;
                c
                  ? ((c = f.configMerge(h.defaults.global.legend, c)),
                    a.legend ? (a.legend.options = c) : l(a, c))
                  : (h.layoutService.removeBox(a, a.legend), delete a.legend);
              },
              afterEvent: function (a, c) {
                (a = a.legend) && a.handleEvent(c);
              },
            });
          };
        },
        {},
      ],
      31: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.defaults.global.plugins = {};
            h.plugins = {
              _plugins: [],
              _cacheId: 0,
              register: function (f) {
                var d = this._plugins;
                [].concat(f).forEach(function (a) {
                  -1 === d.indexOf(a) && d.push(a);
                });
                this._cacheId++;
              },
              unregister: function (f) {
                var d = this._plugins;
                [].concat(f).forEach(function (a) {
                  a = d.indexOf(a);
                  -1 !== a && d.splice(a, 1);
                });
                this._cacheId++;
              },
              clear: function () {
                this._plugins = [];
                this._cacheId++;
              },
              count: function () {
                return this._plugins.length;
              },
              getAll: function () {
                return this._plugins;
              },
              notify: function (f, d, a) {
                var c = this.descriptors(f),
                  e = c.length,
                  k;
                for (k = 0; k < e; ++k) {
                  var h = c[k],
                    v = h.plugin,
                    q = v[d];
                  if ("function" === typeof q) {
                    var p = [f].concat(a || []);
                    p.push(h.options);
                    if (!1 === q.apply(v, p)) return !1;
                  }
                }
                return !0;
              },
              descriptors: function (f) {
                var d = f._plugins || (f._plugins = {});
                if (d.id === this._cacheId) return d.descriptors;
                var a = [],
                  c = [];
                f = (f && f.config) || {};
                var e = h.defaults.global.plugins,
                  k = (f.options && f.options.plugins) || {};
                this._plugins.concat(f.plugins || []).forEach(function (d) {
                  if (-1 === a.indexOf(d)) {
                    var f = d.id,
                      q = k[f];
                    !1 !== q &&
                      (!0 === q && (q = l.clone(e[f])),
                      a.push(d),
                      c.push({ plugin: d, options: q || {} }));
                  }
                });
                d.descriptors = c;
                d.id = this._cacheId;
                return c;
              },
            };
            h.pluginService = h.plugins;
            h.PluginBase = l.inherits({});
          };
        },
        {},
      ],
      32: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a, c, e) {
              return d.isArray(c)
                ? d.longestText(a, e, c)
                : a.measureText(c).width;
            }
            function f(a) {
              var c = d.getValueOrDefault,
                e = h.defaults.global,
                f = c(a.fontSize, e.defaultFontSize),
                w = c(a.fontStyle, e.defaultFontStyle);
              a = c(a.fontFamily, e.defaultFontFamily);
              return {
                size: f,
                style: w,
                family: a,
                font: d.fontString(f, w, a),
              };
            }
            var d = h.helpers;
            h.defaults.scale = {
              display: !0,
              position: "left",
              gridLines: {
                display: !0,
                color: "rgba(0, 0, 0, 0.1)",
                lineWidth: 1,
                drawBorder: !0,
                drawOnChartArea: !0,
                drawTicks: !0,
                tickMarkLength: 10,
                zeroLineWidth: 1,
                zeroLineColor: "rgba(0,0,0,0.25)",
                offsetGridLines: !1,
                borderDash: [],
                borderDashOffset: 0,
              },
              scaleLabel: { labelString: "", display: !1 },
              ticks: {
                beginAtZero: !1,
                minRotation: 0,
                maxRotation: 50,
                mirror: !1,
                padding: 0,
                reverse: !1,
                display: !0,
                autoSkip: !0,
                autoSkipPadding: 0,
                labelOffset: 0,
                callback: h.Ticks.formatters.values,
              },
            };
            h.Scale = h.Element.extend({
              getPadding: function () {
                return {
                  left: this.paddingLeft || 0,
                  top: this.paddingTop || 0,
                  right: this.paddingRight || 0,
                  bottom: this.paddingBottom || 0,
                };
              },
              beforeUpdate: function () {
                d.callCallback(this.options.beforeUpdate, [this]);
              },
              update: function (a, c, e) {
                this.beforeUpdate();
                this.maxWidth = a;
                this.maxHeight = c;
                this.margins = d.extend(
                  { left: 0, right: 0, top: 0, bottom: 0 },
                  e
                );
                this.longestTextCache = this.longestTextCache || {};
                this.beforeSetDimensions();
                this.setDimensions();
                this.afterSetDimensions();
                this.beforeDataLimits();
                this.determineDataLimits();
                this.afterDataLimits();
                this.beforeBuildTicks();
                this.buildTicks();
                this.afterBuildTicks();
                this.beforeTickToLabelConversion();
                this.convertTicksToLabels();
                this.afterTickToLabelConversion();
                this.beforeCalculateTickRotation();
                this.calculateTickRotation();
                this.afterCalculateTickRotation();
                this.beforeFit();
                this.fit();
                this.afterFit();
                this.afterUpdate();
                return this.minSize;
              },
              afterUpdate: function () {
                d.callCallback(this.options.afterUpdate, [this]);
              },
              beforeSetDimensions: function () {
                d.callCallback(this.options.beforeSetDimensions, [this]);
              },
              setDimensions: function () {
                this.isHorizontal()
                  ? ((this.width = this.maxWidth),
                    (this.left = 0),
                    (this.right = this.width))
                  : ((this.height = this.maxHeight),
                    (this.top = 0),
                    (this.bottom = this.height));
                this.paddingBottom =
                  this.paddingRight =
                  this.paddingTop =
                  this.paddingLeft =
                    0;
              },
              afterSetDimensions: function () {
                d.callCallback(this.options.afterSetDimensions, [this]);
              },
              beforeDataLimits: function () {
                d.callCallback(this.options.beforeDataLimits, [this]);
              },
              determineDataLimits: d.noop,
              afterDataLimits: function () {
                d.callCallback(this.options.afterDataLimits, [this]);
              },
              beforeBuildTicks: function () {
                d.callCallback(this.options.beforeBuildTicks, [this]);
              },
              buildTicks: d.noop,
              afterBuildTicks: function () {
                d.callCallback(this.options.afterBuildTicks, [this]);
              },
              beforeTickToLabelConversion: function () {
                d.callCallback(this.options.beforeTickToLabelConversion, [
                  this,
                ]);
              },
              convertTicksToLabels: function () {
                var a = this.options.ticks;
                this.ticks = this.ticks.map(a.userCallback || a.callback);
              },
              afterTickToLabelConversion: function () {
                d.callCallback(this.options.afterTickToLabelConversion, [this]);
              },
              beforeCalculateTickRotation: function () {
                d.callCallback(this.options.beforeCalculateTickRotation, [
                  this,
                ]);
              },
              calculateTickRotation: function () {
                var a = this.ctx,
                  c = this.options.ticks,
                  e = f(c);
                a.font = e.font;
                var k = c.minRotation || 0;
                if (this.options.display && this.isHorizontal()) {
                  var h = (a = d.longestText(
                    a,
                    e.font,
                    this.ticks,
                    this.longestTextCache
                  ));
                  for (
                    e = this.getPixelForTick(1) - this.getPixelForTick(0) - 6;
                    h > e && k < c.maxRotation;

                  ) {
                    var v = d.toRadians(k);
                    h = Math.cos(v);
                    v = Math.sin(v);
                    if (v * a > this.maxHeight) {
                      k--;
                      break;
                    }
                    k++;
                    h *= a;
                  }
                }
                this.labelRotation = k;
              },
              afterCalculateTickRotation: function () {
                d.callCallback(this.options.afterCalculateTickRotation, [this]);
              },
              beforeFit: function () {
                d.callCallback(this.options.beforeFit, [this]);
              },
              fit: function () {
                var a = (this.minSize = { width: 0, height: 0 }),
                  c = this.options,
                  e = c.ticks,
                  k = c.scaleLabel,
                  h = c.gridLines,
                  v = c.display,
                  q = this.isHorizontal(),
                  p = f(e),
                  x = 1.5 * f(k).size,
                  y = c.gridLines.tickMarkLength;
                a.width = q
                  ? this.isFullWidth()
                    ? this.maxWidth - this.margins.left - this.margins.right
                    : this.maxWidth
                  : v && h.drawTicks
                  ? y
                  : 0;
                a.height = q ? (v && h.drawTicks ? y : 0) : this.maxHeight;
                k.display && v && (q ? (a.height += x) : (a.width += x));
                e.display &&
                  v &&
                  ((h = d.longestText(
                    this.ctx,
                    p.font,
                    this.ticks,
                    this.longestTextCache
                  )),
                  (v = d.numberOfLabelLines(this.ticks)),
                  (k = 0.5 * p.size),
                  q
                    ? ((this.longestLabelWidth = h),
                      (q = d.toRadians(this.labelRotation)),
                      (e = Math.cos(q)),
                      (a.height = Math.min(
                        this.maxHeight,
                        a.height + (Math.sin(q) * h + p.size * v + k * v)
                      )),
                      (this.ctx.font = p.font),
                      (q = l(this.ctx, this.ticks[0], p.font)),
                      (p = l(
                        this.ctx,
                        this.ticks[this.ticks.length - 1],
                        p.font
                      )),
                      0 !== this.labelRotation
                        ? ((this.paddingLeft =
                            "bottom" === c.position ? e * q + 3 : e * k + 3),
                          (this.paddingRight =
                            "bottom" === c.position ? e * k + 3 : e * p + 3))
                        : ((this.paddingLeft = q / 2 + 3),
                          (this.paddingRight = p / 2 + 3)))
                    : ((h = e.mirror ? 0 : h + this.options.ticks.padding),
                      (a.width += h),
                      (this.paddingTop = p.size / 2),
                      (this.paddingBottom = p.size / 2)));
                this.handleMargins();
                this.width = a.width;
                this.height = a.height;
              },
              handleMargins: function () {
                this.margins &&
                  ((this.paddingLeft = Math.max(
                    this.paddingLeft - this.margins.left,
                    0
                  )),
                  (this.paddingTop = Math.max(
                    this.paddingTop - this.margins.top,
                    0
                  )),
                  (this.paddingRight = Math.max(
                    this.paddingRight - this.margins.right,
                    0
                  )),
                  (this.paddingBottom = Math.max(
                    this.paddingBottom - this.margins.bottom,
                    0
                  )));
              },
              afterFit: function () {
                d.callCallback(this.options.afterFit, [this]);
              },
              isHorizontal: function () {
                return (
                  "top" === this.options.position ||
                  "bottom" === this.options.position
                );
              },
              isFullWidth: function () {
                return this.options.fullWidth;
              },
              getRightValue: function (a) {
                return null === a ||
                  "undefined" === typeof a ||
                  ("number" === typeof a && !isFinite(a))
                  ? NaN
                  : "object" === typeof a
                  ? a instanceof Date || a.isValid
                    ? a
                    : this.getRightValue(this.isHorizontal() ? a.x : a.y)
                  : a;
              },
              getLabelForIndex: d.noop,
              getPixelForValue: d.noop,
              getValueForPixel: d.noop,
              getPixelForTick: function (a, c) {
                if (this.isHorizontal()) {
                  var e =
                    (this.width - (this.paddingLeft + this.paddingRight)) /
                    Math.max(
                      this.ticks.length -
                        (this.options.gridLines.offsetGridLines ? 0 : 1),
                      1
                    );
                  a = e * a + this.paddingLeft;
                  c && (a += e / 2);
                  c = this.left + Math.round(a);
                  return c + (this.isFullWidth() ? this.margins.left : 0);
                }
                return (
                  this.top +
                  ((this.height - (this.paddingTop + this.paddingBottom)) /
                    (this.ticks.length - 1)) *
                    a
                );
              },
              getPixelForDecimal: function (a) {
                return this.isHorizontal()
                  ? ((a =
                      this.left +
                      Math.round(
                        (this.width - (this.paddingLeft + this.paddingRight)) *
                          a +
                          this.paddingLeft
                      )),
                    a + (this.isFullWidth() ? this.margins.left : 0))
                  : this.top + a * this.height;
              },
              getBasePixel: function () {
                return this.getPixelForValue(this.getBaseValue());
              },
              getBaseValue: function () {
                var a = this.min,
                  c = this.max;
                return this.beginAtZero
                  ? 0
                  : 0 > a && 0 > c
                  ? c
                  : 0 < a && 0 < c
                  ? a
                  : 0;
              },
              draw: function (a) {
                var c = this,
                  e = c.options;
                if (e.display) {
                  var k = c.ctx,
                    w = h.defaults.global,
                    v = e.ticks,
                    q = e.gridLines,
                    p = e.scaleLabel,
                    x = 0 !== c.labelRotation,
                    y = v.autoSkip,
                    l = c.isHorizontal();
                  if (v.maxTicksLimit) var n = v.maxTicksLimit;
                  var t = d.getValueOrDefault(v.fontColor, w.defaultFontColor),
                    u = f(v),
                    A = q.drawTicks ? q.tickMarkLength : 0,
                    z = d.getValueOrDefault(q.borderDash, w.borderDash),
                    C = d.getValueOrDefault(
                      q.borderDashOffset,
                      w.borderDashOffset
                    );
                  w = d.getValueOrDefault(p.fontColor, w.defaultFontColor);
                  var D = f(p),
                    H = d.toRadians(c.labelRotation),
                    J = c.longestLabelWidth * Math.cos(H);
                  k.fillStyle = t;
                  var M = [];
                  if (l) {
                    var I = !1;
                    x && (J /= 2);
                    (J + v.autoSkipPadding) * c.ticks.length >
                      c.width - (c.paddingLeft + c.paddingRight) &&
                      (I =
                        1 +
                        Math.floor(
                          ((J + v.autoSkipPadding) * c.ticks.length) /
                            (c.width - (c.paddingLeft + c.paddingRight))
                        ));
                    if (n && c.ticks.length > n)
                      for (; !I || c.ticks.length / (I || 1) > n; )
                        I || (I = 1), (I += 1);
                    y || (I = !1);
                  }
                  var O = "right" === e.position ? c.left : c.right - A,
                    P = "right" === e.position ? c.left + A : c.right,
                    K = "bottom" === e.position ? c.top : c.bottom - A,
                    N = "bottom" === e.position ? c.top + A : c.bottom;
                  d.each(c.ticks, function (f, k) {
                    if (void 0 !== f && null !== f) {
                      var p = c.ticks.length === k + 1;
                      if (
                        (!(
                          (1 < I && 0 < k % I) ||
                          (0 === k % I && k + I >= c.ticks.length)
                        ) ||
                          p) &&
                        void 0 !== f &&
                        null !== f
                      ) {
                        if (
                          k ===
                          ("undefined" !== typeof c.zeroLineIndex
                            ? c.zeroLineIndex
                            : 0)
                        ) {
                          p = q.zeroLineWidth;
                          var h = q.zeroLineColor;
                        } else
                          (p = d.getValueAtIndexOrDefault(q.lineWidth, k)),
                            (h = d.getValueAtIndexOrDefault(q.color, k));
                        var y,
                          w,
                          n = "middle";
                        if (l) {
                          if ("bottom" === e.position) {
                            n = x ? "middle" : "top";
                            var t = x ? "right" : "center",
                              F = c.top + A;
                          } else
                            (n = x ? "middle" : "bottom"),
                              (t = x ? "left" : "center"),
                              (F = c.bottom - A);
                          var u = c.getPixelForTick(k) + d.aliasPixel(p),
                            E =
                              c.getPixelForTick(k, q.offsetGridLines) +
                              v.labelOffset;
                          k = u = y = w = u;
                          var B = K,
                            G = N,
                            L = a.top,
                            D = a.bottom;
                        } else
                          (E = "left" === e.position),
                            (F = v.padding),
                            v.mirror
                              ? (t = E ? "left" : "right")
                              : ((t = E ? "right" : "left"), (F = A + F)),
                            (E = E ? c.right - F : c.left + F),
                            (B = c.getPixelForTick(k)),
                            (B += d.aliasPixel(p)),
                            (F = c.getPixelForTick(k, q.offsetGridLines)),
                            (k = O),
                            (u = P),
                            (y = a.left),
                            (w = a.right),
                            (B = G = L = D = B);
                        M.push({
                          tx1: k,
                          ty1: B,
                          tx2: u,
                          ty2: G,
                          x1: y,
                          y1: L,
                          x2: w,
                          y2: D,
                          labelX: E,
                          labelY: F,
                          glWidth: p,
                          glColor: h,
                          glBorderDash: z,
                          glBorderDashOffset: C,
                          rotation: -1 * H,
                          label: f,
                          textBaseline: n,
                          textAlign: t,
                        });
                      }
                    }
                  });
                  d.each(M, function (a) {
                    q.display &&
                      (k.save(),
                      (k.lineWidth = a.glWidth),
                      (k.strokeStyle = a.glColor),
                      k.setLineDash &&
                        (k.setLineDash(a.glBorderDash),
                        (k.lineDashOffset = a.glBorderDashOffset)),
                      k.beginPath(),
                      q.drawTicks &&
                        (k.moveTo(a.tx1, a.ty1), k.lineTo(a.tx2, a.ty2)),
                      q.drawOnChartArea &&
                        (k.moveTo(a.x1, a.y1), k.lineTo(a.x2, a.y2)),
                      k.stroke(),
                      k.restore());
                    if (v.display) {
                      k.save();
                      k.translate(a.labelX, a.labelY);
                      k.rotate(a.rotation);
                      k.font = u.font;
                      k.textBaseline = a.textBaseline;
                      k.textAlign = a.textAlign;
                      a = a.label;
                      if (d.isArray(a))
                        for (var c = 0, e = 0; c < a.length; ++c)
                          k.fillText("" + a[c], 0, e), (e += 1.5 * u.size);
                      else k.fillText(a, 0, 0);
                      k.restore();
                    }
                  });
                  p.display &&
                    ((t = 0),
                    l
                      ? ((y = c.left + (c.right - c.left) / 2),
                        (n =
                          "bottom" === e.position
                            ? c.bottom - D.size / 2
                            : c.top + D.size / 2))
                      : ((y = (t = "left" === e.position)
                          ? c.left + D.size / 2
                          : c.right - D.size / 2),
                        (n = c.top + (c.bottom - c.top) / 2),
                        (t = t ? -0.5 * Math.PI : 0.5 * Math.PI)),
                    k.save(),
                    k.translate(y, n),
                    k.rotate(t),
                    (k.textAlign = "center"),
                    (k.textBaseline = "middle"),
                    (k.fillStyle = w),
                    (k.font = D.font),
                    k.fillText(p.labelString, 0, 0),
                    k.restore());
                  q.drawBorder &&
                    ((k.lineWidth = d.getValueAtIndexOrDefault(q.lineWidth, 0)),
                    (k.strokeStyle = d.getValueAtIndexOrDefault(q.color, 0)),
                    (p = c.left),
                    (w = c.right),
                    (D = c.top),
                    (y = c.bottom),
                    (n = d.aliasPixel(k.lineWidth)),
                    l
                      ? ((D = y = "top" === e.position ? c.bottom : c.top),
                        (D += n),
                        (y += n))
                      : ((p = w = "left" === e.position ? c.right : c.left),
                        (p += n),
                        (w += n)),
                    k.beginPath(),
                    k.moveTo(p, D),
                    k.lineTo(w, y),
                    k.stroke());
                }
              },
            });
          };
        },
        {},
      ],
      33: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.scaleService = {
              constructors: {},
              defaults: {},
              registerScaleType: function (f, d, a) {
                this.constructors[f] = d;
                this.defaults[f] = l.clone(a);
              },
              getScaleConstructor: function (f) {
                return this.constructors.hasOwnProperty(f)
                  ? this.constructors[f]
                  : void 0;
              },
              getScaleDefaults: function (f) {
                return this.defaults.hasOwnProperty(f)
                  ? l.scaleMerge(h.defaults.scale, this.defaults[f])
                  : {};
              },
              updateScaleDefaults: function (f, d) {
                var a = this.defaults;
                a.hasOwnProperty(f) && (a[f] = l.extend(a[f], d));
              },
              addScalesToLayout: function (f) {
                l.each(f.scales, function (d) {
                  h.layoutService.addBox(f, d);
                });
              },
            };
          };
        },
        {},
      ],
      34: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers;
            h.Ticks = {
              generators: {
                linear: function (f, d) {
                  var a = [];
                  if (f.stepSize && 0 < f.stepSize) var c = f.stepSize;
                  else
                    (c = l.niceNum(d.max - d.min, !1)),
                      (c = l.niceNum(c / (f.maxTicks - 1), !0));
                  var e = Math.floor(d.min / c) * c;
                  d = Math.ceil(d.max / c) * c;
                  f.min &&
                    f.max &&
                    f.stepSize &&
                    l.almostWhole((f.max - f.min) / f.stepSize, c / 1e3) &&
                    ((e = f.min), (d = f.max));
                  var k = (d - e) / c;
                  k = l.almostEquals(k, Math.round(k), c / 1e3)
                    ? Math.round(k)
                    : Math.ceil(k);
                  a.push(void 0 !== f.min ? f.min : e);
                  for (var h = 1; h < k; ++h) a.push(e + h * c);
                  a.push(void 0 !== f.max ? f.max : d);
                  return a;
                },
                logarithmic: function (f, d) {
                  var a = [],
                    c = l.getValueOrDefault,
                    e = c(f.min, Math.pow(10, Math.floor(l.log10(d.min)))),
                    k = Math.floor(l.log10(d.max)),
                    h = Math.ceil(d.max / Math.pow(10, k));
                  if (0 === e) {
                    var v = Math.floor(l.log10(d.minNotZero));
                    d = Math.floor(d.minNotZero / Math.pow(10, v));
                    a.push(e);
                    e = d * Math.pow(10, v);
                  } else
                    (v = Math.floor(l.log10(e))),
                      (d = Math.floor(e / Math.pow(10, v)));
                  do
                    a.push(e),
                      ++d,
                      10 === d && ((d = 1), ++v),
                      (e = d * Math.pow(10, v));
                  while (v < k || (v === k && d < h));
                  f = c(f.max, e);
                  a.push(f);
                  return a;
                },
              },
              formatters: {
                values: function (f) {
                  return l.isArray(f) ? f : "" + f;
                },
                linear: function (f, d, a) {
                  d = 3 < a.length ? a[2] - a[1] : a[1] - a[0];
                  1 < Math.abs(d) &&
                    f !== Math.floor(f) &&
                    (d = f - Math.floor(f));
                  d = l.log10(Math.abs(d));
                  0 !== f
                    ? ((d = -1 * Math.floor(d)),
                      (d = Math.max(Math.min(d, 20), 0)),
                      (f = f.toFixed(d)))
                    : (f = "0");
                  return f;
                },
                logarithmic: function (f, d, a) {
                  var c = f / Math.pow(10, Math.floor(l.log10(f)));
                  return 0 === f
                    ? "0"
                    : 1 === c ||
                      2 === c ||
                      5 === c ||
                      0 === d ||
                      d === a.length - 1
                    ? f.toExponential()
                    : "";
                },
              },
            };
          };
        },
        {},
      ],
      35: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a, c) {
              c = new h.Title({ ctx: a.chart.ctx, options: c, chart: a });
              a.titleBlock = c;
              h.layoutService.addBox(a, c);
            }
            var f = h.helpers;
            h.defaults.global.title = {
              display: !1,
              position: "top",
              fullWidth: !0,
              fontStyle: "bold",
              padding: 10,
              text: "",
            };
            var d = f.noop;
            h.Title = h.Element.extend({
              initialize: function (a) {
                f.extend(this, a);
                this.legendHitBoxes = [];
              },
              beforeUpdate: d,
              update: function (a, c, e) {
                this.beforeUpdate();
                this.maxWidth = a;
                this.maxHeight = c;
                this.margins = e;
                this.beforeSetDimensions();
                this.setDimensions();
                this.afterSetDimensions();
                this.beforeBuildLabels();
                this.buildLabels();
                this.afterBuildLabels();
                this.beforeFit();
                this.fit();
                this.afterFit();
                this.afterUpdate();
                return this.minSize;
              },
              afterUpdate: d,
              beforeSetDimensions: d,
              setDimensions: function () {
                this.isHorizontal()
                  ? ((this.width = this.maxWidth),
                    (this.left = 0),
                    (this.right = this.width))
                  : ((this.height = this.maxHeight),
                    (this.top = 0),
                    (this.bottom = this.height));
                this.paddingBottom =
                  this.paddingRight =
                  this.paddingTop =
                  this.paddingLeft =
                    0;
                this.minSize = { width: 0, height: 0 };
              },
              afterSetDimensions: d,
              beforeBuildLabels: d,
              buildLabels: d,
              afterBuildLabels: d,
              beforeFit: d,
              fit: function () {
                var a = f.getValueOrDefault,
                  c = this.options,
                  e = c.display;
                a = a(c.fontSize, h.defaults.global.defaultFontSize);
                var d = this.minSize;
                this.isHorizontal()
                  ? ((d.width = this.maxWidth),
                    (d.height = e ? a + 2 * c.padding : 0))
                  : ((d.width = e ? a + 2 * c.padding : 0),
                    (d.height = this.maxHeight));
                this.width = d.width;
                this.height = d.height;
              },
              afterFit: d,
              isHorizontal: function () {
                var a = this.options.position;
                return "top" === a || "bottom" === a;
              },
              draw: function () {
                var a = this.ctx,
                  c = f.getValueOrDefault,
                  e = this.options,
                  d = h.defaults.global;
                if (e.display) {
                  var w = c(e.fontSize, d.defaultFontSize),
                    v = c(e.fontStyle, d.defaultFontStyle),
                    q = c(e.fontFamily, d.defaultFontFamily),
                    p = f.fontString(w, v, q);
                  v = 0;
                  q = this.top;
                  var x = this.left,
                    y = this.bottom,
                    l = this.right;
                  a.fillStyle = c(e.fontColor, d.defaultFontColor);
                  a.font = p;
                  this.isHorizontal()
                    ? ((c = x + (l - x) / 2),
                      (d = q + (y - q) / 2),
                      (w = l - x))
                    : ((c = "left" === e.position ? x + w / 2 : l - w / 2),
                      (d = q + (y - q) / 2),
                      (w = y - q),
                      (v = Math.PI * ("left" === e.position ? -0.5 : 0.5)));
                  a.save();
                  a.translate(c, d);
                  a.rotate(v);
                  a.textAlign = "center";
                  a.textBaseline = "middle";
                  a.fillText(e.text, 0, 0, w);
                  a.restore();
                }
              },
            });
            h.plugins.register({
              beforeInit: function (a) {
                var c = a.options.title;
                c && l(a, c);
              },
              beforeUpdate: function (a) {
                var c = a.options.title;
                c
                  ? ((c = f.configMerge(h.defaults.global.title, c)),
                    a.titleBlock ? (a.titleBlock.options = c) : l(a, c))
                  : (h.layoutService.removeBox(a, a.titleBlock),
                    delete a.titleBlock);
              },
            });
          };
        },
        {},
      ],
      36: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a, c) {
              a = w.color(a);
              return a.alpha(c * a.alpha()).rgbaString();
            }
            function f(a, c) {
              c &&
                (w.isArray(c) ? Array.prototype.push.apply(a, c) : a.push(c));
              return a;
            }
            function d(a) {
              var c = a._xScale,
                e = a._yScale || a._scale,
                d = a._index,
                f = a._datasetIndex;
              return {
                xLabel: c ? c.getLabelForIndex(d, f) : "",
                yLabel: e ? e.getLabelForIndex(d, f) : "",
                index: d,
                datasetIndex: f,
                x: a._model.x,
                y: a._model.y,
              };
            }
            function a(a) {
              var c = h.defaults.global,
                e = w.getValueOrDefault;
              return {
                xPadding: a.xPadding,
                yPadding: a.yPadding,
                xAlign: a.xAlign,
                yAlign: a.yAlign,
                bodyFontColor: a.bodyFontColor,
                _bodyFontFamily: e(a.bodyFontFamily, c.defaultFontFamily),
                _bodyFontStyle: e(a.bodyFontStyle, c.defaultFontStyle),
                _bodyAlign: a.bodyAlign,
                bodyFontSize: e(a.bodyFontSize, c.defaultFontSize),
                bodySpacing: a.bodySpacing,
                titleFontColor: a.titleFontColor,
                _titleFontFamily: e(a.titleFontFamily, c.defaultFontFamily),
                _titleFontStyle: e(a.titleFontStyle, c.defaultFontStyle),
                titleFontSize: e(a.titleFontSize, c.defaultFontSize),
                _titleAlign: a.titleAlign,
                titleSpacing: a.titleSpacing,
                titleMarginBottom: a.titleMarginBottom,
                footerFontColor: a.footerFontColor,
                _footerFontFamily: e(a.footerFontFamily, c.defaultFontFamily),
                _footerFontStyle: e(a.footerFontStyle, c.defaultFontStyle),
                footerFontSize: e(a.footerFontSize, c.defaultFontSize),
                _footerAlign: a.footerAlign,
                footerSpacing: a.footerSpacing,
                footerMarginTop: a.footerMarginTop,
                caretSize: a.caretSize,
                cornerRadius: a.cornerRadius,
                backgroundColor: a.backgroundColor,
                opacity: 0,
                legendColorBackground: a.multiKeyBackground,
                displayColors: a.displayColors,
              };
            }
            function c(a, c) {
              var e = a._chart.ctx;
              a = 2 * c.yPadding;
              var d = 0,
                f = c.body,
                k = f.reduce(function (a, c) {
                  return a + c.before.length + c.lines.length + c.after.length;
                }, 0);
              k += c.beforeBody.length + c.afterBody.length;
              var q = c.title.length,
                h = c.footer.length,
                v = c.titleFontSize,
                l = c.bodyFontSize,
                n = c.footerFontSize;
              a = a + q * v + (q ? (q - 1) * c.titleSpacing : 0);
              a += q ? c.titleMarginBottom : 0;
              a = a + k * l + (k ? (k - 1) * c.bodySpacing : 0);
              a += h ? c.footerMarginTop : 0;
              a = a + h * n + (h ? (h - 1) * c.footerSpacing : 0);
              var t = 0,
                u = function (a) {
                  d = Math.max(d, e.measureText(a).width + t);
                };
              e.font = w.fontString(v, c._titleFontStyle, c._titleFontFamily);
              w.each(c.title, u);
              e.font = w.fontString(l, c._bodyFontStyle, c._bodyFontFamily);
              w.each(c.beforeBody.concat(c.afterBody), u);
              t = c.displayColors ? l + 2 : 0;
              w.each(f, function (a) {
                w.each(a.before, u);
                w.each(a.lines, u);
                w.each(a.after, u);
              });
              t = 0;
              e.font = w.fontString(n, c._footerFontStyle, c._footerFontFamily);
              w.each(c.footer, u);
              d += 2 * c.xPadding;
              return { width: d, height: a };
            }
            function e(a, c) {
              var e = a._model,
                d = a._chart,
                f = a._chartInstance.chartArea,
                k = "center",
                q = "center";
              e.y < c.height
                ? (q = "top")
                : e.y > d.height - c.height && (q = "bottom");
              var h = (f.left + f.right) / 2,
                w = (f.top + f.bottom) / 2;
              if ("center" === q) {
                f = function (a) {
                  return a <= h;
                };
                var v = function (a) {
                  return a > h;
                };
              } else
                (f = function (a) {
                  return a <= c.width / 2;
                }),
                  (v = function (a) {
                    return a >= d.width - c.width / 2;
                  });
              f(e.x)
                ? ((k = "left"),
                  e.x + c.width > d.width &&
                    ((k = "center"), (q = e.y <= w ? "top" : "bottom")))
                : v(e.x) &&
                  ((k = "right"),
                  0 > e.x - c.width &&
                    ((k = "center"), (q = e.y <= w ? "top" : "bottom")));
              a = a._options;
              return {
                xAlign: a.xAlign ? a.xAlign : k,
                yAlign: a.yAlign ? a.yAlign : q,
              };
            }
            function k(a, c, e) {
              var d = a.x,
                f = a.y,
                k = a.caretPadding,
                p = e.xAlign;
              e = e.yAlign;
              var q = a.caretSize + k;
              a = a.cornerRadius + k;
              "right" === p
                ? (d -= c.width)
                : "center" === p && (d -= c.width / 2);
              f =
                "top" === e
                  ? f + q
                  : "bottom" === e
                  ? f - (c.height + q)
                  : f - c.height / 2;
              "center" === e
                ? "left" === p
                  ? (d += q)
                  : "right" === p && (d -= q)
                : "left" === p
                ? (d -= a)
                : "right" === p && (d += a);
              return { x: d, y: f };
            }
            var w = h.helpers;
            h.defaults.global.tooltips = {
              enabled: !0,
              custom: null,
              mode: "nearest",
              position: "average",
              intersect: !0,
              backgroundColor: "rgba(0,0,0,0.8)",
              titleFontStyle: "bold",
              titleSpacing: 2,
              titleMarginBottom: 6,
              titleFontColor: "#fff",
              titleAlign: "left",
              bodySpacing: 2,
              bodyFontColor: "#fff",
              bodyAlign: "left",
              footerFontStyle: "bold",
              footerSpacing: 2,
              footerMarginTop: 6,
              footerFontColor: "#fff",
              footerAlign: "left",
              yPadding: 6,
              xPadding: 6,
              caretSize: 5,
              cornerRadius: 6,
              multiKeyBackground: "#fff",
              displayColors: !0,
              callbacks: {
                beforeTitle: w.noop,
                title: function (a, c) {
                  var e = "",
                    d = (c = c.labels) ? c.length : 0;
                  0 < a.length &&
                    ((a = a[0]),
                    a.xLabel
                      ? (e = a.xLabel)
                      : 0 < d && a.index < d && (e = c[a.index]));
                  return e;
                },
                afterTitle: w.noop,
                beforeBody: w.noop,
                beforeLabel: w.noop,
                label: function (a, c) {
                  return (
                    (c.datasets[a.datasetIndex].label || "") + ": " + a.yLabel
                  );
                },
                labelColor: function (a, c) {
                  a = c.getDatasetMeta(a.datasetIndex).data[a.index]._view;
                  return {
                    borderColor: a.borderColor,
                    backgroundColor: a.backgroundColor,
                  };
                },
                afterLabel: w.noop,
                afterBody: w.noop,
                beforeFooter: w.noop,
                footer: w.noop,
                afterFooter: w.noop,
              },
            };
            h.Tooltip = h.Element.extend({
              initialize: function () {
                this._model = a(this._options);
              },
              getTitle: function () {
                var a = this._options.callbacks,
                  c = a.beforeTitle.apply(this, arguments),
                  e = a.title.apply(this, arguments);
                a = a.afterTitle.apply(this, arguments);
                var d = [];
                d = f(d, c);
                d = f(d, e);
                return f(d, a);
              },
              getBeforeBody: function () {
                var a = this._options.callbacks.beforeBody.apply(
                  this,
                  arguments
                );
                return w.isArray(a) ? a : void 0 !== a ? [a] : [];
              },
              getBody: function (a, c) {
                var e = this,
                  d = e._options.callbacks,
                  k = [];
                w.each(a, function (a) {
                  var p = { before: [], lines: [], after: [] };
                  f(p.before, d.beforeLabel.call(e, a, c));
                  f(p.lines, d.label.call(e, a, c));
                  f(p.after, d.afterLabel.call(e, a, c));
                  k.push(p);
                });
                return k;
              },
              getAfterBody: function () {
                var a = this._options.callbacks.afterBody.apply(
                  this,
                  arguments
                );
                return w.isArray(a) ? a : void 0 !== a ? [a] : [];
              },
              getFooter: function () {
                var a = this._options.callbacks,
                  c = a.beforeFooter.apply(this, arguments),
                  e = a.footer.apply(this, arguments);
                a = a.afterFooter.apply(this, arguments);
                var d = [];
                d = f(d, c);
                d = f(d, e);
                return f(d, a);
              },
              update: function (f) {
                var q = this,
                  p = q._options,
                  x = q._model,
                  y = (q._model = a(p)),
                  l = q._active,
                  v = q._data,
                  n = q._chartInstance,
                  t = { xAlign: x.xAlign, yAlign: x.yAlign },
                  u = { x: x.x, y: x.y },
                  z = { width: x.width, height: x.height };
                x = { x: x.caretX, y: x.caretY };
                if (l.length) {
                  y.opacity = 1;
                  var C = [];
                  x = h.Tooltip.positioners[p.position](l, q._eventPosition);
                  z = [];
                  t = 0;
                  for (u = l.length; t < u; ++t) z.push(d(l[t]));
                  p.filter &&
                    (z = z.filter(function (a) {
                      return p.filter(a, v);
                    }));
                  p.itemSort &&
                    (z = z.sort(function (a, c) {
                      return p.itemSort(a, c, v);
                    }));
                  w.each(z, function (a) {
                    C.push(p.callbacks.labelColor.call(q, a, n));
                  });
                  y.title = q.getTitle(z, v);
                  y.beforeBody = q.getBeforeBody(z, v);
                  y.body = q.getBody(z, v);
                  y.afterBody = q.getAfterBody(z, v);
                  y.footer = q.getFooter(z, v);
                  y.x = Math.round(x.x);
                  y.y = Math.round(x.y);
                  y.caretPadding = w.getValueOrDefault(x.padding, 2);
                  y.labelColors = C;
                  y.dataPoints = z;
                  z = c(this, y);
                  t = e(this, z);
                  u = k(y, z, t);
                } else y.opacity = 0;
                y.xAlign = t.xAlign;
                y.yAlign = t.yAlign;
                y.x = u.x;
                y.y = u.y;
                y.width = z.width;
                y.height = z.height;
                y.caretX = x.x;
                y.caretY = x.y;
                q._model = y;
                f && p.custom && p.custom.call(q, y);
                return q;
              },
              drawCaret: function (a, c, e) {
                var d = this._view,
                  f = this._chart.ctx,
                  k = d.caretSize,
                  p = d.cornerRadius,
                  h = d.xAlign,
                  q = d.yAlign,
                  w = a.x;
                a = a.y;
                var v = c.width;
                c = c.height;
                "center" === q
                  ? ("left" === h
                      ? ((p = w), (h = p - k))
                      : ((p = w + v), (h = p + k)),
                    (w = p),
                    (a += c / 2),
                    (q = a - k),
                    (k = a + k))
                  : ("left" === h
                      ? ((p = w + p), (h = p + k), (w = h + k))
                      : "right" === h
                      ? ((p = w + v - p), (h = p - k), (w = h - k))
                      : ((h = w + v / 2), (p = h - k), (w = h + k)),
                    "top" === q
                      ? ((q = a), (a = q - k))
                      : ((q = a + c), (a = q + k)),
                    (k = q));
                f.fillStyle = l(d.backgroundColor, e);
                f.beginPath();
                f.moveTo(p, q);
                f.lineTo(h, a);
                f.lineTo(w, k);
                f.closePath();
                f.fill();
              },
              drawTitle: function (a, c, e, d) {
                var f = c.title;
                if (f.length) {
                  e.textAlign = c._titleAlign;
                  e.textBaseline = "top";
                  var k = c.titleFontSize,
                    p = c.titleSpacing;
                  e.fillStyle = l(c.titleFontColor, d);
                  e.font = w.fontString(
                    k,
                    c._titleFontStyle,
                    c._titleFontFamily
                  );
                  var h;
                  d = 0;
                  for (h = f.length; d < h; ++d)
                    e.fillText(f[d], a.x, a.y),
                      (a.y += k + p),
                      d + 1 === f.length && (a.y += c.titleMarginBottom - p);
                }
              },
              drawBody: function (a, c, e, d) {
                var f = c.bodyFontSize,
                  k = c.bodySpacing,
                  p = c.body;
                e.textAlign = c._bodyAlign;
                e.textBaseline = "top";
                var h = l(c.bodyFontColor, d);
                e.fillStyle = h;
                e.font = w.fontString(f, c._bodyFontStyle, c._bodyFontFamily);
                var q = 0,
                  x = function (c) {
                    e.fillText(c, a.x + q, a.y);
                    a.y += f + k;
                  };
                w.each(c.beforeBody, x);
                var v = c.displayColors;
                q = v ? f + 2 : 0;
                w.each(p, function (k, p) {
                  w.each(k.before, x);
                  w.each(k.lines, function (k) {
                    v &&
                      ((e.fillStyle = l(c.legendColorBackground, d)),
                      e.fillRect(a.x, a.y, f, f),
                      (e.strokeStyle = l(c.labelColors[p].borderColor, d)),
                      e.strokeRect(a.x, a.y, f, f),
                      (e.fillStyle = l(c.labelColors[p].backgroundColor, d)),
                      e.fillRect(a.x + 1, a.y + 1, f - 2, f - 2),
                      (e.fillStyle = h));
                    x(k);
                  });
                  w.each(k.after, x);
                });
                q = 0;
                w.each(c.afterBody, x);
                a.y -= k;
              },
              drawFooter: function (a, c, e, d) {
                var f = c.footer;
                f.length &&
                  ((a.y += c.footerMarginTop),
                  (e.textAlign = c._footerAlign),
                  (e.textBaseline = "top"),
                  (e.fillStyle = l(c.footerFontColor, d)),
                  (e.font = w.fontString(
                    c.footerFontSize,
                    c._footerFontStyle,
                    c._footerFontFamily
                  )),
                  w.each(f, function (d) {
                    e.fillText(d, a.x, a.y);
                    a.y += c.footerFontSize + c.footerSpacing;
                  }));
              },
              drawBackground: function (a, c, e, d, f) {
                e.fillStyle = l(c.backgroundColor, f);
                w.drawRoundedRectangle(
                  e,
                  a.x,
                  a.y,
                  d.width,
                  d.height,
                  c.cornerRadius
                );
                e.fill();
              },
              draw: function () {
                var a = this._chart.ctx,
                  c = this._view;
                if (0 !== c.opacity) {
                  var e = { width: c.width, height: c.height },
                    d = { x: c.x, y: c.y },
                    f = Math.abs(0.001 > c.opacity) ? 0 : c.opacity;
                  this._options.enabled &&
                    (this.drawBackground(d, c, a, e, f),
                    this.drawCaret(d, e, f),
                    (d.x += c.xPadding),
                    (d.y += c.yPadding),
                    this.drawTitle(d, c, a, f),
                    this.drawBody(d, c, a, f),
                    this.drawFooter(d, c, a, f));
                }
              },
              handleEvent: function (a) {
                var c = this._options;
                this._lastActive = this._lastActive || [];
                this._active =
                  "mouseout" === a.type
                    ? []
                    : this._chartInstance.getElementsAtEventForMode(
                        a,
                        c.mode,
                        c
                      );
                var e = !w.arrayEquals(this._active, this._lastActive);
                this._lastActive = this._active;
                if (c.enabled || c.custom)
                  (this._eventPosition = { x: a.x, y: a.y }),
                    (a = this._model),
                    this.update(!0),
                    this.pivot(),
                    (e |= a.x !== this._model.x || a.y !== this._model.y);
                return e;
              },
            });
            h.Tooltip.positioners = {
              average: function (a) {
                if (!a.length) return !1;
                var c,
                  e = 0,
                  d = 0,
                  f = 0,
                  k = 0;
                for (c = a.length; k < c; ++k) {
                  var h = a[k];
                  h &&
                    h.hasValue() &&
                    ((h = h.tooltipPosition()), (e += h.x), (d += h.y), ++f);
                }
                return { x: Math.round(e / f), y: Math.round(d / f) };
              },
              nearest: function (a, c) {
                var e = c.x,
                  d = c.y,
                  f = Number.POSITIVE_INFINITY,
                  k,
                  h = 0;
                for (k = a.length; h < k; ++h) {
                  var q = a[h];
                  if (q && q.hasValue()) {
                    var l = q.getCenterPoint();
                    l = w.distanceBetweenPoints(c, l);
                    if (l < f) {
                      f = l;
                      var v = q;
                    }
                  }
                }
                v && ((a = v.tooltipPosition()), (e = a.x), (d = a.y));
                return { x: e, y: d };
              },
            };
          };
        },
        {},
      ],
      37: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = h.defaults.global;
            f.elements.arc = {
              backgroundColor: f.defaultColor,
              borderColor: "#fff",
              borderWidth: 2,
            };
            h.elements.Arc = h.Element.extend({
              inLabelRange: function (d) {
                var a = this._view;
                return a
                  ? Math.pow(d - a.x, 2) < Math.pow(a.radius + a.hoverRadius, 2)
                  : !1;
              },
              inRange: function (d, a) {
                var c = this._view;
                if (c) {
                  a = l.getAngleFromPoint(c, { x: d, y: a });
                  d = a.angle;
                  var e = a.distance;
                  a = c.startAngle;
                  for (var f = c.endAngle; f < a; ) f += 2 * Math.PI;
                  for (; d > f; ) d -= 2 * Math.PI;
                  for (; d < a; ) d += 2 * Math.PI;
                  c = e >= c.innerRadius && e <= c.outerRadius;
                  return d >= a && d <= f && c;
                }
                return !1;
              },
              getCenterPoint: function () {
                var d = this._view,
                  a = (d.startAngle + d.endAngle) / 2,
                  c = (d.innerRadius + d.outerRadius) / 2;
                return { x: d.x + Math.cos(a) * c, y: d.y + Math.sin(a) * c };
              },
              getArea: function () {
                var d = this._view;
                return (
                  ((d.endAngle - d.startAngle) / (2 * Math.PI)) *
                  Math.PI *
                  (Math.pow(d.outerRadius, 2) - Math.pow(d.innerRadius, 2))
                );
              },
              tooltipPosition: function () {
                var d = this._view,
                  a = d.startAngle + (d.endAngle - d.startAngle) / 2,
                  c = (d.outerRadius - d.innerRadius) / 2 + d.innerRadius;
                return { x: d.x + Math.cos(a) * c, y: d.y + Math.sin(a) * c };
              },
              draw: function () {
                var d = this._chart.ctx,
                  a = this._view,
                  c = a.startAngle,
                  e = a.endAngle;
                d.beginPath();
                d.arc(a.x, a.y, a.outerRadius, c, e);
                d.arc(a.x, a.y, a.innerRadius, e, c, !0);
                d.closePath();
                d.strokeStyle = a.borderColor;
                d.lineWidth = a.borderWidth;
                d.fillStyle = a.backgroundColor;
                d.fill();
                d.lineJoin = "bevel";
                a.borderWidth && d.stroke();
              },
            });
          };
        },
        {},
      ],
      38: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = h.defaults.global;
            h.defaults.global.elements.line = {
              tension: 0.4,
              backgroundColor: f.defaultColor,
              borderWidth: 3,
              borderColor: f.defaultColor,
              borderCapStyle: "butt",
              borderDash: [],
              borderDashOffset: 0,
              borderJoinStyle: "miter",
              capBezierPoints: !0,
              fill: !0,
            };
            h.elements.Line = h.Element.extend({
              draw: function () {
                function d(a, c) {
                  var e = c._view;
                  !0 === c._view.steppedLine
                    ? (h.lineTo(e.x, a._view.y), h.lineTo(e.x, e.y))
                    : 0 === c._view.tension
                    ? h.lineTo(e.x, e.y)
                    : h.bezierCurveTo(
                        a._view.controlPointNextX,
                        a._view.controlPointNextY,
                        e.controlPointPreviousX,
                        e.controlPointPreviousY,
                        e.x,
                        e.y
                      );
                }
                var a = this._view,
                  c = a.spanGaps,
                  e = a.scaleZero,
                  k = this._loop;
                k ||
                  ("top" === a.fill
                    ? (e = a.scaleTop)
                    : "bottom" === a.fill && (e = a.scaleBottom));
                var h = this._chart.ctx;
                h.save();
                var v = this._children.slice(),
                  q = -1;
                k && v.length && v.push(v[0]);
                var p;
                if (v.length && a.fill) {
                  h.beginPath();
                  for (p = 0; p < v.length; ++p) {
                    var x = v[p],
                      y = l.previousItem(v, p),
                      n = x._view;
                    0 === p
                      ? (k ? h.moveTo(e.x, e.y) : h.moveTo(n.x, e),
                        n.skip || ((q = p), h.lineTo(n.x, n.y)))
                      : ((y = -1 === q ? y : v[q]),
                        n.skip
                          ? c ||
                            q !== p - 1 ||
                            (k ? h.lineTo(e.x, e.y) : h.lineTo(y._view.x, e))
                          : (q !== p - 1
                              ? c && -1 !== q
                                ? d(y, x)
                                : (k || h.lineTo(n.x, e), h.lineTo(n.x, n.y))
                              : d(y, x),
                            (q = p)));
                  }
                  k || -1 === q || h.lineTo(v[q]._view.x, e);
                  h.fillStyle = a.backgroundColor || f.defaultColor;
                  h.closePath();
                  h.fill();
                }
                e = f.elements.line;
                h.lineCap = a.borderCapStyle || e.borderCapStyle;
                h.setLineDash && h.setLineDash(a.borderDash || e.borderDash);
                h.lineDashOffset = a.borderDashOffset || e.borderDashOffset;
                h.lineJoin = a.borderJoinStyle || e.borderJoinStyle;
                h.lineWidth = a.borderWidth || e.borderWidth;
                h.strokeStyle = a.borderColor || f.defaultColor;
                h.beginPath();
                q = -1;
                for (p = 0; p < v.length; ++p)
                  (x = v[p]),
                    (y = l.previousItem(v, p)),
                    (n = x._view),
                    0 === p
                      ? n.skip || (h.moveTo(n.x, n.y), (q = p))
                      : ((y = -1 === q ? y : v[q]),
                        n.skip ||
                          ((q !== p - 1 && !c) || -1 === q
                            ? h.moveTo(n.x, n.y)
                            : d(y, x),
                          (q = p)));
                h.stroke();
                h.restore();
              },
            });
          };
        },
        {},
      ],
      39: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a) {
              var c = this._view;
              return c
                ? Math.pow(a - c.x, 2) < Math.pow(c.radius + c.hitRadius, 2)
                : !1;
            }
            var f = h.helpers,
              d = h.defaults.global,
              a = d.defaultColor;
            d.elements.point = {
              radius: 3,
              pointStyle: "circle",
              backgroundColor: a,
              borderWidth: 1,
              borderColor: a,
              hitRadius: 1,
              hoverRadius: 4,
              hoverBorderWidth: 1,
            };
            h.elements.Point = h.Element.extend({
              inRange: function (a, e) {
                var c = this._view;
                return c
                  ? Math.pow(a - c.x, 2) + Math.pow(e - c.y, 2) <
                      Math.pow(c.hitRadius + c.radius, 2)
                  : !1;
              },
              inLabelRange: l,
              inXRange: l,
              inYRange: function (a) {
                var c = this._view;
                return c
                  ? Math.pow(a - c.y, 2) < Math.pow(c.radius + c.hitRadius, 2)
                  : !1;
              },
              getCenterPoint: function () {
                var a = this._view;
                return { x: a.x, y: a.y };
              },
              getArea: function () {
                return Math.PI * Math.pow(this._view.radius, 2);
              },
              tooltipPosition: function () {
                var a = this._view;
                return { x: a.x, y: a.y, padding: a.radius + a.borderWidth };
              },
              draw: function (c) {
                var e = this._view,
                  k = this._model,
                  l = this._chart.ctx,
                  v = e.pointStyle,
                  q = e.radius,
                  p = e.x,
                  x = e.y,
                  y = h.helpers.color,
                  n = 0;
                e.skip ||
                  ((l.strokeStyle = e.borderColor || a),
                  (l.lineWidth = f.getValueOrDefault(
                    e.borderWidth,
                    d.elements.point.borderWidth
                  )),
                  (l.fillStyle = e.backgroundColor || a),
                  void 0 !== c &&
                    (k.x < c.left ||
                      1.01 * c.right < k.x ||
                      k.y < c.top ||
                      1.01 * c.bottom < k.y) &&
                    (k.x < c.left
                      ? (n = (p - k.x) / (c.left - k.x))
                      : 1.01 * c.right < k.x
                      ? (n = (k.x - p) / (k.x - c.right))
                      : k.y < c.top
                      ? (n = (x - k.y) / (c.top - k.y))
                      : 1.01 * c.bottom < k.y &&
                        (n = (k.y - x) / (k.y - c.bottom)),
                    (n = Math.round(100 * n) / 100),
                    (l.strokeStyle = y(l.strokeStyle).alpha(n).rgbString()),
                    (l.fillStyle = y(l.fillStyle).alpha(n).rgbString())),
                  h.canvasHelpers.drawPoint(l, v, q, p, x));
              },
            });
          };
        },
        {},
      ],
      40: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(d) {
              var a = d._view;
              if (void 0 !== d._view.width) {
                var c = a.width / 2;
                d = a.x - c;
                c = a.x + c;
                var e = Math.min(a.y, a.base);
                a = Math.max(a.y, a.base);
              } else {
                var f = a.height / 2;
                d = Math.min(a.x, a.base);
                c = Math.max(a.x, a.base);
                e = a.y - f;
                a = a.y + f;
              }
              return { left: d, top: e, right: c, bottom: a };
            }
            var f = h.defaults.global;
            f.elements.rectangle = {
              backgroundColor: f.defaultColor,
              borderWidth: 0,
              borderColor: f.defaultColor,
              borderSkipped: "bottom",
            };
            h.elements.Rectangle = h.Element.extend({
              draw: function () {
                var d = this._chart.ctx,
                  a = this._view,
                  c = a.borderWidth;
                if (a.horizontal)
                  var e = a.base,
                    f = a.x,
                    h = a.y - a.height / 2,
                    l = a.y + a.height / 2,
                    q = f > e ? 1 : -1,
                    p = 1,
                    x = a.borderSkipped || "left";
                else
                  (e = a.x - a.width / 2),
                    (f = a.x + a.width / 2),
                    (h = a.y),
                    (l = a.base),
                    (q = 1),
                    (p = l > h ? 1 : -1),
                    (x = a.borderSkipped || "bottom");
                if (c) {
                  var y = Math.min(Math.abs(e - f), Math.abs(h - l));
                  c = c > y ? y : c;
                  var n = c / 2;
                  y = e + ("left" !== x ? n * q : 0);
                  q = f + ("right" !== x ? -n * q : 0);
                  var t = h + ("top" !== x ? n * p : 0);
                  p = l + ("bottom" !== x ? -n * p : 0);
                  y !== q && ((h = t), (l = p));
                  t !== p && ((e = y), (f = q));
                }
                d.beginPath();
                d.fillStyle = a.backgroundColor;
                d.strokeStyle = a.borderColor;
                d.lineWidth = c;
                a = [
                  [e, l],
                  [e, h],
                  [f, h],
                  [f, l],
                ];
                x = ["bottom", "left", "top", "right"].indexOf(x, 0);
                -1 === x && (x = 0);
                e = a[(x + 0) % 4];
                d.moveTo(e[0], e[1]);
                for (f = 1; 4 > f; f++)
                  (e = a[(x + f) % 4]), d.lineTo(e[0], e[1]);
                d.fill();
                c && d.stroke();
              },
              height: function () {
                var d = this._view;
                return d.base - d.y;
              },
              inRange: function (d, a) {
                var c = !1;
                this._view &&
                  ((c = l(this)),
                  (c =
                    d >= c.left &&
                    d <= c.right &&
                    a >= c.top &&
                    a <= c.bottom));
                return c;
              },
              inLabelRange: function (d, a) {
                if (!this._view) return !1;
                var c = l(this);
                return void 0 !== this._view.width
                  ? d >= c.left && d <= c.right
                  : a >= c.top && a <= c.bottom;
              },
              inXRange: function (d) {
                var a = l(this);
                return d >= a.left && d <= a.right;
              },
              inYRange: function (d) {
                var a = l(this);
                return d >= a.top && d <= a.bottom;
              },
              getCenterPoint: function () {
                var d = this._view;
                if (void 0 !== this._view.width) {
                  var a = d.x;
                  d = (d.y + d.base) / 2;
                } else (a = (d.x + d.base) / 2), (d = d.y);
                return { x: a, y: d };
              },
              getArea: function () {
                var d = this._view;
                return d.width * Math.abs(d.y - d.base);
              },
              tooltipPosition: function () {
                var d = this._view;
                return { x: d.x, y: d.y };
              },
            });
          };
        },
        {},
      ],
      41: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a, e) {
              return (a = (a = c.getStyle(a, e)) && a.match(/(\d+)px/))
                ? Number(a[1])
                : void 0;
            }
            function f(a, c, e, d, f) {
              return {
                type: a,
                chart: c,
                native: f || null,
                x: void 0 !== e ? e : null,
                y: void 0 !== d ? d : null,
              };
            }
            function d(a) {
              var e = document.createElement("iframe");
              e.className = "chartjs-hidden-iframe";
              e.style.cssText =
                "display:block;overflow:hidden;border:0;margin:0;top:0;left:0;bottom:0;right:0;height:100%;width:100%;position:absolute;pointer-events:none;z-index:-1;";
              e.tabIndex = -1;
              c.addEvent(e, "load", function () {
                c.addEvent(e.contentWindow || e, "resize", a);
                a();
              });
              return e;
            }
            function a(a, e, h) {
              var k = (a._chartjs = { ticking: !1 });
              k.resizer = d(function () {
                k.ticking ||
                  ((k.ticking = !0),
                  c.requestAnimFrame.call(window, function () {
                    if (k.resizer) return (k.ticking = !1), e(f("resize", h));
                  }));
              });
              a.insertBefore(k.resizer, a.firstChild);
            }
            var c = h.helpers,
              e = {
                touchstart: "mousedown",
                touchmove: "mousemove",
                touchend: "mouseup",
                pointerenter: "mouseenter",
                pointerdown: "mousedown",
                pointermove: "mousemove",
                pointerup: "mouseup",
                pointerleave: "mouseout",
                pointerout: "mouseout",
              };
            return {
              acquireContext: function (a, c) {
                "string" === typeof a
                  ? (a = document.getElementById(a))
                  : a.length && (a = a[0]);
                a && a.canvas && (a = a.canvas);
                if (a instanceof HTMLCanvasElement) {
                  var e = a.getContext && a.getContext("2d");
                  if (e instanceof CanvasRenderingContext2D) {
                    var d = a.style,
                      f = a.getAttribute("height"),
                      k = a.getAttribute("width");
                    a._chartjs = {
                      initial: {
                        height: f,
                        width: k,
                        style: {
                          display: d.display,
                          height: d.height,
                          width: d.width,
                        },
                      },
                    };
                    d.display = d.display || "block";
                    if (null === k || "" === k) {
                      var h = l(a, "width");
                      void 0 !== h && (a.width = h);
                    }
                    if (null === f || "" === f)
                      "" === a.style.height
                        ? (a.height = a.width / (c.options.aspectRatio || 2))
                        : ((c = l(a, "height")),
                          void 0 !== h && (a.height = c));
                    return e;
                  }
                }
                return null;
              },
              releaseContext: function (a) {
                var e = a.canvas;
                if (e._chartjs) {
                  var d = e._chartjs.initial;
                  ["height", "width"].forEach(function (a) {
                    var c = d[a];
                    void 0 === c || null === c
                      ? e.removeAttribute(a)
                      : e.setAttribute(a, c);
                  });
                  c.each(d.style || {}, function (a, c) {
                    e.style[c] = a;
                  });
                  e.width = e.width;
                  delete e._chartjs;
                }
              },
              addEventListener: function (d, h, l) {
                var k = d.chart.canvas;
                if ("resize" === h) a(k.parentNode, l, d.chart);
                else {
                  var p = l._chartjs || (l._chartjs = {});
                  p = (p.proxies || (p.proxies = {}))[d.id + "_" + h] =
                    function (a) {
                      var k = d.chart,
                        p = e[a.type] || a.type,
                        h = c.getRelativePosition(a, k);
                      a = f(p, k, h.x, h.y, a);
                      l(a);
                    };
                  c.addEvent(k, h, p);
                }
              },
              removeEventListener: function (a, e, d) {
                var f = a.chart.canvas;
                if ("resize" === e) {
                  if ((e = f.parentNode) && e._chartjs) {
                    if ((f = e._chartjs.resizer))
                      f.parentNode.removeChild(f), (e._chartjs.resizer = null);
                    delete e._chartjs;
                  }
                } else
                  (a = ((d._chartjs || {}).proxies || {})[a.id + "_" + e]) &&
                    c.removeEvent(f, e, a);
              },
            };
          };
        },
        {},
      ],
      42: [
        function (u, n, t) {
          var h = u(41);
          n.exports = function (l) {
            l.platform = {
              acquireContext: function () {},
              releaseContext: function () {},
              addEventListener: function () {},
              removeEventListener: function () {},
            };
            l.helpers.extend(l.platform, h(l));
          };
        },
        { 41: 41 },
      ],
      43: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = h.Scale.extend({
                getLabels: function () {
                  var d = this.chart.data;
                  return (
                    (this.isHorizontal() ? d.xLabels : d.yLabels) || d.labels
                  );
                },
                determineDataLimits: function () {
                  var d = this.getLabels();
                  this.minIndex = 0;
                  this.maxIndex = d.length - 1;
                  if (void 0 !== this.options.ticks.min) {
                    var a = l.indexOf(d, this.options.ticks.min);
                    this.minIndex = -1 !== a ? a : this.minIndex;
                  }
                  void 0 !== this.options.ticks.max &&
                    ((a = l.indexOf(d, this.options.ticks.max)),
                    (this.maxIndex = -1 !== a ? a : this.maxIndex));
                  this.min = d[this.minIndex];
                  this.max = d[this.maxIndex];
                },
                buildTicks: function () {
                  var d = this.getLabels();
                  this.ticks =
                    0 === this.minIndex && this.maxIndex === d.length - 1
                      ? d
                      : d.slice(this.minIndex, this.maxIndex + 1);
                },
                getLabelForIndex: function (d, a) {
                  var c = this.chart.data,
                    e = this.isHorizontal();
                  return c.yLabels && !e
                    ? this.getRightValue(c.datasets[a].data[d])
                    : this.ticks[d - this.minIndex];
                },
                getPixelForValue: function (d, a, c, e) {
                  c = Math.max(
                    this.maxIndex +
                      1 -
                      this.minIndex -
                      (this.options.gridLines.offsetGridLines ? 0 : 1),
                    1
                  );
                  void 0 !== d &&
                    isNaN(a) &&
                    ((d = this.getLabels().indexOf(d)), (a = -1 !== d ? d : a));
                  if (this.isHorizontal()) {
                    d = this.width / c;
                    a = d * (a - this.minIndex);
                    if (
                      (this.options.gridLines.offsetGridLines && e) ||
                      (this.maxIndex === this.minIndex && e)
                    )
                      a += d / 2;
                    return this.left + Math.round(a);
                  }
                  d = this.height / c;
                  a = d * (a - this.minIndex);
                  this.options.gridLines.offsetGridLines && e && (a += d / 2);
                  return this.top + Math.round(a);
                },
                getPixelForTick: function (d, a) {
                  return this.getPixelForValue(
                    this.ticks[d],
                    d + this.minIndex,
                    null,
                    a
                  );
                },
                getValueForPixel: function (d) {
                  var a = Math.max(
                      this.ticks.length -
                        (this.options.gridLines.offsetGridLines ? 0 : 1),
                      1
                    ),
                    c = this.isHorizontal();
                  a = (c ? this.width : this.height) / a;
                  d -= c ? this.left : this.top;
                  this.options.gridLines.offsetGridLines && (d -= a / 2);
                  return 0 >= d ? 0 : Math.round(d / a);
                },
                getBasePixel: function () {
                  return this.bottom;
                },
              });
            h.scaleService.registerScaleType("category", f, {
              position: "bottom",
            });
          };
        },
        {},
      ],
      44: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = {
                position: "left",
                ticks: { callback: h.Ticks.formatters.linear },
              },
              d = h.LinearScaleBase.extend({
                determineDataLimits: function () {
                  function a(a) {
                    return h ? a.xAxisID === c.id : a.yAxisID === c.id;
                  }
                  var c = this,
                    e = c.options,
                    d = c.chart,
                    f = d.data.datasets,
                    h = c.isHorizontal();
                  c.min = null;
                  c.max = null;
                  var q = e.stacked;
                  void 0 === q &&
                    l.each(f, function (c, e) {
                      q ||
                        ((c = d.getDatasetMeta(e)),
                        d.isDatasetVisible(e) &&
                          a(c) &&
                          void 0 !== c.stack &&
                          (q = !0));
                    });
                  if (e.stacked || q) {
                    var p = {};
                    l.each(f, function (f, k) {
                      var h = d.getDatasetMeta(k),
                        x = [
                          h.type,
                          void 0 === e.stacked && void 0 === h.stack ? k : "",
                          h.stack,
                        ].join(".");
                      void 0 === p[x] &&
                        (p[x] = { positiveValues: [], negativeValues: [] });
                      var q = p[x].positiveValues,
                        y = p[x].negativeValues;
                      d.isDatasetVisible(k) &&
                        a(h) &&
                        l.each(f.data, function (a, d) {
                          a = +c.getRightValue(a);
                          isNaN(a) ||
                            h.data[d].hidden ||
                            ((q[d] = q[d] || 0),
                            (y[d] = y[d] || 0),
                            e.relativePoints
                              ? (q[d] = 100)
                              : 0 > a
                              ? (y[d] += a)
                              : (q[d] += a));
                        });
                    });
                    l.each(p, function (a) {
                      var e = a.positiveValues.concat(a.negativeValues);
                      a = l.min(e);
                      e = l.max(e);
                      c.min = null === c.min ? a : Math.min(c.min, a);
                      c.max = null === c.max ? e : Math.max(c.max, e);
                    });
                  } else
                    l.each(f, function (e, f) {
                      var k = d.getDatasetMeta(f);
                      d.isDatasetVisible(f) &&
                        a(k) &&
                        l.each(e.data, function (a, e) {
                          a = +c.getRightValue(a);
                          isNaN(a) ||
                            k.data[e].hidden ||
                            (null === c.min
                              ? (c.min = a)
                              : a < c.min && (c.min = a),
                            null === c.max
                              ? (c.max = a)
                              : a > c.max && (c.max = a));
                        });
                    });
                  this.handleTickRangeOptions();
                },
                getTickLimit: function () {
                  var a = this.options.ticks;
                  if (this.isHorizontal())
                    a = Math.min(
                      a.maxTicksLimit ? a.maxTicksLimit : 11,
                      Math.ceil(this.width / 50)
                    );
                  else {
                    var c = l.getValueOrDefault(
                      a.fontSize,
                      h.defaults.global.defaultFontSize
                    );
                    a = Math.min(
                      a.maxTicksLimit ? a.maxTicksLimit : 11,
                      Math.ceil(this.height / (2 * c))
                    );
                  }
                  return a;
                },
                handleDirectionalChanges: function () {
                  this.isHorizontal() || this.ticks.reverse();
                },
                getLabelForIndex: function (a, c) {
                  return +this.getRightValue(
                    this.chart.data.datasets[c].data[a]
                  );
                },
                getPixelForValue: function (a) {
                  var c = this.start;
                  a = +this.getRightValue(a);
                  var e = this.end - c;
                  if (this.isHorizontal())
                    return (
                      (c = this.left + (this.width / e) * (a - c)),
                      Math.round(c)
                    );
                  c = this.bottom - (this.height / e) * (a - c);
                  return Math.round(c);
                },
                getValueForPixel: function (a) {
                  var c = this.isHorizontal();
                  return (
                    this.start +
                    ((c ? a - this.left : this.bottom - a) /
                      (c ? this.width : this.height)) *
                      (this.end - this.start)
                  );
                },
                getPixelForTick: function (a) {
                  return this.getPixelForValue(this.ticksAsNumbers[a]);
                },
              });
            h.scaleService.registerScaleType("linear", d, f);
          };
        },
        {},
      ],
      45: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = l.noop;
            h.LinearScaleBase = h.Scale.extend({
              handleTickRangeOptions: function () {
                var d = this.options.ticks;
                if (d.beginAtZero) {
                  var a = l.sign(this.min),
                    c = l.sign(this.max);
                  0 > a && 0 > c
                    ? (this.max = 0)
                    : 0 < a && 0 < c && (this.min = 0);
                }
                void 0 !== d.min
                  ? (this.min = d.min)
                  : void 0 !== d.suggestedMin &&
                    (this.min = Math.min(this.min, d.suggestedMin));
                void 0 !== d.max
                  ? (this.max = d.max)
                  : void 0 !== d.suggestedMax &&
                    (this.max = Math.max(this.max, d.suggestedMax));
                this.min === this.max &&
                  (this.max++, d.beginAtZero || this.min--);
              },
              getTickLimit: f,
              handleDirectionalChanges: f,
              buildTicks: function () {
                var d = this.options.ticks,
                  a = this.getTickLimit();
                a = Math.max(2, a);
                a = {
                  maxTicks: a,
                  min: d.min,
                  max: d.max,
                  stepSize: l.getValueOrDefault(d.fixedStepSize, d.stepSize),
                };
                a = this.ticks = h.Ticks.generators.linear(a, this);
                this.handleDirectionalChanges();
                this.max = l.max(a);
                this.min = l.min(a);
                d.reverse
                  ? (a.reverse(),
                    (this.start = this.max),
                    (this.end = this.min))
                  : ((this.start = this.min), (this.end = this.max));
              },
              convertTicksToLabels: function () {
                this.ticksAsNumbers = this.ticks.slice();
                this.zeroLineIndex = this.ticks.indexOf(0);
                h.Scale.prototype.convertTicksToLabels.call(this);
              },
            });
          };
        },
        {},
      ],
      46: [
        function (u, n, t) {
          n.exports = function (h) {
            var l = h.helpers,
              f = {
                position: "left",
                ticks: { callback: h.Ticks.formatters.logarithmic },
              },
              d = h.Scale.extend({
                determineDataLimits: function () {
                  function a(a) {
                    return p ? a.xAxisID === c.id : a.yAxisID === c.id;
                  }
                  var c = this,
                    e = c.options,
                    d = e.ticks,
                    f = c.chart,
                    h = f.data.datasets,
                    q = l.getValueOrDefault,
                    p = c.isHorizontal();
                  c.min = null;
                  c.max = null;
                  c.minNotZero = null;
                  var x = e.stacked;
                  void 0 === x &&
                    l.each(h, function (c, e) {
                      x ||
                        ((c = f.getDatasetMeta(e)),
                        f.isDatasetVisible(e) &&
                          a(c) &&
                          void 0 !== c.stack &&
                          (x = !0));
                    });
                  if (e.stacked || x) {
                    var y = {};
                    l.each(h, function (d, k) {
                      var p = f.getDatasetMeta(k),
                        h = [
                          p.type,
                          void 0 === e.stacked && void 0 === p.stack ? k : "",
                          p.stack,
                        ].join(".");
                      f.isDatasetVisible(k) &&
                        a(p) &&
                        (void 0 === y[h] && (y[h] = []),
                        l.each(d.data, function (a, d) {
                          var f = y[h];
                          a = +c.getRightValue(a);
                          isNaN(a) ||
                            p.data[d].hidden ||
                            ((f[d] = f[d] || 0),
                            (f[d] = e.relativePoints ? 100 : f[d] + a));
                        }));
                    });
                    l.each(y, function (a) {
                      var e = l.min(a);
                      a = l.max(a);
                      c.min = null === c.min ? e : Math.min(c.min, e);
                      c.max = null === c.max ? a : Math.max(c.max, a);
                    });
                  } else
                    l.each(h, function (e, d) {
                      var k = f.getDatasetMeta(d);
                      f.isDatasetVisible(d) &&
                        a(k) &&
                        l.each(e.data, function (a, e) {
                          a = +c.getRightValue(a);
                          isNaN(a) ||
                            k.data[e].hidden ||
                            (null === c.min
                              ? (c.min = a)
                              : a < c.min && (c.min = a),
                            null === c.max
                              ? (c.max = a)
                              : a > c.max && (c.max = a),
                            0 !== a &&
                              (null === c.minNotZero || a < c.minNotZero) &&
                              (c.minNotZero = a));
                        });
                    });
                  c.min = q(d.min, c.min);
                  c.max = q(d.max, c.max);
                  c.min === c.max &&
                    (0 !== c.min && null !== c.min
                      ? ((c.min = Math.pow(10, Math.floor(l.log10(c.min)) - 1)),
                        (c.max = Math.pow(10, Math.floor(l.log10(c.max)) + 1)))
                      : ((c.min = 1), (c.max = 10)));
                },
                buildTicks: function () {
                  var a = this.options.ticks,
                    c = (this.ticks = h.Ticks.generators.logarithmic(
                      { min: a.min, max: a.max },
                      this
                    ));
                  this.isHorizontal() || c.reverse();
                  this.max = l.max(c);
                  this.min = l.min(c);
                  a.reverse
                    ? (c.reverse(),
                      (this.start = this.max),
                      (this.end = this.min))
                    : ((this.start = this.min), (this.end = this.max));
                },
                convertTicksToLabels: function () {
                  this.tickValues = this.ticks.slice();
                  h.Scale.prototype.convertTicksToLabels.call(this);
                },
                getLabelForIndex: function (a, c) {
                  return +this.getRightValue(
                    this.chart.data.datasets[c].data[a]
                  );
                },
                getPixelForTick: function (a) {
                  return this.getPixelForValue(this.tickValues[a]);
                },
                getPixelForValue: function (a) {
                  var c = this.start,
                    e = +this.getRightValue(a),
                    d = this.options.ticks;
                  this.isHorizontal()
                    ? ((d = l.log10(this.end) - l.log10(c)),
                      0 === e
                        ? (c = this.left)
                        : ((a = this.width),
                          (c =
                            this.left + (a / d) * (l.log10(e) - l.log10(c)))))
                    : ((a = this.height),
                      0 !== c || d.reverse
                        ? 0 === this.end && d.reverse
                          ? ((d =
                              l.log10(this.start) - l.log10(this.minNotZero)),
                            (c =
                              e === this.end
                                ? this.top
                                : e === this.minNotZero
                                ? this.top + 0.02 * a
                                : this.top +
                                  0.02 * a +
                                  ((0.98 * a) / d) *
                                    (l.log10(e) - l.log10(this.minNotZero))))
                          : ((d = l.log10(this.end) - l.log10(c)),
                            (a = this.height),
                            (c =
                              this.bottom -
                              (a / d) * (l.log10(e) - l.log10(c))))
                        : ((d = l.log10(this.end) - l.log10(this.minNotZero)),
                          (c =
                            e === c
                              ? this.bottom
                              : e === this.minNotZero
                              ? this.bottom - 0.02 * a
                              : this.bottom -
                                0.02 * a -
                                ((0.98 * a) / d) *
                                  (l.log10(e) - l.log10(this.minNotZero)))));
                  return c;
                },
                getValueForPixel: function (a) {
                  var c = l.log10(this.end) - l.log10(this.start);
                  if (this.isHorizontal()) {
                    var e = this.width;
                    a = this.start * Math.pow(10, ((a - this.left) * c) / e);
                  } else
                    (e = this.height),
                      (a =
                        Math.pow(10, ((this.bottom - a) * c) / e) / this.start);
                  return a;
                },
              });
            h.scaleService.registerScaleType("logarithmic", d, f);
          };
        },
        {},
      ],
      47: [
        function (u, n, t) {
          n.exports = function (h) {
            function l(a) {
              return a.options.lineArc ? 0 : a.chart.data.labels.length;
            }
            function f(a) {
              var c = a.options.pointLabels;
              a = e.getValueOrDefault(c.fontSize, k.defaultFontSize);
              var d = e.getValueOrDefault(c.fontStyle, k.defaultFontStyle);
              c = e.getValueOrDefault(c.fontFamily, k.defaultFontFamily);
              var f = e.fontString(a, d, c);
              return { size: a, style: d, family: c, font: f };
            }
            function d(a, c, e, d, f) {
              return a === d || a === f
                ? { start: c - e / 2, end: c + e / 2 }
                : a < d || a > f
                ? { start: c - e - 5, end: c }
                : { start: c, end: c + e + 5 };
            }
            function a(a) {
              var c = a.ctx,
                d = e.getValueOrDefault,
                h = a.options,
                q = h.angleLines,
                w = h.pointLabels;
              c.lineWidth = q.lineWidth;
              c.strokeStyle = q.color;
              h = a.getDistanceFromCenterForValue(h.reverse ? a.min : a.max);
              var n = f(a);
              c.textBaseline = "top";
              for (var v = l(a) - 1; 0 <= v; v--) {
                if (q.display) {
                  var t = a.getPointPosition(v, h);
                  c.beginPath();
                  c.moveTo(a.xCenter, a.yCenter);
                  c.lineTo(t.x, t.y);
                  c.stroke();
                  c.closePath();
                }
                t = a.getPointPosition(v, h + 5);
                var u = d(w.fontColor, k.defaultFontColor);
                c.font = n.font;
                c.fillStyle = u;
                u = a.getIndexAngle(v);
                u = e.toDegrees(u);
                var C =
                  0 === u || 180 === u ? "center" : 180 > u ? "left" : "right";
                c.textAlign = C;
                C = a._pointLabelSizes[v];
                var D = t;
                if (90 === u || 270 === u) D.y -= C.h / 2;
                else if (270 < u || 90 > u) D.y -= C.h;
                u = c;
                C = a.pointLabels[v] || "";
                var H = n.size;
                if (e.isArray(C)) {
                  D = t.y;
                  H *= 1.5;
                  for (var J = 0; J < C.length; ++J)
                    u.fillText(C[J], t.x, D), (D += H);
                } else u.fillText(C, t.x, t.y);
              }
            }
            function c(a) {
              return e.isNumber(a) ? a : 0;
            }
            var e = h.helpers,
              k = h.defaults.global,
              w = {
                display: !0,
                animate: !0,
                lineArc: !1,
                position: "chartArea",
                angleLines: {
                  display: !0,
                  color: "rgba(0, 0, 0, 0.1)",
                  lineWidth: 1,
                },
                ticks: {
                  showLabelBackdrop: !0,
                  backdropColor: "rgba(255,255,255,0.75)",
                  backdropPaddingY: 2,
                  backdropPaddingX: 2,
                  callback: h.Ticks.formatters.linear,
                },
                pointLabels: {
                  fontSize: 10,
                  callback: function (a) {
                    return a;
                  },
                },
              },
              n = h.LinearScaleBase.extend({
                setDimensions: function () {
                  var a = this.options,
                    c = a.ticks;
                  this.width = this.maxWidth;
                  this.height = this.maxHeight;
                  this.xCenter = Math.round(this.width / 2);
                  this.yCenter = Math.round(this.height / 2);
                  var d = e.min([this.height, this.width]),
                    f = e.getValueOrDefault(c.fontSize, k.defaultFontSize);
                  this.drawingArea = a.display
                    ? d / 2 - (f / 2 + c.backdropPaddingY)
                    : d / 2;
                },
                determineDataLimits: function () {
                  var a = this,
                    c = a.chart,
                    d = Number.POSITIVE_INFINITY,
                    f = Number.NEGATIVE_INFINITY;
                  e.each(c.data.datasets, function (k, p) {
                    if (c.isDatasetVisible(p)) {
                      var h = c.getDatasetMeta(p);
                      e.each(k.data, function (c, e) {
                        c = +a.getRightValue(c);
                        isNaN(c) ||
                          h.data[e].hidden ||
                          ((d = Math.min(c, d)), (f = Math.max(c, f)));
                      });
                    }
                  });
                  a.min = d === Number.POSITIVE_INFINITY ? 0 : d;
                  a.max = f === Number.NEGATIVE_INFINITY ? 0 : f;
                  a.handleTickRangeOptions();
                },
                getTickLimit: function () {
                  var a = this.options.ticks,
                    c = e.getValueOrDefault(a.fontSize, k.defaultFontSize);
                  return Math.min(
                    a.maxTicksLimit ? a.maxTicksLimit : 11,
                    Math.ceil(this.drawingArea / (1.5 * c))
                  );
                },
                convertTicksToLabels: function () {
                  h.LinearScaleBase.prototype.convertTicksToLabels.call(this);
                  this.pointLabels = this.chart.data.labels.map(
                    this.options.pointLabels.callback,
                    this
                  );
                },
                getLabelForIndex: function (a, c) {
                  return +this.getRightValue(
                    this.chart.data.datasets[c].data[a]
                  );
                },
                fit: function () {
                  if (this.options.lineArc)
                    (this.drawingArea = Math.round(
                      Math.min(this.height / 2, this.width / 2)
                    )),
                      this.setCenterPoint(0, 0, 0, 0);
                  else {
                    var a = f(this),
                      c = Math.min(this.height / 2, this.width / 2),
                      k = { l: this.width, r: 0, t: this.height, b: 0 },
                      h = {},
                      w;
                    this.ctx.font = a.font;
                    this._pointLabelSizes = [];
                    var n = l(this);
                    for (w = 0; w < n; w++) {
                      var v = this.getPointPosition(w, c),
                        t = this.ctx,
                        u = a.size,
                        z = this.pointLabels[w] || "";
                      z = e.isArray(z)
                        ? {
                            w: e.longestText(t, t.font, z),
                            h: z.length * u + 1.5 * (z.length - 1) * u,
                          }
                        : { w: t.measureText(z).width, h: u };
                      this._pointLabelSizes[w] = z;
                      t = this.getIndexAngle(w);
                      var C = e.toDegrees(t) % 360;
                      u = d(C, v.x, z.w, 0, 180);
                      v = d(C, v.y, z.h, 90, 270);
                      u.start < k.l && ((k.l = u.start), (h.l = t));
                      u.end > k.r && ((k.r = u.end), (h.r = t));
                      v.start < k.t && ((k.t = v.start), (h.t = t));
                      v.end > k.b && ((k.b = v.end), (h.b = t));
                    }
                    this.setReductions(c, k, h);
                  }
                },
                setReductions: function (a, e, d) {
                  var f = e.l / Math.sin(d.l),
                    k = Math.max(e.r - this.width, 0) / Math.sin(d.r),
                    p = -e.t / Math.cos(d.t);
                  e = -Math.max(e.b - this.height, 0) / Math.cos(d.b);
                  f = c(f);
                  k = c(k);
                  p = c(p);
                  e = c(e);
                  this.drawingArea = Math.min(
                    Math.round(a - (f + k) / 2),
                    Math.round(a - (p + e) / 2)
                  );
                  this.setCenterPoint(f, k, p, e);
                },
                setCenterPoint: function (a, c, e, d) {
                  e += this.drawingArea;
                  d = this.height - d - this.drawingArea;
                  this.xCenter = Math.round(
                    (a +
                      this.drawingArea +
                      (this.width - c - this.drawingArea)) /
                      2 +
                      this.left
                  );
                  this.yCenter = Math.round((e + d) / 2 + this.top);
                },
                getIndexAngle: function (a) {
                  var c = (2 * Math.PI) / l(this);
                  return (
                    a * c +
                    ((this.chart.options && this.chart.options.startAngle
                      ? this.chart.options.startAngle
                      : 0) *
                      Math.PI *
                      2) /
                      360
                  );
                },
                getDistanceFromCenterForValue: function (a) {
                  if (null === a) return 0;
                  var c = this.drawingArea / (this.max - this.min);
                  return this.options.reverse
                    ? (this.max - a) * c
                    : (a - this.min) * c;
                },
                getPointPosition: function (a, c) {
                  a = this.getIndexAngle(a) - Math.PI / 2;
                  return {
                    x: Math.round(Math.cos(a) * c) + this.xCenter,
                    y: Math.round(Math.sin(a) * c) + this.yCenter,
                  };
                },
                getPointPositionForValue: function (a, c) {
                  return this.getPointPosition(
                    a,
                    this.getDistanceFromCenterForValue(c)
                  );
                },
                getBasePosition: function () {
                  var a = this.min,
                    c = this.max;
                  return this.getPointPositionForValue(
                    0,
                    this.beginAtZero
                      ? 0
                      : 0 > a && 0 > c
                      ? c
                      : 0 < a && 0 < c
                      ? a
                      : 0
                  );
                },
                draw: function () {
                  var c = this,
                    d = c.options,
                    f = d.gridLines,
                    h = d.ticks,
                    w = e.getValueOrDefault;
                  if (d.display) {
                    var v = c.ctx,
                      n = w(h.fontSize, k.defaultFontSize),
                      t = w(h.fontStyle, k.defaultFontStyle),
                      u = w(h.fontFamily, k.defaultFontFamily),
                      z = e.fontString(n, t, u);
                    e.each(c.ticks, function (a, p) {
                      if (0 < p || d.reverse) {
                        var x = c.getDistanceFromCenterForValue(
                            c.ticksAsNumbers[p]
                          ),
                          q = c.yCenter - x;
                        if (f.display && 0 !== p)
                          a: {
                            var y = c.ctx;
                            y.strokeStyle = e.getValueAtIndexOrDefault(
                              f.color,
                              p - 1
                            );
                            y.lineWidth = e.getValueAtIndexOrDefault(
                              f.lineWidth,
                              p - 1
                            );
                            if (c.options.lineArc)
                              y.beginPath(),
                                y.arc(c.xCenter, c.yCenter, x, 0, 2 * Math.PI);
                            else {
                              p = l(c);
                              if (0 === p) break a;
                              y.beginPath();
                              var t = c.getPointPosition(0, x);
                              y.moveTo(t.x, t.y);
                              for (var u = 1; u < p; u++)
                                (t = c.getPointPosition(u, x)),
                                  y.lineTo(t.x, t.y);
                            }
                            y.closePath();
                            y.stroke();
                          }
                        h.display &&
                          ((x = w(h.fontColor, k.defaultFontColor)),
                          (v.font = z),
                          h.showLabelBackdrop &&
                            ((y = v.measureText(a).width),
                            (v.fillStyle = h.backdropColor),
                            v.fillRect(
                              c.xCenter - y / 2 - h.backdropPaddingX,
                              q - n / 2 - h.backdropPaddingY,
                              y + 2 * h.backdropPaddingX,
                              n + 2 * h.backdropPaddingY
                            )),
                          (v.textAlign = "center"),
                          (v.textBaseline = "middle"),
                          (v.fillStyle = x),
                          v.fillText(a, c.xCenter, q));
                      }
                    });
                    d.lineArc || a(c);
                  }
                },
              });
            h.scaleService.registerScaleType("radialLinear", n, w);
          };
        },
        {},
      ],
      48: [
        function (u, n, t) {
          var h = u(1);
          h = "function" === typeof h ? h : window.moment;
          n.exports = function (l) {
            var f = l.helpers,
              d = [
                {
                  name: "millisecond",
                  steps: [1, 2, 5, 10, 20, 50, 100, 250, 500],
                },
                { name: "second", steps: [1, 2, 5, 10, 30] },
                { name: "minute", steps: [1, 2, 5, 10, 30] },
                { name: "hour", steps: [1, 2, 3, 6, 12] },
                { name: "day", steps: [1, 2, 5] },
                { name: "week", maxStep: 4 },
                { name: "month", maxStep: 3 },
                { name: "quarter", maxStep: 4 },
                { name: "year", maxStep: !1 },
              ],
              a = l.Scale.extend({
                initialize: function () {
                  if (!h)
                    throw Error(
                      "Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at"
                    );
                  l.Scale.prototype.initialize.call(this);
                },
                getLabelMoment: function (a, e) {
                  return null === a || null === e
                    ? null
                    : "undefined" !== typeof this.labelMoments[a]
                    ? this.labelMoments[a][e]
                    : null;
                },
                getLabelDiff: function (a, e) {
                  if (null === a || null === e) return null;
                  void 0 === this.labelDiffs && this.buildLabelDiffs();
                  return "undefined" !== typeof this.labelDiffs[a]
                    ? this.labelDiffs[a][e]
                    : null;
                },
                getMomentStartOf: function (a) {
                  return "week" === this.options.time.unit &&
                    !1 !== this.options.time.isoWeekday
                    ? a
                        .clone()
                        .startOf("isoWeek")
                        .isoWeekday(this.options.time.isoWeekday)
                    : a.clone().startOf(this.tickUnit);
                },
                determineDataLimits: function () {
                  var a = this;
                  a.labelMoments = [];
                  var e = [];
                  a.chart.data.labels && 0 < a.chart.data.labels.length
                    ? (f.each(
                        a.chart.data.labels,
                        function (c) {
                          c = a.parseTime(c);
                          c.isValid() &&
                            (a.options.time.round &&
                              c.startOf(a.options.time.round),
                            e.push(c));
                        },
                        a
                      ),
                      (a.firstTick = h.min.call(a, e)),
                      (a.lastTick = h.max.call(a, e)))
                    : ((a.firstTick = null), (a.lastTick = null));
                  f.each(
                    a.chart.data.datasets,
                    function (c, d) {
                      var k = [],
                        l = a.chart.isDatasetVisible(d);
                      "object" === typeof c.data[0] && null !== c.data[0]
                        ? f.each(
                            c.data,
                            function (c) {
                              c = a.parseTime(a.getRightValue(c));
                              c.isValid() &&
                                (a.options.time.round &&
                                  c.startOf(a.options.time.round),
                                k.push(c),
                                l &&
                                  ((a.firstTick =
                                    null !== a.firstTick
                                      ? h.min(a.firstTick, c)
                                      : c),
                                  (a.lastTick =
                                    null !== a.lastTick
                                      ? h.max(a.lastTick, c)
                                      : c)));
                            },
                            a
                          )
                        : (k = e);
                      a.labelMoments.push(k);
                    },
                    a
                  );
                  a.options.time.min &&
                    (a.firstTick = a.parseTime(a.options.time.min));
                  a.options.time.max &&
                    (a.lastTick = a.parseTime(a.options.time.max));
                  a.firstTick = (a.firstTick || h()).clone();
                  a.lastTick = (a.lastTick || h()).clone();
                },
                buildLabelDiffs: function () {
                  var a = this;
                  a.labelDiffs = [];
                  var e = [];
                  a.chart.data.labels &&
                    0 < a.chart.data.labels.length &&
                    f.each(
                      a.chart.data.labels,
                      function (c) {
                        c = a.parseTime(c);
                        c.isValid() &&
                          (a.options.time.round &&
                            c.startOf(a.options.time.round),
                          e.push(c.diff(a.firstTick, a.tickUnit, !0)));
                      },
                      a
                    );
                  f.each(
                    a.chart.data.datasets,
                    function (c) {
                      var d = [];
                      "object" === typeof c.data[0] && null !== c.data[0]
                        ? f.each(
                            c.data,
                            function (c) {
                              c = a.parseTime(a.getRightValue(c));
                              c.isValid() &&
                                (a.options.time.round &&
                                  c.startOf(a.options.time.round),
                                d.push(c.diff(a.firstTick, a.tickUnit, !0)));
                            },
                            a
                          )
                        : (d = e);
                      a.labelDiffs.push(d);
                    },
                    a
                  );
                },
                buildTicks: function () {
                  this.ctx.save();
                  var a = f.getValueOrDefault(
                      this.options.ticks.fontSize,
                      l.defaults.global.defaultFontSize
                    ),
                    e = f.getValueOrDefault(
                      this.options.ticks.fontStyle,
                      l.defaults.global.defaultFontStyle
                    ),
                    k = f.getValueOrDefault(
                      this.options.ticks.fontFamily,
                      l.defaults.global.defaultFontFamily
                    );
                  e = f.fontString(a, e, k);
                  this.ctx.font = e;
                  this.ticks = [];
                  this.unitScale = 1;
                  this.scaleSizeInUnits = 0;
                  if (this.options.time.unit)
                    (this.tickUnit = this.options.time.unit || "day"),
                      (this.displayFormat =
                        this.options.time.displayFormats[this.tickUnit]),
                      (this.scaleSizeInUnits = this.lastTick.diff(
                        this.firstTick,
                        this.tickUnit,
                        !0
                      )),
                      (this.unitScale = f.getValueOrDefault(
                        this.options.time.unitStepSize,
                        1
                      ));
                  else {
                    e = this.isHorizontal() ? this.width : this.height;
                    k = this.tickFormatFunction(this.firstTick, 0, []);
                    k = this.ctx.measureText(k).width;
                    var h = Math.cos(
                        f.toRadians(this.options.ticks.maxRotation)
                      ),
                      n = Math.sin(f.toRadians(this.options.ticks.maxRotation));
                    a = e / (k * h + a * n);
                    this.tickUnit = this.options.time.minUnit;
                    this.scaleSizeInUnits = this.lastTick.diff(
                      this.firstTick,
                      this.tickUnit,
                      !0
                    );
                    this.displayFormat =
                      this.options.time.displayFormats[this.tickUnit];
                    k = 0;
                    for (e = d[k]; k < d.length; )
                      if (
                        ((this.unitScale = 1),
                        f.isArray(e.steps) &&
                          Math.ceil(this.scaleSizeInUnits / a) < f.max(e.steps))
                      ) {
                        for (k = 0; k < e.steps.length; ++k)
                          if (
                            e.steps[k] >= Math.ceil(this.scaleSizeInUnits / a)
                          ) {
                            this.unitScale = f.getValueOrDefault(
                              this.options.time.unitStepSize,
                              e.steps[k]
                            );
                            break;
                          }
                        break;
                      } else if (
                        !1 === e.maxStep ||
                        Math.ceil(this.scaleSizeInUnits / a) < e.maxStep
                      ) {
                        this.unitScale = f.getValueOrDefault(
                          this.options.time.unitStepSize,
                          Math.ceil(this.scaleSizeInUnits / a)
                        );
                        break;
                      } else
                        ++k,
                          (e = d[k]),
                          (this.tickUnit = e.name),
                          (h = this.firstTick.diff(
                            this.getMomentStartOf(this.firstTick),
                            this.tickUnit,
                            !0
                          )),
                          (n = this.getMomentStartOf(
                            this.lastTick.clone().add(1, this.tickUnit)
                          ).diff(this.lastTick, this.tickUnit, !0)),
                          (this.scaleSizeInUnits =
                            this.lastTick.diff(
                              this.firstTick,
                              this.tickUnit,
                              !0
                            ) +
                            h +
                            n),
                          (this.displayFormat =
                            this.options.time.displayFormats[e.name]);
                  }
                  a = this.options.time.min
                    ? this.getMomentStartOf(this.firstTick)
                    : (this.firstTick = this.getMomentStartOf(this.firstTick));
                  this.options.time.max ||
                    ((e = this.getMomentStartOf(this.lastTick)),
                    (k = e.diff(this.lastTick, this.tickUnit, !0)),
                    0 > k
                      ? (this.lastTick = this.getMomentStartOf(
                          this.lastTick.add(1, this.tickUnit)
                        ))
                      : 0 <= k && (this.lastTick = e),
                    (this.scaleSizeInUnits = this.lastTick.diff(
                      this.firstTick,
                      this.tickUnit,
                      !0
                    )));
                  this.options.time.displayFormat &&
                    (this.displayFormat = this.options.time.displayFormat);
                  this.ticks.push(this.firstTick.clone());
                  for (
                    e = this.unitScale;
                    e <= this.scaleSizeInUnits;
                    e += this.unitScale
                  ) {
                    k = a.clone().add(e, this.tickUnit);
                    if (
                      this.options.time.max &&
                      0 <= k.diff(this.lastTick, this.tickUnit, !0)
                    )
                      break;
                    this.ticks.push(k);
                  }
                  if (
                    0 !==
                      this.ticks[this.ticks.length - 1].diff(
                        this.lastTick,
                        this.tickUnit
                      ) ||
                    0 === this.scaleSizeInUnits
                  )
                    this.options.time.max
                      ? (this.ticks.push(this.lastTick.clone()),
                        (this.scaleSizeInUnits = this.lastTick.diff(
                          this.ticks[0],
                          this.tickUnit,
                          !0
                        )))
                      : (this.ticks.push(this.lastTick.clone()),
                        (this.scaleSizeInUnits = this.lastTick.diff(
                          this.firstTick,
                          this.tickUnit,
                          !0
                        )));
                  this.ctx.restore();
                  this.labelDiffs = void 0;
                },
                getLabelForIndex: function (a, e) {
                  var c =
                    this.chart.data.labels && a < this.chart.data.labels.length
                      ? this.chart.data.labels[a]
                      : "";
                  a = this.chart.data.datasets[e].data[a];
                  null !== a &&
                    "object" === typeof a &&
                    (c = this.getRightValue(a));
                  this.options.time.tooltipFormat &&
                    (c = this.parseTime(c).format(
                      this.options.time.tooltipFormat
                    ));
                  return c;
                },
                tickFormatFunction: function (a, e, d) {
                  a = a.format(this.displayFormat);
                  var c = this.options.ticks;
                  return (c = f.getValueOrDefault(c.callback, c.userCallback))
                    ? c(a, e, d)
                    : a;
                },
                convertTicksToLabels: function () {
                  this.tickMoments = this.ticks;
                  this.ticks = this.ticks.map(this.tickFormatFunction, this);
                },
                getPixelForValue: function (a, e, d) {
                  var c = null;
                  void 0 !== e && void 0 !== d && (c = this.getLabelDiff(d, e));
                  null === c &&
                    ((a && a.isValid) ||
                      (a = this.parseTime(this.getRightValue(a))),
                    a &&
                      a.isValid &&
                      a.isValid() &&
                      (c = a.diff(this.firstTick, this.tickUnit, !0)));
                  if (null !== c)
                    return (
                      (a = 0 !== c ? c / this.scaleSizeInUnits : c),
                      this.isHorizontal()
                        ? this.left + Math.round(this.width * a)
                        : this.top + Math.round(this.height * a)
                    );
                },
                getPixelForTick: function (a) {
                  return this.getPixelForValue(this.tickMoments[a], null, null);
                },
                getValueForPixel: function (a) {
                  var c = this.isHorizontal() ? this.width : this.height;
                  a = (a - (this.isHorizontal() ? this.left : this.top)) / c;
                  a *= this.scaleSizeInUnits;
                  return this.firstTick
                    .clone()
                    .add(h.duration(a, this.tickUnit).asSeconds(), "seconds");
                },
                parseTime: function (a) {
                  return "string" === typeof this.options.time.parser
                    ? h(a, this.options.time.parser)
                    : "function" === typeof this.options.time.parser
                    ? this.options.time.parser(a)
                    : "function" === typeof a.getMonth || "number" === typeof a
                    ? h(a)
                    : a.isValid && a.isValid()
                    ? a
                    : "string" !== typeof this.options.time.format &&
                      this.options.time.format.call
                    ? (console.warn(
                        "options.time.format is deprecated and replaced by options.time.parser."
                      ),
                      this.options.time.format(a))
                    : h(a, this.options.time.format);
                },
              });
            l.scaleService.registerScaleType("time", a, {
              position: "bottom",
              time: {
                parser: !1,
                format: !1,
                unit: !1,
                round: !1,
                displayFormat: !1,
                isoWeekday: !1,
                minUnit: "millisecond",
                displayFormats: {
                  millisecond: "h:mm:ss.SSS a",
                  second: "h:mm:ss a",
                  minute: "h:mm:ss a",
                  hour: "MMM D, hA",
                  day: "ll",
                  week: "ll",
                  month: "MMM YYYY",
                  quarter: "[Q]Q - YYYY",
                  year: "YYYY",
                },
              },
              ticks: { autoSkip: !1 },
            });
          };
        },
        { 1: 1 },
      ],
    },
    {},
    [7]
  )(7);
});
(function (m) {
  m.widget("suwala.doubleScroll", {
    options: {
      contentElement: void 0,
      topScrollBarMarkup:
        '<div class="suwala-doubleScroll-scroll-wrapper" style="height: 20px;"><div class="suwala-doubleScroll-scroll" style="height: 20px;"></div></div>',
      topScrollBarInnerSelector: ".suwala-doubleScroll-scroll",
      scrollCss: { "overflow-x": "scroll", "overflow-y": "hidden" },
      contentCss: { "overflow-x": "scroll", "overflow-y": "hidden" },
    },
    _create: function () {
      var u = this,
        n = m(m(u.options.topScrollBarMarkup));
      u.element.before(n);
      var t =
        void 0 !== u.options.contentElement &&
        0 !== u.element.find(u.options.contentElement).length
          ? u.element.find(u.options.contentElement)
          : u.element.find(">:first-child");
      n.scroll(function () {
        u.element.scrollLeft(n.scrollLeft());
      });
      u.element.scroll(function () {
        n.scrollLeft(u.element.scrollLeft());
      });
      n.css(u.options.scrollCss);
      u.element.css(u.options.contentCss);
      m(u.options.topScrollBarInnerSelector, n).width(t[0].scrollWidth);
      n.width(u.element[0].clientWidth);
    },
    refresh: function () {
      var u = this.element.parent().find(".suwala-doubleScroll-scroll-wrapper");
      var n =
        void 0 !== this.options.contentElement &&
        0 !== this.element.find(this.options.contentElement).length
          ? this.element.find(this.options.contentElement)
          : this.element.find(">:first-child");
      m(this.options.topScrollBarInnerSelector, u).width(n[0].scrollWidth);
      u.width(this.element[0].clientWidth);
    },
  });
})(jQuery);
(function (m) {
  m.fn.magnify = function (u) {
    var n = this,
      t = m.extend({ speed: 100, timeout: -1, onload: function () {} }, u),
      h = function (d) {
        var a = m(d),
          c = a.closest("a"),
          e,
          f,
          h,
          l,
          q,
          p,
          x,
          y,
          n,
          u = 0,
          B = 0,
          G = a.attr("data-magnify-src") || t.src || c.attr("href") || "",
          A = function () {
            f.is(":visible") &&
              f.fadeOut(t.speed, function () {
                m("html").removeClass("magnifying").trigger("magnifyend");
              });
          };
        if (G) {
          a.data("originalStyle", a.attr("style"));
          var z = new Image();
          m(z).on({
            load: function () {
              a.css("display", "block");
              a.parent(".magnify").length ||
                a.wrap('<div class="magnify"></div>');
              e = a.parent(".magnify");
              a.prev(".magnify-lens").length
                ? e
                    .children(".magnify-lens")
                    .css("background-image", "url('" + G + "')")
                : a.before(
                    '<div class="magnify-lens loading" style="background:url(\'' +
                      G +
                      "') no-repeat 0 0\"></div>"
                  );
              f = e.children(".magnify-lens");
              f.removeClass("loading");
              u = z.width;
              B = z.height;
              h = e.offset();
              l = e.width();
              q = e.height();
              p = a.innerWidth();
              x = a.innerHeight();
              y = f.width();
              n = f.height();
              a.data("zoomSize", { width: u, height: B });
              z = null;
              t.onload();
              e.on("mousemove touchmove", function (a) {
                a.preventDefault();
                var c = (a.pageX || a.originalEvent.touches[0].pageX) - h.left;
                a = (a.pageY || a.originalEvent.touches[0].pageY) - h.top;
                f.is(":animated") ||
                  (c < l && a < q && 0 < c && 0 < a
                    ? f.is(":hidden") &&
                      (m("html").addClass("magnifying").trigger("magnifystart"),
                      f.fadeIn(t.speed))
                    : A());
                if (f.is(":visible")) {
                  if (u && B)
                    var e =
                      -1 * Math.round((c / p) * u - y / 2) +
                      "px " +
                      -1 * Math.round((a / x) * B - n / 2) +
                      "px";
                  f.css({
                    top: Math.round(a - n / 2) + "px",
                    left: Math.round(c - y / 2) + "px",
                    backgroundPosition: e || "",
                  });
                }
              });
              e.mouseleave(A);
              if (0 <= t.timeout)
                e.on("touchend", function () {
                  setTimeout(A, t.timeout);
                });
              m("body").not(e).on("touchstart", A);
              var d = a.attr("usemap");
              d &&
                (a.after(m("map[name=" + d.slice(1) + "]")),
                e.one("click", function (a) {
                  f.hide();
                  document
                    .elementFromPoint(
                      a.pageX || a.originalEvent.touches[0].pageX,
                      a.pageY || a.originalEvent.touches[0].pageY
                    )
                    .click();
                }));
              c.length &&
                (c.css("display", "inline-block"),
                !c.attr("href") ||
                  a.attr("data-magnify-src") ||
                  t.src ||
                  c.click(function (a) {
                    a.preventDefault();
                  }));
            },
            error: function () {
              z = null;
            },
          });
          z.src = G;
        }
      },
      l = 0,
      f = function () {
        clearTimeout(l);
        l = setTimeout(function () {
          n.destroy();
          n.magnify(t);
        }, 100);
      };
    this.destroy = function () {
      this.each(function () {
        var d = m(this),
          a = d.data("originalStyle");
        a ? d.attr("style", a) : d.removeAttr("style");
        d.unwrap(".magnify").prevAll(".magnify-lens").remove();
      });
      m(window).off("resize", f);
      return n;
    };
    m(window).resize(f);
    return this.each(function () {
      h(this);
    });
  };
})(jQuery);
jQuery(function (m) {
  m.widget("ui.combobox", {
    options: { delay: 100, minLength: 0, pageSize: 20, sourceType: "options" },
    _create: function () {
      this.options.setup &&
        (this.options = this.options.setup.call(this, this));
      switch (this.options.sourceType) {
        case "remote":
          this.options.sourceType = "Remote";
          break;
        default:
          this.options.sourceType = "Options";
      }
      var u = this;
      this.wrapper = m("<span/>")
        .addClass("ui-combobox")
        .insertAfter(this.element);
      this.element.hide();
      this._createFilterInput();
      this._createDropDownButton();
      this._createAutocomplete();
      this.input.data("autocomplete")._renderItem = this._renderItem;
      this.input.data("autocomplete")._renderMenu = function (m, t) {
        return u._renderMenu(this, m, t);
      };
      this.button.on("click", function () {
        u.input.autocomplete("widget").is(":visible")
          ? u.input.autocomplete("close")
          : (m(this).blur(),
            u.input.autocomplete("search", ""),
            u.input.focus());
      });
      this.button.on("mousedown", function () {
        u.input.autocomplete("widget").is(":visible");
      });
    },
    _renderMenu: function (u, n, t) {
      m(n).unbind("scroll");
      var h = this,
        l = Math.ceil(h.total / h.options.pageSize);
      1 < l &&
        l >= (h.page || 1) &&
        m(n).scroll(function () {
          var f = m(n);
          var d = f.outerHeight(),
            a = f[0].scrollHeight;
          f = f.scrollTop() >= a - 2 * d ? !0 : !1;
          f && !h.lock && ((h.page = (h.page || 1) + 1), u._search(h.term));
        });
      m.each(t, function (f, d) {
        "original" != m(d.option).attr("rel") && u._renderItem(n, d);
      });
    },
    _renderItem: function (u, n) {
      return m("<li/>")
        .data("item.autocomplete", n)
        .append("<a>" + n.label + "</a>")
        .appendTo(u);
    },
    _createFilterInput: function () {
      var u = this.element.children(":selected");
      u = u.val() ? u.text() : "";
      this.input = m("<input type='text'/>")
        .appendTo(this.wrapper)
        .val(u)
        .attr("title", "")
        .addClass(
          "ui-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left"
        );
    },
    _createDropDownButton: function () {
      this.button = m("<a>")
        .attr("tabIndex", -1)
        .attr("title", "Show All Items")
        .appendTo(this.wrapper)
        .button({ icons: { primary: "ui-icon-triangle-1-s" }, text: !1 })
        .removeClass("ui-corner-all")
        .addClass("ui-combobox-toggle ui-corner-right ui-button-icon");
    },
    _createAutocomplete: function () {
      var u = this;
      this.input.autocomplete({
        delay: this.options.delay,
        minLength: this.options.minLength,
        source: m.proxy(this, "_sourceFrom" + this.options.sourceType),
        select: function (n, t) {
          t.item.option.selected = !0;
          m(t.item.option).attr("selected", !0);
          u._trigger("selected", n, { item: t.item.option });
        },
        change: function (n, t) {
          if (!t.item) {
            var h = new RegExp(
                "^" + m.ui.autocomplete.escapeRegex(m(this).val()) + "$",
                "i"
              ),
              l = !1;
            u.input.children("option").each(function () {
              if (m(this).text().match(h)) return (this.selected = l = !0), !1;
            });
            if (!l)
              return (
                m(this).val(""),
                u.element.val(""),
                (u.input.data("autocomplete").term = ""),
                !1
              );
          }
        },
      });
      this.input.autocomplete("widget").css({
        "max-height": 24 * (this.options.pageSize - 1),
        "overflow-y": "auto",
      });
    },
    _modelIsOptions: function (u) {
      var n = new RegExp(m.ui.autocomplete.escapeRegex(u.term), "i"),
        t = new RegExp(
          "(?![^&;]+;)(?!<[^<>]*)(" +
            m.ui.autocomplete.escapeRegex(u.term) +
            ")(?![^<>]*>)(?![^&;]+;)",
          "gi"
        );
      return this.element.children("option").map(function () {
        var h = m(this).text();
        if (this.value && (!u.term || n.test(h)))
          return {
            label: h.replace(t, "<strong>$1</strong>"),
            value: h,
            option: this,
          };
      });
    },
    _sourceFromOptions: function (u, n) {
      var t = new RegExp(m.ui.autocomplete.escapeRegex(u.term), "i"),
        h = new RegExp(
          "(?![^&;]+;)(?!<[^<>]*)(" +
            m.ui.autocomplete.escapeRegex(u.term) +
            ")(?![^<>]*>)(?![^&;]+;)",
          "gi"
        );
      n(
        this.element
          .children("option")
          .map(function () {
            var l = m(this).text();
            if (this.value && (!u.term || t.test(l)))
              return {
                label: l.replace(h, "<strong>$1</strong>"),
                value: l,
                option: this,
              };
          })
          .slice(0, this.options.pageSize)
      );
    },
    _sourceFromRemote: function (u, n) {
      m.ui.autocomplete.escapeRegex(u.term);
      var t = this;
      t.term != u.term && (t.page = 1);
      t.term = u.term;
      t.lock = !0;
      m.get(
        this.options.sourceRemoteUrl,
        { term: u.term, page: this.page || 1, pageSize: this.options.pageSize },
        function (h) {
          if (!t.page || 1 >= t.page) {
            var l = t.element.val();
            t.element.empty();
            t.element.append(m("<option/>", { value: l, rel: "original" }));
          }
          t.total = h.total;
          for (var f in h.items)
            (h.items[f].option = m("<option/>", {
              value: h.items[f].id,
              text: h.items[f].label,
            })),
              t.element.append(h.items[f].option);
          t.lock = !1;
          n(t._modelIsOptions(u));
        }
      );
    },
    _destroy: function () {
      this.wrapper.remove();
      this.element.show();
      m.Widget.prototype.destroy.call(this);
    },
  });
});
(function (m) {
  function u(d, a, c) {
    var e = "";
    var f = [];
    var h = [];
    var l = "";
    if ("object" === typeof a) {
      c = t("phpjs.strictForIn", !1);
      a = n(a);
      t("phpjs.strictForIn", c);
      for (e in a) a.hasOwnProperty(e) && (f.push(e), h.push(a[e]));
      a = f;
      c = h;
    }
    h = d.length;
    var q = a.length;
    var p = "string" === typeof a;
    var x = "string" === typeof c;
    for (e = 0; e < h; e++) {
      var m = !1;
      if (p) {
        var u = d.charAt(e);
        for (f = 0; f < q; f++)
          if (u == a.charAt(f)) {
            m = !0;
            break;
          }
      } else
        for (f = 0; f < q; f++)
          if (d.substr(e, a[f].length) == a[f]) {
            m = !0;
            e = e + a[f].length - 1;
            break;
          }
      l = m ? l + (x ? c.charAt(f) : c[f]) : l + d.charAt(e);
    }
    return l;
  }
  function n(d, a) {
    var c = {},
      e = [],
      f = this;
    var h = !1;
    var l = {};
    switch (a) {
      case "SORT_STRING":
        h = function (a, c) {
          return f.strnatcmp(c, a);
        };
        break;
      case "SORT_LOCALE_STRING":
        h = this.i18n_loc_get_default();
        h = this.php_js.i18nLocales[h].sorting;
        break;
      case "SORT_NUMERIC":
        h = function (a, c) {
          return c - a;
        };
        break;
      default:
        h = function (a, c) {
          var e = parseFloat(c),
            d = parseFloat(a),
            f = e + "" === c,
            k = d + "" === a;
          return f && k
            ? e > d
              ? 1
              : e < d
              ? -1
              : 0
            : f && !k
            ? 1
            : !f && k
            ? -1
            : c > a
            ? 1
            : c < a
            ? -1
            : 0;
        };
    }
    for (q in d) d.hasOwnProperty(q) && e.push(q);
    e.sort(h);
    this.php_js = this.php_js || {};
    this.php_js.ini = this.php_js.ini || {};
    l = (h =
      this.php_js.ini["phpjs.strictForIn"] &&
      this.php_js.ini["phpjs.strictForIn"].local_value &&
      "off" !== this.php_js.ini["phpjs.strictForIn"].local_value)
      ? d
      : l;
    for (a = 0; a < e.length; a++) {
      var q = e[a];
      c[q] = d[q];
      h && delete d[q];
    }
    for (a in c) c.hasOwnProperty(a) && (l[a] = c[a]);
    return h || l;
  }
  function t(d, a) {
    this.php_js = this.php_js || {};
    this.php_js.ini = this.php_js.ini || {};
    this.php_js.ini[d] = this.php_js.ini[d] || {};
    var c = this.php_js.ini[d].local_value;
    switch (d) {
      case "extension":
        "function" === typeof this.dl && this.dl(a);
        "undefined" === typeof c && (this.php_js.ini[d].local_value = []);
        this.php_js.ini[d].local_value.push(a);
        break;
      default:
        this.php_js.ini[d].local_value = a;
    }
    return c;
  }
  String.prototype.seoURL = function (d) {
    d = m.extend(
      {
        transliterate: !0,
        lowercase: !1,
        uppercase: !1,
        divider: "-",
        append: "",
      },
      d
    );
    var a = this;
    !0 === d.transliterate && ((a = u(a, h, l)), (a = u(a, f)));
    !0 === d.lowercase && (a = a.toLowerCase());
    !0 === d.uppercase && (a = a.toUpperCase());
    a = a
      .replace(/^\s+|\s+$/g, "")
      .replace(/[_|\s]+/g, "-")
      .replace(/[^a-zA-z\u0400-\u04FF0-9-]+/g, "")
      .replace(/[-]+/g, "-")
      .replace(/^-+|-+$/g, "")
      .replace(/[-]+/g, d.divider);
    return a + d.append;
  };
  var h =
      "\u0105\u0104\u0119\u0118\u00f3\u00d3\u015b\u015a\u0142\u0141\u017c\u017b\u017a\u0179\u0107\u0106\u0144\u0143\u010d\u010c\u010f\u010e\u0148\u0147\u0159\u0158\u0161\u0160\u0165\u0164\u011b\u011a\u016f\u016e\u0171\u0151\u0160\u0152\u017d\u0161\u0153\u017e\u0178\u00a5\u00b5\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\u00d1\u00d2\u00d4\u00d5\u00d6\u00d8\u00d9\u00da\u00db\u00dc\u00dd\u00df\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f0\u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00fc\u00fd\u00ff",
    l =
      "aAeEoOsSlLzZzZcCnNccddnnrrsstteeuuuoSOZsozYYuAAAAAAACEEEEIIIIDNOOOOOUUUUYsaaaaaaaceeeeiiiionoooooouuuuyy",
    f = {
      "\u00e4": "ae",
      "\u00c4": "AE",
      "\u00f6": "oe",
      "\u00d6": "OE",
      "\u00fc": "ue",
      "\u00dc": "UE",
      "\u00df": "ss",
      "\u1e9e": "SS",
    };
})(jQuery);
(function (m) {
  "function" === typeof define && define.amd
    ? define(["jquery"], m)
    : "object" === typeof module && module.exports
    ? (module.exports = function (u, n) {
        void 0 === n &&
          (n =
            "undefined" !== typeof window
              ? require("jquery")
              : require("jquery")(u));
        m(n);
        return n;
      })
    : m(jQuery);
})(function (m) {
  var u = (function () {
      if (m && m.fn && m.fn.select2 && m.fn.select2.amd)
        var n = m.fn.select2.amd;
      (function () {
        if (!n || !n.requirejs) {
          n ? (l = n) : (n = {});
          var h, l, f;
          (function (d) {
            function a(a, c) {
              var e, d;
              c = c && c.split("/");
              var f = t.map,
                k = (f && f["*"]) || {};
              if (a) {
                a = a.split("/");
                var p = a.length - 1;
                t.nodeIdCompat && A.test(a[p]) && (a[p] = a[p].replace(A, ""));
                "." === a[0].charAt(0) &&
                  c &&
                  ((p = c.slice(0, c.length - 1)), (a = p.concat(a)));
                for (p = 0; p < a.length; p++) {
                  var h = a[p];
                  "." === h
                    ? (a.splice(p, 1), --p)
                    : ".." === h &&
                      0 !== p &&
                      (1 !== p || ".." !== a[2]) &&
                      ".." !== a[p - 1] &&
                      0 < p &&
                      (a.splice(p - 1, 2), (p -= 2));
                }
                a = a.join("/");
              }
              if ((c || k) && f) {
                h = a.split("/");
                for (p = h.length; 0 < p; --p) {
                  var l = h.slice(0, p).join("/");
                  if (c)
                    for (d = c.length; 0 < d; --d)
                      if ((e = f[c.slice(0, d).join("/")]))
                        if ((e = e[l])) {
                          var x = e;
                          var q = p;
                          break;
                        }
                  if (x) break;
                  if (!n && k && k[l]) {
                    var n = k[l];
                    var m = p;
                  }
                }
                !x && n && ((x = n), (q = m));
                x && (h.splice(0, q, x), (a = h.join("/")));
              }
              return a;
            }
            function c(a, c) {
              return function () {
                var e = G.call(arguments, 0);
                "string" !== typeof e[0] && 1 === e.length && e.push(null);
                return p.apply(d, e.concat([a, c]));
              };
            }
            function e(c) {
              return function (e) {
                return a(e, c);
              };
            }
            function k(a) {
              return function (c) {
                x[a] = c;
              };
            }
            function n(a) {
              if (B.call(y, a)) {
                var c = y[a];
                delete y[a];
                u[a] = !0;
                D.apply(d, c);
              }
              if (!B.call(x, a) && !B.call(u, a)) throw Error("No " + a);
              return x[a];
            }
            function m(a) {
              var c = a ? a.indexOf("!") : -1;
              if (-1 < c) {
                var e = a.substring(0, c);
                a = a.substring(c + 1, a.length);
              }
              return [e, a];
            }
            function q(a) {
              return function () {
                return (t && t.config && t.config[a]) || {};
              };
            }
            var p,
              x = {},
              y = {},
              t = {},
              u = {},
              B = Object.prototype.hasOwnProperty,
              G = [].slice,
              A = /\.js$/;
            var z = function (c, d) {
              c = m(c);
              var f = c[0];
              d = d[1];
              c = c[1];
              if (f) {
                f = a(f, d);
                var k = n(f);
              }
              f
                ? (c = k && k.normalize ? k.normalize(c, e(d)) : a(c, d))
                : ((c = a(c, d)),
                  (c = m(c)),
                  (f = c[0]),
                  (c = c[1]),
                  f && (k = n(f)));
              return { f: f ? f + "!" + c : c, n: c, pr: f, p: k };
            };
            var C = {
              require: function (a) {
                return c(a);
              },
              exports: function (a) {
                var c = x[a];
                return "undefined" !== typeof c ? c : (x[a] = {});
              },
              module: function (a) {
                return { id: a, uri: "", exports: x[a], config: q(a) };
              },
            };
            var D = function (a, e, f, p) {
              var h,
                l = [];
              var q = typeof f;
              var w = (p = p || a) ? m(p) : [];
              if ("undefined" === q || "function" === q) {
                e =
                  !e.length && f.length ? ["require", "exports", "module"] : e;
                for (h = 0; h < e.length; h += 1) {
                  var v = z(e[h], w);
                  q = v.f;
                  if ("require" === q) l[h] = C.require(a);
                  else if ("exports" === q) {
                    l[h] = C.exports(a);
                    var t = !0;
                  } else if ("module" === q) var F = (l[h] = C.module(a));
                  else if (B.call(x, q) || B.call(y, q) || B.call(u, q))
                    l[h] = n(q);
                  else if (v.p)
                    v.p.load(v.n, c(p, !0), k(q), {}), (l[h] = x[q]);
                  else throw Error(a + " missing " + q);
                }
                e = f ? f.apply(x[a], l) : void 0;
                a &&
                  (F && F.exports !== d && F.exports !== x[a]
                    ? (x[a] = F.exports)
                    : (e === d && t) || (x[a] = e));
              } else a && (x[a] = f);
            };
            h =
              l =
              p =
                function (a, c, e, f, k) {
                  if ("string" === typeof a)
                    return C[a] ? C[a](c) : n(z(a, c ? m(c) : []).f);
                  if (!a.splice) {
                    t = a;
                    t.deps && p(t.deps, t.callback);
                    if (!c) return;
                    c.splice ? ((a = c), (c = e), (e = null)) : (a = d);
                  }
                  c = c || function () {};
                  "function" === typeof e && ((e = f), (f = k));
                  f
                    ? D(d, a, c, e)
                    : setTimeout(function () {
                        D(d, a, c, e);
                      }, 4);
                  return p;
                };
            p.config = function (a) {
              return p(a);
            };
            h._defined = x;
            f = function (a, c, e) {
              if ("string" !== typeof a)
                throw Error(
                  "See almond README: incorrect module build, no module name"
                );
              c.splice || ((e = c), (c = []));
              B.call(x, a) || B.call(y, a) || (y[a] = [a, c, e]);
            };
            f.amd = { jQuery: !0 };
          })();
          n.requirejs = h;
          n.require = l;
          n.define = f;
        }
      })();
      n.define("almond", function () {});
      n.define("jquery", [], function () {
        var h = m || $;
        null == h &&
          console &&
          console.error &&
          console.error(
            "Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."
          );
        return h;
      });
      n.define("select2/utils", ["jquery"], function (h) {
        function l(a) {
          a = a.prototype;
          var c = [],
            d;
          for (d in a)
            "function" === typeof a[d] && "constructor" !== d && c.push(d);
          return c;
        }
        var f = {
            Extend: function (a, e) {
              function c() {
                this.constructor = a;
              }
              var d = {}.hasOwnProperty,
                f;
              for (f in e) d.call(e, f) && (a[f] = e[f]);
              c.prototype = e.prototype;
              a.prototype = new c();
              a.__super__ = e.prototype;
              return a;
            },
            Decorate: function (a, e) {
              function c() {
                var c = Array.prototype.unshift,
                  d = a.prototype.constructor;
                0 < e.prototype.constructor.length &&
                  (c.call(arguments, a.prototype.constructor),
                  (d = e.prototype.constructor));
                d.apply(this, arguments);
              }
              var d = l(e),
                f = l(a);
              e.displayName = a.displayName;
              c.prototype = new (function () {
                this.constructor = c;
              })();
              for (var h = 0; h < f.length; h++) {
                var p = f[h];
                c.prototype[p] = a.prototype[p];
              }
              f = function (a) {
                var d = function () {};
                a in c.prototype && (d = c.prototype[a]);
                var f = e.prototype[a];
                return function () {
                  Array.prototype.unshift.call(arguments, d);
                  return f.apply(this, arguments);
                };
              };
              for (h = 0; h < d.length; h++)
                (p = d[h]), (c.prototype[p] = f(p));
              return c;
            },
          },
          d = function () {
            this.listeners = {};
          };
        d.prototype.on = function (a, e) {
          this.listeners = this.listeners || {};
          a in this.listeners
            ? this.listeners[a].push(e)
            : (this.listeners[a] = [e]);
        };
        d.prototype.trigger = function (a) {
          var c = Array.prototype.slice,
            d = c.call(arguments, 1);
          this.listeners = this.listeners || {};
          null == d && (d = []);
          0 === d.length && d.push({});
          d[0]._type = a;
          a in this.listeners &&
            this.invoke(this.listeners[a], c.call(arguments, 1));
          "*" in this.listeners && this.invoke(this.listeners["*"], arguments);
        };
        d.prototype.invoke = function (a, e) {
          for (var c = 0, d = a.length; c < d; c++) a[c].apply(this, e);
        };
        f.Observable = d;
        f.generateChars = function (a) {
          for (var c = "", d = 0; d < a; d++)
            c += Math.floor(36 * Math.random()).toString(36);
          return c;
        };
        f.bind = function (a, e) {
          return function () {
            a.apply(e, arguments);
          };
        };
        f._convertData = function (a) {
          for (var c in a) {
            var d = c.split("-"),
              f = a;
            if (1 !== d.length) {
              for (var h = 0; h < d.length; h++) {
                var l = d[h];
                l = l.substring(0, 1).toLowerCase() + l.substring(1);
                l in f || (f[l] = {});
                h == d.length - 1 && (f[l] = a[c]);
                f = f[l];
              }
              delete a[c];
            }
          }
          return a;
        };
        f.hasScroll = function (a, e) {
          a = h(e);
          var c = e.style.overflowX,
            d = e.style.overflowY;
          return c !== d || ("hidden" !== d && "visible" !== d)
            ? "scroll" === c || "scroll" === d
              ? !0
              : a.innerHeight() < e.scrollHeight ||
                a.innerWidth() < e.scrollWidth
            : !1;
        };
        f.escapeMarkup = function (a) {
          var c = {
            "\\": "&#92;",
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#47;",
          };
          return "string" !== typeof a
            ? a
            : String(a).replace(/[&<>"'\/\\]/g, function (a) {
                return c[a];
              });
        };
        f.appendMany = function (a, e) {
          if ("1.7" === h.fn.jquery.substr(0, 3)) {
            var c = h();
            h.map(e, function (a) {
              c = c.add(a);
            });
            e = c;
          }
          a.append(e);
        };
        f.__cache = {};
        var a = 0;
        f.GetUniqueElementId = function (c) {
          var e = c.getAttribute("data-select2-id");
          null == e &&
            (c.id
              ? ((e = c.id), c.setAttribute("data-select2-id", e))
              : (c.setAttribute("data-select2-id", ++a), (e = a.toString())));
          return e;
        };
        f.StoreData = function (a, e, d) {
          a = f.GetUniqueElementId(a);
          f.__cache[a] || (f.__cache[a] = {});
          f.__cache[a][e] = d;
        };
        f.GetData = function (a, e) {
          var c = f.GetUniqueElementId(a);
          return e
            ? f.__cache[c] && null != f.__cache[c][e]
              ? f.__cache[c][e]
              : h(a).data(e)
            : f.__cache[c];
        };
        f.RemoveData = function (a) {
          var c = f.GetUniqueElementId(a);
          null != f.__cache[c] && delete f.__cache[c];
          a.removeAttribute("data-select2-id");
        };
        return f;
      });
      n.define("select2/results", ["jquery", "./utils"], function (h, l) {
        function f(d, a, c) {
          this.$element = d;
          this.data = c;
          this.options = a;
          f.__super__.constructor.call(this);
        }
        l.Extend(f, l.Observable);
        f.prototype.render = function () {
          var d = h(
            '<ul class="select2-results__options" role="listbox"></ul>'
          );
          this.options.get("multiple") &&
            d.attr("aria-multiselectable", "true");
          return (this.$results = d);
        };
        f.prototype.clear = function () {
          this.$results.empty();
        };
        f.prototype.displayMessage = function (d) {
          var a = this.options.get("escapeMarkup");
          this.clear();
          this.hideLoading();
          var c = h(
              '<li role="alert" aria-live="assertive" class="select2-results__option"></li>'
            ),
            e = this.options.get("translations").get(d.message);
          c.append(a(e(d.args)));
          c[0].className += " select2-results__message";
          this.$results.append(c);
        };
        f.prototype.hideMessages = function () {
          this.$results.find(".select2-results__message").remove();
        };
        f.prototype.append = function (d) {
          this.hideLoading();
          var a = [];
          if (null == d.results || 0 === d.results.length)
            0 === this.$results.children().length &&
              this.trigger("results:message", { message: "noResults" });
          else {
            d.results = this.sort(d.results);
            for (var c = 0; c < d.results.length; c++) {
              var e = this.option(d.results[c]);
              a.push(e);
            }
            this.$results.append(a);
          }
        };
        f.prototype.position = function (d, a) {
          a.find(".select2-results").append(d);
        };
        f.prototype.sort = function (d) {
          return this.options.get("sorter")(d);
        };
        f.prototype.highlightFirstItem = function () {
          var d = this.$results.find(".select2-results__option[aria-selected]"),
            a = d.filter("[aria-selected=true]");
          0 < a.length
            ? a.first().trigger("mouseenter")
            : d.first().trigger("mouseenter");
          this.ensureHighlightVisible();
        };
        f.prototype.setClasses = function () {
          var d = this;
          this.data.current(function (a) {
            var c = h.map(a, function (a) {
              return a.id.toString();
            });
            d.$results
              .find(".select2-results__option[aria-selected]")
              .each(function () {
                var a = h(this),
                  d = l.GetData(this, "data"),
                  f = "" + d.id;
                (null != d.element && d.element.selected) ||
                (null == d.element && -1 < h.inArray(f, c))
                  ? a.attr("aria-selected", "true")
                  : a.attr("aria-selected", "false");
              });
          });
        };
        f.prototype.showLoading = function (d) {
          this.hideLoading();
          d = {
            disabled: !0,
            loading: !0,
            text: this.options.get("translations").get("searching")(d),
          };
          d = this.option(d);
          d.className += " loading-results";
          this.$results.prepend(d);
        };
        f.prototype.hideLoading = function () {
          this.$results.find(".loading-results").remove();
        };
        f.prototype.option = function (d) {
          var a = document.createElement("li");
          a.className = "select2-results__option";
          var c = { role: "option", "aria-selected": "false" },
            e =
              window.Element.prototype.matches ||
              window.Element.prototype.msMatchesSelector ||
              window.Element.prototype.webkitMatchesSelector;
          if (
            (null != d.element && e.call(d.element, ":disabled")) ||
            (null == d.element && d.disabled)
          )
            delete c["aria-selected"], (c["aria-disabled"] = "true");
          null == d.id && delete c["aria-selected"];
          null != d._resultId && (a.id = d._resultId);
          d.title && (a.title = d.title);
          d.children &&
            ((c.role = "group"),
            (c["aria-label"] = d.text),
            delete c["aria-selected"]);
          for (var f in c) a.setAttribute(f, c[f]);
          if (d.children) {
            c = h(a);
            e = document.createElement("strong");
            e.className = "select2-results__group";
            h(e);
            this.template(d, e);
            f = [];
            for (var n = 0; n < d.children.length; n++) {
              var m = this.option(d.children[n]);
              f.push(m);
            }
            n = h("<ul></ul>", {
              class:
                "select2-results__options select2-results__options--nested",
            });
            n.append(f);
            c.append(e);
            c.append(n);
          } else this.template(d, a);
          l.StoreData(a, "data", d);
          return a;
        };
        f.prototype.bind = function (d, a) {
          var c = this;
          this.$results.attr("id", d.id + "-results");
          d.on("results:all", function (a) {
            c.clear();
            c.append(a.data);
            d.isOpen() && (c.setClasses(), c.highlightFirstItem());
          });
          d.on("results:append", function (a) {
            c.append(a.data);
            d.isOpen() && c.setClasses();
          });
          d.on("query", function (a) {
            c.hideMessages();
            c.showLoading(a);
          });
          d.on("select", function () {
            d.isOpen() &&
              (c.setClasses(),
              c.options.get("scrollAfterSelect") && c.highlightFirstItem());
          });
          d.on("unselect", function () {
            d.isOpen() &&
              (c.setClasses(),
              c.options.get("scrollAfterSelect") && c.highlightFirstItem());
          });
          d.on("open", function () {
            c.$results.attr("aria-expanded", "true");
            c.$results.attr("aria-hidden", "false");
            c.setClasses();
            c.ensureHighlightVisible();
          });
          d.on("close", function () {
            c.$results.attr("aria-expanded", "false");
            c.$results.attr("aria-hidden", "true");
            c.$results.removeAttr("aria-activedescendant");
          });
          d.on("results:toggle", function () {
            var a = c.getHighlightedResults();
            0 !== a.length && a.trigger("mouseup");
          });
          d.on("results:select", function () {
            var a = c.getHighlightedResults();
            if (0 !== a.length) {
              var d = l.GetData(a[0], "data");
              "true" == a.attr("aria-selected")
                ? c.trigger("close", {})
                : c.trigger("select", { data: d });
            }
          });
          d.on("results:previous", function () {
            var a = c.getHighlightedResults(),
              d = c.$results.find("[aria-selected]"),
              f = d.index(a);
            if (!(0 >= f)) {
              --f;
              0 === a.length && (f = 0);
              d = d.eq(f);
              d.trigger("mouseenter");
              a = c.$results.offset().top;
              d = d.offset().top;
              var h = c.$results.scrollTop() + (d - a);
              0 === f
                ? c.$results.scrollTop(0)
                : 0 > d - a && c.$results.scrollTop(h);
            }
          });
          d.on("results:next", function () {
            var a = c.getHighlightedResults(),
              d = c.$results.find("[aria-selected]");
            a = d.index(a) + 1;
            if (!(a >= d.length)) {
              var f = d.eq(a);
              f.trigger("mouseenter");
              d = c.$results.offset().top + c.$results.outerHeight(!1);
              f = f.offset().top + f.outerHeight(!1);
              var h = c.$results.scrollTop() + f - d;
              0 === a
                ? c.$results.scrollTop(0)
                : f > d && c.$results.scrollTop(h);
            }
          });
          d.on("results:focus", function (a) {
            a.element.addClass("select2-results__option--highlighted");
          });
          d.on("results:message", function (a) {
            c.displayMessage(a);
          });
          if (h.fn.mousewheel)
            this.$results.on("mousewheel", function (a) {
              var e = c.$results.scrollTop(),
                d = c.$results.get(0).scrollHeight - e + a.deltaY;
              e = 0 < a.deltaY && 0 >= e - a.deltaY;
              d = 0 > a.deltaY && d <= c.$results.height();
              e
                ? (c.$results.scrollTop(0),
                  a.preventDefault(),
                  a.stopPropagation())
                : d &&
                  (c.$results.scrollTop(
                    c.$results.get(0).scrollHeight - c.$results.height()
                  ),
                  a.preventDefault(),
                  a.stopPropagation());
            });
          this.$results.on(
            "mouseup",
            ".select2-results__option[aria-selected]",
            function (a) {
              var e = h(this),
                d = l.GetData(this, "data");
              "true" === e.attr("aria-selected")
                ? c.options.get("multiple")
                  ? c.trigger("unselect", { originalEvent: a, data: d })
                  : c.trigger("close", {})
                : c.trigger("select", { originalEvent: a, data: d });
            }
          );
          this.$results.on(
            "mouseenter",
            ".select2-results__option[aria-selected]",
            function (a) {
              a = l.GetData(this, "data");
              c.getHighlightedResults().removeClass(
                "select2-results__option--highlighted"
              );
              c.trigger("results:focus", { data: a, element: h(this) });
            }
          );
        };
        f.prototype.getHighlightedResults = function () {
          return this.$results.find(".select2-results__option--highlighted");
        };
        f.prototype.destroy = function () {
          this.$results.remove();
        };
        f.prototype.ensureHighlightVisible = function () {
          var d = this.getHighlightedResults();
          if (0 !== d.length) {
            var a = this.$results.find("[aria-selected]").index(d),
              c = this.$results.offset().top,
              e = d.offset().top,
              f = this.$results.scrollTop() + (e - c);
            c = e - c;
            f -= 2 * d.outerHeight(!1);
            2 >= a
              ? this.$results.scrollTop(0)
              : (c > this.$results.outerHeight() || 0 > c) &&
                this.$results.scrollTop(f);
          }
        };
        f.prototype.template = function (d, a) {
          var c = this.options.get("templateResult"),
            e = this.options.get("escapeMarkup");
          d = c(d, a);
          null == d
            ? (a.style.display = "none")
            : "string" === typeof d
            ? (a.innerHTML = e(d))
            : h(a).append(d);
        };
        return f;
      });
      n.define("select2/keys", [], function () {
        return {
          BACKSPACE: 8,
          TAB: 9,
          ENTER: 13,
          SHIFT: 16,
          CTRL: 17,
          ALT: 18,
          ESC: 27,
          SPACE: 32,
          PAGE_UP: 33,
          PAGE_DOWN: 34,
          END: 35,
          HOME: 36,
          LEFT: 37,
          UP: 38,
          RIGHT: 39,
          DOWN: 40,
          DELETE: 46,
        };
      });
      n.define(
        "select2/selection/base",
        ["jquery", "../utils", "../keys"],
        function (h, l, f) {
          function d(a, c) {
            this.$element = a;
            this.options = c;
            d.__super__.constructor.call(this);
          }
          l.Extend(d, l.Observable);
          d.prototype.render = function () {
            var a = h(
              '<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>'
            );
            this._tabindex = 0;
            null != l.GetData(this.$element[0], "old-tabindex")
              ? (this._tabindex = l.GetData(this.$element[0], "old-tabindex"))
              : null != this.$element.attr("tabindex") &&
                (this._tabindex = this.$element.attr("tabindex"));
            a.attr("title", this.$element.attr("title"));
            a.attr("tabindex", this._tabindex);
            a.attr("aria-disabled", "false");
            return (this.$selection = a);
          };
          d.prototype.bind = function (a, c) {
            var e = this,
              d = a.id + "-results";
            this.container = a;
            this.$selection.on("focus", function (a) {
              e.trigger("focus", a);
            });
            this.$selection.on("blur", function (a) {
              e._handleBlur(a);
            });
            this.$selection.on("keydown", function (a) {
              e.trigger("keypress", a);
              a.which === f.SPACE && a.preventDefault();
            });
            a.on("results:focus", function (a) {
              e.$selection.attr("aria-activedescendant", a.data._resultId);
            });
            a.on("selection:update", function (a) {
              e.update(a.data);
            });
            a.on("open", function () {
              e.$selection.attr("aria-expanded", "true");
              e.$selection.attr("aria-owns", d);
              e._attachCloseHandler(a);
            });
            a.on("close", function () {
              e.$selection.attr("aria-expanded", "false");
              e.$selection.removeAttr("aria-activedescendant");
              e.$selection.removeAttr("aria-owns");
              e.$selection.trigger("focus");
              e._detachCloseHandler(a);
            });
            a.on("enable", function () {
              e.$selection.attr("tabindex", e._tabindex);
              e.$selection.attr("aria-disabled", "false");
            });
            a.on("disable", function () {
              e.$selection.attr("tabindex", "-1");
              e.$selection.attr("aria-disabled", "true");
            });
          };
          d.prototype._handleBlur = function (a) {
            var c = this;
            window.setTimeout(function () {
              document.activeElement == c.$selection[0] ||
                h.contains(c.$selection[0], document.activeElement) ||
                c.trigger("blur", a);
            }, 1);
          };
          d.prototype._attachCloseHandler = function (a) {
            h(document.body).on("mousedown.select2." + a.id, function (a) {
              var c = h(a.target).closest(".select2");
              h(".select2.select2-container--open").each(function () {
                this != c[0] && l.GetData(this, "element").select2("close");
              });
            });
          };
          d.prototype._detachCloseHandler = function (a) {
            h(document.body).off("mousedown.select2." + a.id);
          };
          d.prototype.position = function (a, c) {
            c.find(".selection").append(a);
          };
          d.prototype.destroy = function () {
            this._detachCloseHandler(this.container);
          };
          d.prototype.update = function (a) {
            throw Error(
              "The `update` method must be defined in child classes."
            );
          };
          d.prototype.isEnabled = function () {
            return !this.isDisabled();
          };
          d.prototype.isDisabled = function () {
            return this.options.get("disabled");
          };
          return d;
        }
      );
      n.define(
        "select2/selection/single",
        ["jquery", "./base", "../utils", "../keys"],
        function (h, l, f, d) {
          function a() {
            a.__super__.constructor.apply(this, arguments);
          }
          f.Extend(a, l);
          a.prototype.render = function () {
            var c = a.__super__.render.call(this);
            c.addClass("select2-selection--single");
            c.html(
              '<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'
            );
            return c;
          };
          a.prototype.bind = function (c, e) {
            var d = this;
            a.__super__.bind.apply(this, arguments);
            var f = c.id + "-container";
            this.$selection
              .find(".select2-selection__rendered")
              .attr("id", f)
              .attr("role", "textbox")
              .attr("aria-readonly", "true");
            this.$selection.attr("aria-labelledby", f);
            this.$selection.on("mousedown", function (a) {
              1 === a.which && d.trigger("toggle", { originalEvent: a });
            });
            this.$selection.on("focus", function (a) {});
            this.$selection.on("blur", function (a) {});
            c.on("focus", function (a) {
              c.isOpen() || d.$selection.trigger("focus");
            });
          };
          a.prototype.clear = function () {
            var a = this.$selection.find(".select2-selection__rendered");
            a.empty();
            a.removeAttr("title");
          };
          a.prototype.display = function (a, e) {
            var c = this.options.get("templateSelection");
            return this.options.get("escapeMarkup")(c(a, e));
          };
          a.prototype.selectionContainer = function () {
            return h("<span></span>");
          };
          a.prototype.update = function (a) {
            if (0 === a.length) this.clear();
            else {
              var c = a[0];
              a = this.$selection.find(".select2-selection__rendered");
              var d = this.display(c, a);
              a.empty().append(d);
              (c = c.title || c.text)
                ? a.attr("title", c)
                : a.removeAttr("title");
            }
          };
          return a;
        }
      );
      n.define(
        "select2/selection/multiple",
        ["jquery", "./base", "../utils"],
        function (h, l, f) {
          function d(a, c) {
            d.__super__.constructor.apply(this, arguments);
          }
          f.Extend(d, l);
          d.prototype.render = function () {
            var a = d.__super__.render.call(this);
            a.addClass("select2-selection--multiple");
            a.html('<ul class="select2-selection__rendered"></ul>');
            return a;
          };
          d.prototype.bind = function (a, c) {
            var e = this;
            d.__super__.bind.apply(this, arguments);
            this.$selection.on("click", function (a) {
              e.trigger("toggle", { originalEvent: a });
            });
            this.$selection.on(
              "click",
              ".select2-selection__choice__remove",
              function (a) {
                if (!e.isDisabled()) {
                  var c = h(this).parent();
                  c = f.GetData(c[0], "data");
                  e.trigger("unselect", { originalEvent: a, data: c });
                }
              }
            );
          };
          d.prototype.clear = function () {
            var a = this.$selection.find(".select2-selection__rendered");
            a.empty();
            a.removeAttr("title");
          };
          d.prototype.display = function (a, c) {
            var e = this.options.get("templateSelection");
            return this.options.get("escapeMarkup")(e(a, c));
          };
          d.prototype.selectionContainer = function () {
            return h(
              '<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>'
            );
          };
          d.prototype.update = function (a) {
            this.clear();
            if (0 !== a.length) {
              for (var c = [], e = 0; e < a.length; e++) {
                var d = a[e],
                  h = this.selectionContainer(),
                  l = this.display(d, h);
                h.append(l);
                (l = d.title || d.text) && h.attr("title", l);
                f.StoreData(h[0], "data", d);
                c.push(h);
              }
              a = this.$selection.find(".select2-selection__rendered");
              f.appendMany(a, c);
            }
          };
          return d;
        }
      );
      n.define("select2/selection/placeholder", ["../utils"], function (h) {
        function l(f, d, a) {
          this.placeholder = this.normalizePlaceholder(a.get("placeholder"));
          f.call(this, d, a);
        }
        l.prototype.normalizePlaceholder = function (f, d) {
          "string" === typeof d && (d = { id: "", text: d });
          return d;
        };
        l.prototype.createPlaceholder = function (f, d) {
          f = this.selectionContainer();
          f.html(this.display(d));
          f.addClass("select2-selection__placeholder").removeClass(
            "select2-selection__choice"
          );
          return f;
        };
        l.prototype.update = function (f, d) {
          var a = 1 == d.length && d[0].id != this.placeholder.id;
          if (1 < d.length || a) return f.call(this, d);
          this.clear();
          f = this.createPlaceholder(this.placeholder);
          this.$selection.find(".select2-selection__rendered").append(f);
        };
        return l;
      });
      n.define(
        "select2/selection/allowClear",
        ["jquery", "../keys", "../utils"],
        function (h, l, f) {
          function d() {}
          d.prototype.bind = function (a, c, e) {
            var d = this;
            a.call(this, c, e);
            null == this.placeholder &&
              this.options.get("debug") &&
              window.console &&
              console.error &&
              console.error(
                "Select2: The `allowClear` option should be used in combination with the `placeholder` option."
              );
            this.$selection.on(
              "mousedown",
              ".select2-selection__clear",
              function (a) {
                d._handleClear(a);
              }
            );
            c.on("keypress", function (a) {
              d._handleKeyboardClear(a, c);
            });
          };
          d.prototype._handleClear = function (a, c) {
            if (
              !this.isDisabled() &&
              ((a = this.$selection.find(".select2-selection__clear")),
              0 !== a.length)
            ) {
              c.stopPropagation();
              c = f.GetData(a[0], "data");
              a = this.$element.val();
              this.$element.val(this.placeholder.id);
              var d = { data: c };
              this.trigger("clear", d);
              if (d.prevented) this.$element.val(a);
              else {
                for (var k = 0; k < c.length; k++)
                  if (
                    ((d = { data: c[k] }),
                    this.trigger("unselect", d),
                    d.prevented)
                  ) {
                    this.$element.val(a);
                    return;
                  }
                this.$element.trigger("input").trigger("change");
                this.trigger("toggle", {});
              }
            }
          };
          d.prototype._handleKeyboardClear = function (a, c, d) {
            d.isOpen() ||
              (c.which != l.DELETE && c.which != l.BACKSPACE) ||
              this._handleClear(c);
          };
          d.prototype.update = function (a, c) {
            a.call(this, c);
            0 <
              this.$selection.find(".select2-selection__placeholder").length ||
              0 === c.length ||
              ((a = this.options.get("translations").get("removeAllItems")),
              (a = h(
                '<span class="select2-selection__clear" title="' +
                  a() +
                  '">&times;</span>'
              )),
              f.StoreData(a[0], "data", c),
              this.$selection.find(".select2-selection__rendered").prepend(a));
          };
          return d;
        }
      );
      n.define(
        "select2/selection/search",
        ["jquery", "../utils", "../keys"],
        function (h, l, f) {
          function d(a, c, d) {
            a.call(this, c, d);
          }
          d.prototype.render = function (a) {
            var c = h(
              '<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="searchbox" aria-autocomplete="list" /></li>'
            );
            this.$searchContainer = c;
            this.$search = c.find("input");
            a = a.call(this);
            this._transferTabIndex();
            return a;
          };
          d.prototype.bind = function (a, c, d) {
            var e = this,
              h = c.id + "-results";
            a.call(this, c, d);
            c.on("open", function () {
              e.$search.attr("aria-controls", h);
              e.$search.trigger("focus");
            });
            c.on("close", function () {
              e.$search.val("");
              e.$search.removeAttr("aria-controls");
              e.$search.removeAttr("aria-activedescendant");
              e.$search.trigger("focus");
            });
            c.on("enable", function () {
              e.$search.prop("disabled", !1);
              e._transferTabIndex();
            });
            c.on("disable", function () {
              e.$search.prop("disabled", !0);
            });
            c.on("focus", function (a) {
              e.$search.trigger("focus");
            });
            c.on("results:focus", function (a) {
              a.data._resultId
                ? e.$search.attr("aria-activedescendant", a.data._resultId)
                : e.$search.removeAttr("aria-activedescendant");
            });
            this.$selection.on(
              "focusin",
              ".select2-search--inline",
              function (a) {
                e.trigger("focus", a);
              }
            );
            this.$selection.on(
              "focusout",
              ".select2-search--inline",
              function (a) {
                e._handleBlur(a);
              }
            );
            this.$selection.on(
              "keydown",
              ".select2-search--inline",
              function (a) {
                a.stopPropagation();
                e.trigger("keypress", a);
                e._keyUpPrevented = a.isDefaultPrevented();
                if (a.which === f.BACKSPACE && "" === e.$search.val()) {
                  var c = e.$searchContainer.prev(".select2-selection__choice");
                  0 < c.length &&
                    ((c = l.GetData(c[0], "data")),
                    e.searchRemoveChoice(c),
                    a.preventDefault());
                }
              }
            );
            this.$selection.on(
              "click",
              ".select2-search--inline",
              function (a) {
                e.$search.val() && a.stopPropagation();
              }
            );
            var n = (a = document.documentMode) && 11 >= a;
            this.$selection.on(
              "input.searchcheck",
              ".select2-search--inline",
              function (a) {
                n
                  ? e.$selection.off("input.search input.searchcheck")
                  : e.$selection.off("keyup.search");
              }
            );
            this.$selection.on(
              "keyup.search input.search",
              ".select2-search--inline",
              function (a) {
                if (n && "input" === a.type)
                  e.$selection.off("input.search input.searchcheck");
                else {
                  var c = a.which;
                  c != f.SHIFT &&
                    c != f.CTRL &&
                    c != f.ALT &&
                    c != f.TAB &&
                    e.handleSearch(a);
                }
              }
            );
          };
          d.prototype._transferTabIndex = function (a) {
            this.$search.attr("tabindex", this.$selection.attr("tabindex"));
            this.$selection.attr("tabindex", "-1");
          };
          d.prototype.createPlaceholder = function (a, c) {
            this.$search.attr("placeholder", c.text);
          };
          d.prototype.update = function (a, c) {
            var d = this.$search[0] == document.activeElement;
            this.$search.attr("placeholder", "");
            a.call(this, c);
            this.$selection
              .find(".select2-selection__rendered")
              .append(this.$searchContainer);
            this.resizeSearch();
            d && this.$search.trigger("focus");
          };
          d.prototype.handleSearch = function () {
            this.resizeSearch();
            if (!this._keyUpPrevented) {
              var a = this.$search.val();
              this.trigger("query", { term: a });
            }
            this._keyUpPrevented = !1;
          };
          d.prototype.searchRemoveChoice = function (a, c) {
            this.trigger("unselect", { data: c });
            this.$search.val(c.text);
            this.handleSearch();
          };
          d.prototype.resizeSearch = function () {
            this.$search.css("width", "25px");
            var a =
              "" !== this.$search.attr("placeholder")
                ? this.$selection.find(".select2-selection__rendered").width()
                : 0.75 * (this.$search.val().length + 1) + "em";
            this.$search.css("width", a);
          };
          return d;
        }
      );
      n.define("select2/selection/eventRelay", ["jquery"], function (h) {
        function l() {}
        l.prototype.bind = function (f, d, a) {
          var c = this,
            e =
              "open opening close closing select selecting unselect unselecting clear clearing".split(
                " "
              ),
            k = ["opening", "closing", "selecting", "unselecting", "clearing"];
          f.call(this, d, a);
          d.on("*", function (a, d) {
            if (-1 !== h.inArray(a, e)) {
              d = d || {};
              var f = h.Event("select2:" + a, { params: d });
              c.$element.trigger(f);
              -1 !== h.inArray(a, k) && (d.prevented = f.isDefaultPrevented());
            }
          });
        };
        return l;
      });
      n.define("select2/translation", ["jquery", "require"], function (h, l) {
        function f(d) {
          this.dict = d || {};
        }
        f.prototype.all = function () {
          return this.dict;
        };
        f.prototype.get = function (d) {
          return this.dict[d];
        };
        f.prototype.extend = function (d) {
          this.dict = h.extend({}, d.all(), this.dict);
        };
        f._cache = {};
        f.loadPath = function (d) {
          if (!(d in f._cache)) {
            var a = l(d);
            f._cache[d] = a;
          }
          return new f(f._cache[d]);
        };
        return f;
      });
      n.define("select2/diacritics", [], function () {
        return {
          "\u24b6": "A",
          "\uff21": "A",
          "\u00c0": "A",
          "\u00c1": "A",
          "\u00c2": "A",
          "\u1ea6": "A",
          "\u1ea4": "A",
          "\u1eaa": "A",
          "\u1ea8": "A",
          "\u00c3": "A",
          "\u0100": "A",
          "\u0102": "A",
          "\u1eb0": "A",
          "\u1eae": "A",
          "\u1eb4": "A",
          "\u1eb2": "A",
          "\u0226": "A",
          "\u01e0": "A",
          "\u00c4": "A",
          "\u01de": "A",
          "\u1ea2": "A",
          "\u00c5": "A",
          "\u01fa": "A",
          "\u01cd": "A",
          "\u0200": "A",
          "\u0202": "A",
          "\u1ea0": "A",
          "\u1eac": "A",
          "\u1eb6": "A",
          "\u1e00": "A",
          "\u0104": "A",
          "\u023a": "A",
          "\u2c6f": "A",
          "\ua732": "AA",
          "\u00c6": "AE",
          "\u01fc": "AE",
          "\u01e2": "AE",
          "\ua734": "AO",
          "\ua736": "AU",
          "\ua738": "AV",
          "\ua73a": "AV",
          "\ua73c": "AY",
          "\u24b7": "B",
          "\uff22": "B",
          "\u1e02": "B",
          "\u1e04": "B",
          "\u1e06": "B",
          "\u0243": "B",
          "\u0182": "B",
          "\u0181": "B",
          "\u24b8": "C",
          "\uff23": "C",
          "\u0106": "C",
          "\u0108": "C",
          "\u010a": "C",
          "\u010c": "C",
          "\u00c7": "C",
          "\u1e08": "C",
          "\u0187": "C",
          "\u023b": "C",
          "\ua73e": "C",
          "\u24b9": "D",
          "\uff24": "D",
          "\u1e0a": "D",
          "\u010e": "D",
          "\u1e0c": "D",
          "\u1e10": "D",
          "\u1e12": "D",
          "\u1e0e": "D",
          "\u0110": "D",
          "\u018b": "D",
          "\u018a": "D",
          "\u0189": "D",
          "\ua779": "D",
          "\u01f1": "DZ",
          "\u01c4": "DZ",
          "\u01f2": "Dz",
          "\u01c5": "Dz",
          "\u24ba": "E",
          "\uff25": "E",
          "\u00c8": "E",
          "\u00c9": "E",
          "\u00ca": "E",
          "\u1ec0": "E",
          "\u1ebe": "E",
          "\u1ec4": "E",
          "\u1ec2": "E",
          "\u1ebc": "E",
          "\u0112": "E",
          "\u1e14": "E",
          "\u1e16": "E",
          "\u0114": "E",
          "\u0116": "E",
          "\u00cb": "E",
          "\u1eba": "E",
          "\u011a": "E",
          "\u0204": "E",
          "\u0206": "E",
          "\u1eb8": "E",
          "\u1ec6": "E",
          "\u0228": "E",
          "\u1e1c": "E",
          "\u0118": "E",
          "\u1e18": "E",
          "\u1e1a": "E",
          "\u0190": "E",
          "\u018e": "E",
          "\u24bb": "F",
          "\uff26": "F",
          "\u1e1e": "F",
          "\u0191": "F",
          "\ua77b": "F",
          "\u24bc": "G",
          "\uff27": "G",
          "\u01f4": "G",
          "\u011c": "G",
          "\u1e20": "G",
          "\u011e": "G",
          "\u0120": "G",
          "\u01e6": "G",
          "\u0122": "G",
          "\u01e4": "G",
          "\u0193": "G",
          "\ua7a0": "G",
          "\ua77d": "G",
          "\ua77e": "G",
          "\u24bd": "H",
          "\uff28": "H",
          "\u0124": "H",
          "\u1e22": "H",
          "\u1e26": "H",
          "\u021e": "H",
          "\u1e24": "H",
          "\u1e28": "H",
          "\u1e2a": "H",
          "\u0126": "H",
          "\u2c67": "H",
          "\u2c75": "H",
          "\ua78d": "H",
          "\u24be": "I",
          "\uff29": "I",
          "\u00cc": "I",
          "\u00cd": "I",
          "\u00ce": "I",
          "\u0128": "I",
          "\u012a": "I",
          "\u012c": "I",
          "\u0130": "I",
          "\u00cf": "I",
          "\u1e2e": "I",
          "\u1ec8": "I",
          "\u01cf": "I",
          "\u0208": "I",
          "\u020a": "I",
          "\u1eca": "I",
          "\u012e": "I",
          "\u1e2c": "I",
          "\u0197": "I",
          "\u24bf": "J",
          "\uff2a": "J",
          "\u0134": "J",
          "\u0248": "J",
          "\u24c0": "K",
          "\uff2b": "K",
          "\u1e30": "K",
          "\u01e8": "K",
          "\u1e32": "K",
          "\u0136": "K",
          "\u1e34": "K",
          "\u0198": "K",
          "\u2c69": "K",
          "\ua740": "K",
          "\ua742": "K",
          "\ua744": "K",
          "\ua7a2": "K",
          "\u24c1": "L",
          "\uff2c": "L",
          "\u013f": "L",
          "\u0139": "L",
          "\u013d": "L",
          "\u1e36": "L",
          "\u1e38": "L",
          "\u013b": "L",
          "\u1e3c": "L",
          "\u1e3a": "L",
          "\u0141": "L",
          "\u023d": "L",
          "\u2c62": "L",
          "\u2c60": "L",
          "\ua748": "L",
          "\ua746": "L",
          "\ua780": "L",
          "\u01c7": "LJ",
          "\u01c8": "Lj",
          "\u24c2": "M",
          "\uff2d": "M",
          "\u1e3e": "M",
          "\u1e40": "M",
          "\u1e42": "M",
          "\u2c6e": "M",
          "\u019c": "M",
          "\u24c3": "N",
          "\uff2e": "N",
          "\u01f8": "N",
          "\u0143": "N",
          "\u00d1": "N",
          "\u1e44": "N",
          "\u0147": "N",
          "\u1e46": "N",
          "\u0145": "N",
          "\u1e4a": "N",
          "\u1e48": "N",
          "\u0220": "N",
          "\u019d": "N",
          "\ua790": "N",
          "\ua7a4": "N",
          "\u01ca": "NJ",
          "\u01cb": "Nj",
          "\u24c4": "O",
          "\uff2f": "O",
          "\u00d2": "O",
          "\u00d3": "O",
          "\u00d4": "O",
          "\u1ed2": "O",
          "\u1ed0": "O",
          "\u1ed6": "O",
          "\u1ed4": "O",
          "\u00d5": "O",
          "\u1e4c": "O",
          "\u022c": "O",
          "\u1e4e": "O",
          "\u014c": "O",
          "\u1e50": "O",
          "\u1e52": "O",
          "\u014e": "O",
          "\u022e": "O",
          "\u0230": "O",
          "\u00d6": "O",
          "\u022a": "O",
          "\u1ece": "O",
          "\u0150": "O",
          "\u01d1": "O",
          "\u020c": "O",
          "\u020e": "O",
          "\u01a0": "O",
          "\u1edc": "O",
          "\u1eda": "O",
          "\u1ee0": "O",
          "\u1ede": "O",
          "\u1ee2": "O",
          "\u1ecc": "O",
          "\u1ed8": "O",
          "\u01ea": "O",
          "\u01ec": "O",
          "\u00d8": "O",
          "\u01fe": "O",
          "\u0186": "O",
          "\u019f": "O",
          "\ua74a": "O",
          "\ua74c": "O",
          "\u0152": "OE",
          "\u01a2": "OI",
          "\ua74e": "OO",
          "\u0222": "OU",
          "\u24c5": "P",
          "\uff30": "P",
          "\u1e54": "P",
          "\u1e56": "P",
          "\u01a4": "P",
          "\u2c63": "P",
          "\ua750": "P",
          "\ua752": "P",
          "\ua754": "P",
          "\u24c6": "Q",
          "\uff31": "Q",
          "\ua756": "Q",
          "\ua758": "Q",
          "\u024a": "Q",
          "\u24c7": "R",
          "\uff32": "R",
          "\u0154": "R",
          "\u1e58": "R",
          "\u0158": "R",
          "\u0210": "R",
          "\u0212": "R",
          "\u1e5a": "R",
          "\u1e5c": "R",
          "\u0156": "R",
          "\u1e5e": "R",
          "\u024c": "R",
          "\u2c64": "R",
          "\ua75a": "R",
          "\ua7a6": "R",
          "\ua782": "R",
          "\u24c8": "S",
          "\uff33": "S",
          "\u1e9e": "S",
          "\u015a": "S",
          "\u1e64": "S",
          "\u015c": "S",
          "\u1e60": "S",
          "\u0160": "S",
          "\u1e66": "S",
          "\u1e62": "S",
          "\u1e68": "S",
          "\u0218": "S",
          "\u015e": "S",
          "\u2c7e": "S",
          "\ua7a8": "S",
          "\ua784": "S",
          "\u24c9": "T",
          "\uff34": "T",
          "\u1e6a": "T",
          "\u0164": "T",
          "\u1e6c": "T",
          "\u021a": "T",
          "\u0162": "T",
          "\u1e70": "T",
          "\u1e6e": "T",
          "\u0166": "T",
          "\u01ac": "T",
          "\u01ae": "T",
          "\u023e": "T",
          "\ua786": "T",
          "\ua728": "TZ",
          "\u24ca": "U",
          "\uff35": "U",
          "\u00d9": "U",
          "\u00da": "U",
          "\u00db": "U",
          "\u0168": "U",
          "\u1e78": "U",
          "\u016a": "U",
          "\u1e7a": "U",
          "\u016c": "U",
          "\u00dc": "U",
          "\u01db": "U",
          "\u01d7": "U",
          "\u01d5": "U",
          "\u01d9": "U",
          "\u1ee6": "U",
          "\u016e": "U",
          "\u0170": "U",
          "\u01d3": "U",
          "\u0214": "U",
          "\u0216": "U",
          "\u01af": "U",
          "\u1eea": "U",
          "\u1ee8": "U",
          "\u1eee": "U",
          "\u1eec": "U",
          "\u1ef0": "U",
          "\u1ee4": "U",
          "\u1e72": "U",
          "\u0172": "U",
          "\u1e76": "U",
          "\u1e74": "U",
          "\u0244": "U",
          "\u24cb": "V",
          "\uff36": "V",
          "\u1e7c": "V",
          "\u1e7e": "V",
          "\u01b2": "V",
          "\ua75e": "V",
          "\u0245": "V",
          "\ua760": "VY",
          "\u24cc": "W",
          "\uff37": "W",
          "\u1e80": "W",
          "\u1e82": "W",
          "\u0174": "W",
          "\u1e86": "W",
          "\u1e84": "W",
          "\u1e88": "W",
          "\u2c72": "W",
          "\u24cd": "X",
          "\uff38": "X",
          "\u1e8a": "X",
          "\u1e8c": "X",
          "\u24ce": "Y",
          "\uff39": "Y",
          "\u1ef2": "Y",
          "\u00dd": "Y",
          "\u0176": "Y",
          "\u1ef8": "Y",
          "\u0232": "Y",
          "\u1e8e": "Y",
          "\u0178": "Y",
          "\u1ef6": "Y",
          "\u1ef4": "Y",
          "\u01b3": "Y",
          "\u024e": "Y",
          "\u1efe": "Y",
          "\u24cf": "Z",
          "\uff3a": "Z",
          "\u0179": "Z",
          "\u1e90": "Z",
          "\u017b": "Z",
          "\u017d": "Z",
          "\u1e92": "Z",
          "\u1e94": "Z",
          "\u01b5": "Z",
          "\u0224": "Z",
          "\u2c7f": "Z",
          "\u2c6b": "Z",
          "\ua762": "Z",
          "\u24d0": "a",
          "\uff41": "a",
          "\u1e9a": "a",
          "\u00e0": "a",
          "\u00e1": "a",
          "\u00e2": "a",
          "\u1ea7": "a",
          "\u1ea5": "a",
          "\u1eab": "a",
          "\u1ea9": "a",
          "\u00e3": "a",
          "\u0101": "a",
          "\u0103": "a",
          "\u1eb1": "a",
          "\u1eaf": "a",
          "\u1eb5": "a",
          "\u1eb3": "a",
          "\u0227": "a",
          "\u01e1": "a",
          "\u00e4": "a",
          "\u01df": "a",
          "\u1ea3": "a",
          "\u00e5": "a",
          "\u01fb": "a",
          "\u01ce": "a",
          "\u0201": "a",
          "\u0203": "a",
          "\u1ea1": "a",
          "\u1ead": "a",
          "\u1eb7": "a",
          "\u1e01": "a",
          "\u0105": "a",
          "\u2c65": "a",
          "\u0250": "a",
          "\ua733": "aa",
          "\u00e6": "ae",
          "\u01fd": "ae",
          "\u01e3": "ae",
          "\ua735": "ao",
          "\ua737": "au",
          "\ua739": "av",
          "\ua73b": "av",
          "\ua73d": "ay",
          "\u24d1": "b",
          "\uff42": "b",
          "\u1e03": "b",
          "\u1e05": "b",
          "\u1e07": "b",
          "\u0180": "b",
          "\u0183": "b",
          "\u0253": "b",
          "\u24d2": "c",
          "\uff43": "c",
          "\u0107": "c",
          "\u0109": "c",
          "\u010b": "c",
          "\u010d": "c",
          "\u00e7": "c",
          "\u1e09": "c",
          "\u0188": "c",
          "\u023c": "c",
          "\ua73f": "c",
          "\u2184": "c",
          "\u24d3": "d",
          "\uff44": "d",
          "\u1e0b": "d",
          "\u010f": "d",
          "\u1e0d": "d",
          "\u1e11": "d",
          "\u1e13": "d",
          "\u1e0f": "d",
          "\u0111": "d",
          "\u018c": "d",
          "\u0256": "d",
          "\u0257": "d",
          "\ua77a": "d",
          "\u01f3": "dz",
          "\u01c6": "dz",
          "\u24d4": "e",
          "\uff45": "e",
          "\u00e8": "e",
          "\u00e9": "e",
          "\u00ea": "e",
          "\u1ec1": "e",
          "\u1ebf": "e",
          "\u1ec5": "e",
          "\u1ec3": "e",
          "\u1ebd": "e",
          "\u0113": "e",
          "\u1e15": "e",
          "\u1e17": "e",
          "\u0115": "e",
          "\u0117": "e",
          "\u00eb": "e",
          "\u1ebb": "e",
          "\u011b": "e",
          "\u0205": "e",
          "\u0207": "e",
          "\u1eb9": "e",
          "\u1ec7": "e",
          "\u0229": "e",
          "\u1e1d": "e",
          "\u0119": "e",
          "\u1e19": "e",
          "\u1e1b": "e",
          "\u0247": "e",
          "\u025b": "e",
          "\u01dd": "e",
          "\u24d5": "f",
          "\uff46": "f",
          "\u1e1f": "f",
          "\u0192": "f",
          "\ua77c": "f",
          "\u24d6": "g",
          "\uff47": "g",
          "\u01f5": "g",
          "\u011d": "g",
          "\u1e21": "g",
          "\u011f": "g",
          "\u0121": "g",
          "\u01e7": "g",
          "\u0123": "g",
          "\u01e5": "g",
          "\u0260": "g",
          "\ua7a1": "g",
          "\u1d79": "g",
          "\ua77f": "g",
          "\u24d7": "h",
          "\uff48": "h",
          "\u0125": "h",
          "\u1e23": "h",
          "\u1e27": "h",
          "\u021f": "h",
          "\u1e25": "h",
          "\u1e29": "h",
          "\u1e2b": "h",
          "\u1e96": "h",
          "\u0127": "h",
          "\u2c68": "h",
          "\u2c76": "h",
          "\u0265": "h",
          "\u0195": "hv",
          "\u24d8": "i",
          "\uff49": "i",
          "\u00ec": "i",
          "\u00ed": "i",
          "\u00ee": "i",
          "\u0129": "i",
          "\u012b": "i",
          "\u012d": "i",
          "\u00ef": "i",
          "\u1e2f": "i",
          "\u1ec9": "i",
          "\u01d0": "i",
          "\u0209": "i",
          "\u020b": "i",
          "\u1ecb": "i",
          "\u012f": "i",
          "\u1e2d": "i",
          "\u0268": "i",
          "\u0131": "i",
          "\u24d9": "j",
          "\uff4a": "j",
          "\u0135": "j",
          "\u01f0": "j",
          "\u0249": "j",
          "\u24da": "k",
          "\uff4b": "k",
          "\u1e31": "k",
          "\u01e9": "k",
          "\u1e33": "k",
          "\u0137": "k",
          "\u1e35": "k",
          "\u0199": "k",
          "\u2c6a": "k",
          "\ua741": "k",
          "\ua743": "k",
          "\ua745": "k",
          "\ua7a3": "k",
          "\u24db": "l",
          "\uff4c": "l",
          "\u0140": "l",
          "\u013a": "l",
          "\u013e": "l",
          "\u1e37": "l",
          "\u1e39": "l",
          "\u013c": "l",
          "\u1e3d": "l",
          "\u1e3b": "l",
          "\u017f": "l",
          "\u0142": "l",
          "\u019a": "l",
          "\u026b": "l",
          "\u2c61": "l",
          "\ua749": "l",
          "\ua781": "l",
          "\ua747": "l",
          "\u01c9": "lj",
          "\u24dc": "m",
          "\uff4d": "m",
          "\u1e3f": "m",
          "\u1e41": "m",
          "\u1e43": "m",
          "\u0271": "m",
          "\u026f": "m",
          "\u24dd": "n",
          "\uff4e": "n",
          "\u01f9": "n",
          "\u0144": "n",
          "\u00f1": "n",
          "\u1e45": "n",
          "\u0148": "n",
          "\u1e47": "n",
          "\u0146": "n",
          "\u1e4b": "n",
          "\u1e49": "n",
          "\u019e": "n",
          "\u0272": "n",
          "\u0149": "n",
          "\ua791": "n",
          "\ua7a5": "n",
          "\u01cc": "nj",
          "\u24de": "o",
          "\uff4f": "o",
          "\u00f2": "o",
          "\u00f3": "o",
          "\u00f4": "o",
          "\u1ed3": "o",
          "\u1ed1": "o",
          "\u1ed7": "o",
          "\u1ed5": "o",
          "\u00f5": "o",
          "\u1e4d": "o",
          "\u022d": "o",
          "\u1e4f": "o",
          "\u014d": "o",
          "\u1e51": "o",
          "\u1e53": "o",
          "\u014f": "o",
          "\u022f": "o",
          "\u0231": "o",
          "\u00f6": "o",
          "\u022b": "o",
          "\u1ecf": "o",
          "\u0151": "o",
          "\u01d2": "o",
          "\u020d": "o",
          "\u020f": "o",
          "\u01a1": "o",
          "\u1edd": "o",
          "\u1edb": "o",
          "\u1ee1": "o",
          "\u1edf": "o",
          "\u1ee3": "o",
          "\u1ecd": "o",
          "\u1ed9": "o",
          "\u01eb": "o",
          "\u01ed": "o",
          "\u00f8": "o",
          "\u01ff": "o",
          "\u0254": "o",
          "\ua74b": "o",
          "\ua74d": "o",
          "\u0275": "o",
          "\u0153": "oe",
          "\u01a3": "oi",
          "\u0223": "ou",
          "\ua74f": "oo",
          "\u24df": "p",
          "\uff50": "p",
          "\u1e55": "p",
          "\u1e57": "p",
          "\u01a5": "p",
          "\u1d7d": "p",
          "\ua751": "p",
          "\ua753": "p",
          "\ua755": "p",
          "\u24e0": "q",
          "\uff51": "q",
          "\u024b": "q",
          "\ua757": "q",
          "\ua759": "q",
          "\u24e1": "r",
          "\uff52": "r",
          "\u0155": "r",
          "\u1e59": "r",
          "\u0159": "r",
          "\u0211": "r",
          "\u0213": "r",
          "\u1e5b": "r",
          "\u1e5d": "r",
          "\u0157": "r",
          "\u1e5f": "r",
          "\u024d": "r",
          "\u027d": "r",
          "\ua75b": "r",
          "\ua7a7": "r",
          "\ua783": "r",
          "\u24e2": "s",
          "\uff53": "s",
          "\u00df": "s",
          "\u015b": "s",
          "\u1e65": "s",
          "\u015d": "s",
          "\u1e61": "s",
          "\u0161": "s",
          "\u1e67": "s",
          "\u1e63": "s",
          "\u1e69": "s",
          "\u0219": "s",
          "\u015f": "s",
          "\u023f": "s",
          "\ua7a9": "s",
          "\ua785": "s",
          "\u1e9b": "s",
          "\u24e3": "t",
          "\uff54": "t",
          "\u1e6b": "t",
          "\u1e97": "t",
          "\u0165": "t",
          "\u1e6d": "t",
          "\u021b": "t",
          "\u0163": "t",
          "\u1e71": "t",
          "\u1e6f": "t",
          "\u0167": "t",
          "\u01ad": "t",
          "\u0288": "t",
          "\u2c66": "t",
          "\ua787": "t",
          "\ua729": "tz",
          "\u24e4": "u",
          "\uff55": "u",
          "\u00f9": "u",
          "\u00fa": "u",
          "\u00fb": "u",
          "\u0169": "u",
          "\u1e79": "u",
          "\u016b": "u",
          "\u1e7b": "u",
          "\u016d": "u",
          "\u00fc": "u",
          "\u01dc": "u",
          "\u01d8": "u",
          "\u01d6": "u",
          "\u01da": "u",
          "\u1ee7": "u",
          "\u016f": "u",
          "\u0171": "u",
          "\u01d4": "u",
          "\u0215": "u",
          "\u0217": "u",
          "\u01b0": "u",
          "\u1eeb": "u",
          "\u1ee9": "u",
          "\u1eef": "u",
          "\u1eed": "u",
          "\u1ef1": "u",
          "\u1ee5": "u",
          "\u1e73": "u",
          "\u0173": "u",
          "\u1e77": "u",
          "\u1e75": "u",
          "\u0289": "u",
          "\u24e5": "v",
          "\uff56": "v",
          "\u1e7d": "v",
          "\u1e7f": "v",
          "\u028b": "v",
          "\ua75f": "v",
          "\u028c": "v",
          "\ua761": "vy",
          "\u24e6": "w",
          "\uff57": "w",
          "\u1e81": "w",
          "\u1e83": "w",
          "\u0175": "w",
          "\u1e87": "w",
          "\u1e85": "w",
          "\u1e98": "w",
          "\u1e89": "w",
          "\u2c73": "w",
          "\u24e7": "x",
          "\uff58": "x",
          "\u1e8b": "x",
          "\u1e8d": "x",
          "\u24e8": "y",
          "\uff59": "y",
          "\u1ef3": "y",
          "\u00fd": "y",
          "\u0177": "y",
          "\u1ef9": "y",
          "\u0233": "y",
          "\u1e8f": "y",
          "\u00ff": "y",
          "\u1ef7": "y",
          "\u1e99": "y",
          "\u1ef5": "y",
          "\u01b4": "y",
          "\u024f": "y",
          "\u1eff": "y",
          "\u24e9": "z",
          "\uff5a": "z",
          "\u017a": "z",
          "\u1e91": "z",
          "\u017c": "z",
          "\u017e": "z",
          "\u1e93": "z",
          "\u1e95": "z",
          "\u01b6": "z",
          "\u0225": "z",
          "\u0240": "z",
          "\u2c6c": "z",
          "\ua763": "z",
          "\u0386": "\u0391",
          "\u0388": "\u0395",
          "\u0389": "\u0397",
          "\u038a": "\u0399",
          "\u03aa": "\u0399",
          "\u038c": "\u039f",
          "\u038e": "\u03a5",
          "\u03ab": "\u03a5",
          "\u038f": "\u03a9",
          "\u03ac": "\u03b1",
          "\u03ad": "\u03b5",
          "\u03ae": "\u03b7",
          "\u03af": "\u03b9",
          "\u03ca": "\u03b9",
          "\u0390": "\u03b9",
          "\u03cc": "\u03bf",
          "\u03cd": "\u03c5",
          "\u03cb": "\u03c5",
          "\u03b0": "\u03c5",
          "\u03ce": "\u03c9",
          "\u03c2": "\u03c3",
          "\u2019": "'",
        };
      });
      n.define("select2/data/base", ["../utils"], function (h) {
        function l(f, d) {
          l.__super__.constructor.call(this);
        }
        h.Extend(l, h.Observable);
        l.prototype.current = function (f) {
          throw Error("The `current` method must be defined in child classes.");
        };
        l.prototype.query = function (f, d) {
          throw Error("The `query` method must be defined in child classes.");
        };
        l.prototype.bind = function (f, d) {};
        l.prototype.destroy = function () {};
        l.prototype.generateResultId = function (f, d) {
          f = f.id + "-result-";
          f += h.generateChars(4);
          return (f =
            null != d.id
              ? f + ("-" + d.id.toString())
              : f + ("-" + h.generateChars(4)));
        };
        return l;
      });
      n.define(
        "select2/data/select",
        ["./base", "../utils", "jquery"],
        function (h, l, f) {
          function d(a, c) {
            this.$element = a;
            this.options = c;
            d.__super__.constructor.call(this);
          }
          l.Extend(d, h);
          d.prototype.current = function (a) {
            var c = [],
              d = this;
            this.$element.find(":selected").each(function () {
              var a = f(this);
              a = d.item(a);
              c.push(a);
            });
            a(c);
          };
          d.prototype.select = function (a) {
            var c = this;
            a.selected = !0;
            f(a.element).is("option")
              ? ((a.element.selected = !0),
                this.$element.trigger("input").trigger("change"))
              : this.$element.prop("multiple")
              ? this.current(function (d) {
                  var e = [];
                  a = [a];
                  a.push.apply(a, d);
                  for (d = 0; d < a.length; d++) {
                    var h = a[d].id;
                    -1 === f.inArray(h, e) && e.push(h);
                  }
                  c.$element.val(e);
                  c.$element.trigger("input").trigger("change");
                })
              : (this.$element.val(a.id),
                this.$element.trigger("input").trigger("change"));
          };
          d.prototype.unselect = function (a) {
            var c = this;
            this.$element.prop("multiple") &&
              ((a.selected = !1),
              f(a.element).is("option")
                ? ((a.element.selected = !1),
                  this.$element.trigger("input").trigger("change"))
                : this.current(function (d) {
                    for (var e = [], h = 0; h < d.length; h++) {
                      var l = d[h].id;
                      l !== a.id && -1 === f.inArray(l, e) && e.push(l);
                    }
                    c.$element.val(e);
                    c.$element.trigger("input").trigger("change");
                  }));
          };
          d.prototype.bind = function (a, c) {
            var d = this;
            this.container = a;
            a.on("select", function (a) {
              d.select(a.data);
            });
            a.on("unselect", function (a) {
              d.unselect(a.data);
            });
          };
          d.prototype.destroy = function () {
            this.$element.find("*").each(function () {
              l.RemoveData(this);
            });
          };
          d.prototype.query = function (a, c) {
            var d = [],
              k = this;
            this.$element.children().each(function () {
              var c = f(this);
              if (c.is("option") || c.is("optgroup"))
                (c = k.item(c)), (c = k.matches(a, c)), null !== c && d.push(c);
            });
            c({ results: d });
          };
          d.prototype.addOptions = function (a) {
            l.appendMany(this.$element, a);
          };
          d.prototype.option = function (a) {
            if (a.children) {
              var c = document.createElement("optgroup");
              c.label = a.text;
            } else
              (c = document.createElement("option")),
                void 0 !== c.textContent
                  ? (c.textContent = a.text)
                  : (c.innerText = a.text);
            void 0 !== a.id && (c.value = a.id);
            a.disabled && (c.disabled = !0);
            a.selected && (c.selected = !0);
            a.title && (c.title = a.title);
            var d = f(c);
            a = this._normalizeItem(a);
            a.element = c;
            l.StoreData(c, "data", a);
            return d;
          };
          d.prototype.item = function (a) {
            var c = l.GetData(a[0], "data");
            if (null != c) return c;
            if (a.is("option"))
              c = {
                id: a.val(),
                text: a.text(),
                disabled: a.prop("disabled"),
                selected: a.prop("selected"),
                title: a.prop("title"),
              };
            else if (a.is("optgroup")) {
              c = {
                text: a.prop("label"),
                children: [],
                title: a.prop("title"),
              };
              for (
                var d = a.children("option"), k = [], h = 0;
                h < d.length;
                h++
              ) {
                var n = f(d[h]);
                n = this.item(n);
                k.push(n);
              }
              c.children = k;
            }
            c = this._normalizeItem(c);
            c.element = a[0];
            l.StoreData(a[0], "data", c);
            return c;
          };
          d.prototype._normalizeItem = function (a) {
            a !== Object(a) && (a = { id: a, text: a });
            a = f.extend({}, { text: "" }, a);
            null != a.id && (a.id = a.id.toString());
            null != a.text && (a.text = a.text.toString());
            null == a._resultId &&
              a.id &&
              null != this.container &&
              (a._resultId = this.generateResultId(this.container, a));
            return f.extend({}, { selected: !1, disabled: !1 }, a);
          };
          d.prototype.matches = function (a, c) {
            return this.options.get("matcher")(a, c);
          };
          return d;
        }
      );
      n.define(
        "select2/data/array",
        ["./select", "../utils", "jquery"],
        function (h, l, f) {
          function d(a, c) {
            this._dataToConvert = c.get("data") || [];
            d.__super__.constructor.call(this, a, c);
          }
          l.Extend(d, h);
          d.prototype.bind = function (a, c) {
            d.__super__.bind.call(this, a, c);
            this.addOptions(this.convertToOptions(this._dataToConvert));
          };
          d.prototype.select = function (a) {
            var c = this.$element.find("option").filter(function (c, d) {
              return d.value == a.id.toString();
            });
            0 === c.length && ((c = this.option(a)), this.addOptions(c));
            d.__super__.select.call(this, a);
          };
          d.prototype.convertToOptions = function (a) {
            function c(a) {
              return function () {
                return f(this).val() == a.id;
              };
            }
            for (
              var d = this,
                k = this.$element.find("option"),
                h = k
                  .map(function () {
                    return d.item(f(this)).id;
                  })
                  .get(),
                n = [],
                q = 0;
              q < a.length;
              q++
            ) {
              var p = this._normalizeItem(a[q]);
              if (0 <= f.inArray(p.id, h)) {
                var x = k.filter(c(p)),
                  m = this.item(x);
                p = f.extend(!0, {}, p, m);
                p = this.option(p);
                x.replaceWith(p);
              } else
                (x = this.option(p)),
                  p.children &&
                    ((p = this.convertToOptions(p.children)),
                    l.appendMany(x, p)),
                  n.push(x);
            }
            return n;
          };
          return d;
        }
      );
      n.define(
        "select2/data/ajax",
        ["./array", "../utils", "jquery"],
        function (h, l, f) {
          function d(a, c) {
            this.ajaxOptions = this._applyDefaults(c.get("ajax"));
            null != this.ajaxOptions.processResults &&
              (this.processResults = this.ajaxOptions.processResults);
            d.__super__.constructor.call(this, a, c);
          }
          l.Extend(d, h);
          d.prototype._applyDefaults = function (a) {
            return f.extend(
              {},
              {
                data: function (a) {
                  return f.extend({}, a, { q: a.term });
                },
                transport: function (a, d, k) {
                  a = f.ajax(a);
                  a.then(d);
                  a.fail(k);
                  return a;
                },
              },
              a,
              !0
            );
          };
          d.prototype.processResults = function (a) {
            return a;
          };
          d.prototype.query = function (a, c) {
            function d() {
              var d = h.transport(
                h,
                function (d) {
                  d = k.processResults(d, a);
                  k.options.get("debug") &&
                    window.console &&
                    console.error &&
                    ((d && d.results && f.isArray(d.results)) ||
                      console.error(
                        "Select2: The AJAX results did not return an array in the `results` key of the response."
                      ));
                  c(d);
                },
                function () {
                  ("status" in d && (0 === d.status || "0" === d.status)) ||
                    k.trigger("results:message", { message: "errorLoading" });
                }
              );
              k._request = d;
            }
            var k = this;
            null != this._request &&
              (f.isFunction(this._request.abort) && this._request.abort(),
              (this._request = null));
            var h = f.extend({ type: "GET" }, this.ajaxOptions);
            "function" === typeof h.url &&
              (h.url = h.url.call(this.$element, a));
            "function" === typeof h.data &&
              (h.data = h.data.call(this.$element, a));
            this.ajaxOptions.delay && null != a.term
              ? (this._queryTimeout && window.clearTimeout(this._queryTimeout),
                (this._queryTimeout = window.setTimeout(
                  d,
                  this.ajaxOptions.delay
                )))
              : d();
          };
          return d;
        }
      );
      n.define("select2/data/tags", ["jquery"], function (h) {
        function l(f, d, a) {
          var c = a.get("tags"),
            e = a.get("createTag");
          void 0 !== e && (this.createTag = e);
          e = a.get("insertTag");
          void 0 !== e && (this.insertTag = e);
          f.call(this, d, a);
          if (h.isArray(c))
            for (f = 0; f < c.length; f++)
              (d = this._normalizeItem(c[f])),
                (d = this.option(d)),
                this.$element.append(d);
        }
        l.prototype.query = function (f, d, a) {
          function c(f, h) {
            for (var k = f.results, l = 0; l < k.length; l++) {
              var p = k[l],
                x = null != p.children && !c({ results: p.children }, !0);
              p = (p.text || "").toUpperCase();
              var n = (d.term || "").toUpperCase();
              if (p === n || x) {
                if (h) return !1;
                f.data = k;
                a(f);
                return;
              }
            }
            if (h) return !0;
            h = e.createTag(d);
            null != h &&
              ((l = e.option(h)),
              l.attr("data-select2-tag", !0),
              e.addOptions([l]),
              e.insertTag(k, h));
            f.results = k;
            a(f);
          }
          var e = this;
          this._removeOldTags();
          null == d.term || null != d.page
            ? f.call(this, d, a)
            : f.call(this, d, c);
        };
        l.prototype.createTag = function (f, d) {
          f = h.trim(d.term);
          return "" === f ? null : { id: f, text: f };
        };
        l.prototype.insertTag = function (f, d, a) {
          d.unshift(a);
        };
        l.prototype._removeOldTags = function (f) {
          this.$element.find("option[data-select2-tag]").each(function () {
            this.selected || h(this).remove();
          });
        };
        return l;
      });
      n.define("select2/data/tokenizer", ["jquery"], function (h) {
        function l(f, d, a) {
          var c = a.get("tokenizer");
          void 0 !== c && (this.tokenizer = c);
          f.call(this, d, a);
        }
        l.prototype.bind = function (f, d, a) {
          f.call(this, d, a);
          this.$search =
            d.dropdown.$search ||
            d.selection.$search ||
            a.find(".select2-search__field");
        };
        l.prototype.query = function (f, d, a) {
          var c = this;
          d.term = d.term || "";
          var e = this.tokenizer(d, this.options, function (a) {
            var d = c._normalizeItem(a);
            c.$element.find("option").filter(function () {
              return h(this).val() === d.id;
            }).length ||
              ((a = c.option(d)),
              a.attr("data-select2-tag", !0),
              c._removeOldTags(),
              c.addOptions([a]));
            c.trigger("select", { data: d });
          });
          e.term !== d.term &&
            (this.$search.length &&
              (this.$search.val(e.term), this.$search.trigger("focus")),
            (d.term = e.term));
          f.call(this, d, a);
        };
        l.prototype.tokenizer = function (f, d, a, c) {
          f = a.get("tokenSeparators") || [];
          a = d.term;
          for (
            var e = 0,
              k =
                this.createTag ||
                function (a) {
                  return { id: a.term, text: a.term };
                };
            e < a.length;

          )
            if (-1 === h.inArray(a[e], f)) e++;
            else {
              var l = a.substr(0, e);
              l = h.extend({}, d, { term: l });
              l = k(l);
              null == l ? e++ : (c(l), (a = a.substr(e + 1) || ""), (e = 0));
            }
          return { term: a };
        };
        return l;
      });
      n.define("select2/data/minimumInputLength", [], function () {
        function h(h, f, d) {
          this.minimumInputLength = d.get("minimumInputLength");
          h.call(this, f, d);
        }
        h.prototype.query = function (h, f, d) {
          f.term = f.term || "";
          f.term.length < this.minimumInputLength
            ? this.trigger("results:message", {
                message: "inputTooShort",
                args: {
                  minimum: this.minimumInputLength,
                  input: f.term,
                  params: f,
                },
              })
            : h.call(this, f, d);
        };
        return h;
      });
      n.define("select2/data/maximumInputLength", [], function () {
        function h(h, f, d) {
          this.maximumInputLength = d.get("maximumInputLength");
          h.call(this, f, d);
        }
        h.prototype.query = function (h, f, d) {
          f.term = f.term || "";
          0 < this.maximumInputLength && f.term.length > this.maximumInputLength
            ? this.trigger("results:message", {
                message: "inputTooLong",
                args: {
                  maximum: this.maximumInputLength,
                  input: f.term,
                  params: f,
                },
              })
            : h.call(this, f, d);
        };
        return h;
      });
      n.define("select2/data/maximumSelectionLength", [], function () {
        function h(h, f, d) {
          this.maximumSelectionLength = d.get("maximumSelectionLength");
          h.call(this, f, d);
        }
        h.prototype.bind = function (h, f, d) {
          var a = this;
          h.call(this, f, d);
          f.on("select", function () {
            a._checkIfMaximumSelected();
          });
        };
        h.prototype.query = function (h, f, d) {
          var a = this;
          this._checkIfMaximumSelected(function () {
            h.call(a, f, d);
          });
        };
        h.prototype._checkIfMaximumSelected = function (h, f) {
          var d = this;
          this.current(function (a) {
            a = null != a ? a.length : 0;
            0 < d.maximumSelectionLength && a >= d.maximumSelectionLength
              ? d.trigger("results:message", {
                  message: "maximumSelected",
                  args: { maximum: d.maximumSelectionLength },
                })
              : f && f();
          });
        };
        return h;
      });
      n.define("select2/dropdown", ["jquery", "./utils"], function (h, l) {
        function f(d, a) {
          this.$element = d;
          this.options = a;
          f.__super__.constructor.call(this);
        }
        l.Extend(f, l.Observable);
        f.prototype.render = function () {
          var d = h(
            '<span class="select2-dropdown"><span class="select2-results"></span></span>'
          );
          d.attr("dir", this.options.get("dir"));
          return (this.$dropdown = d);
        };
        f.prototype.bind = function () {};
        f.prototype.position = function (d, a) {};
        f.prototype.destroy = function () {
          this.$dropdown.remove();
        };
        return f;
      });
      n.define(
        "select2/dropdown/search",
        ["jquery", "../utils"],
        function (h, l) {
          function f() {}
          f.prototype.render = function (d) {
            d = d.call(this);
            var a = h(
              '<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="searchbox" aria-autocomplete="list" /></span>'
            );
            this.$searchContainer = a;
            this.$search = a.find("input");
            d.prepend(a);
            return d;
          };
          f.prototype.bind = function (d, a, c) {
            var e = this,
              f = a.id + "-results";
            d.call(this, a, c);
            this.$search.on("keydown", function (a) {
              e.trigger("keypress", a);
              e._keyUpPrevented = a.isDefaultPrevented();
            });
            this.$search.on("input", function (a) {
              h(this).off("keyup");
            });
            this.$search.on("keyup input", function (a) {
              e.handleSearch(a);
            });
            a.on("open", function () {
              e.$search.attr("tabindex", 0);
              e.$search.attr("aria-controls", f);
              e.$search.trigger("focus");
              window.setTimeout(function () {
                e.$search.trigger("focus");
              }, 0);
            });
            a.on("close", function () {
              e.$search.attr("tabindex", -1);
              e.$search.removeAttr("aria-controls");
              e.$search.removeAttr("aria-activedescendant");
              e.$search.val("");
              e.$search.trigger("blur");
            });
            a.on("focus", function () {
              a.isOpen() || e.$search.trigger("focus");
            });
            a.on("results:all", function (a) {
              if (null == a.query.term || "" === a.query.term)
                e.showSearch(a)
                  ? e.$searchContainer.removeClass("select2-search--hide")
                  : e.$searchContainer.addClass("select2-search--hide");
            });
            a.on("results:focus", function (a) {
              a.data._resultId
                ? e.$search.attr("aria-activedescendant", a.data._resultId)
                : e.$search.removeAttr("aria-activedescendant");
            });
          };
          f.prototype.handleSearch = function (d) {
            this._keyUpPrevented ||
              ((d = this.$search.val()), this.trigger("query", { term: d }));
            this._keyUpPrevented = !1;
          };
          f.prototype.showSearch = function (d, a) {
            return !0;
          };
          return f;
        }
      );
      n.define("select2/dropdown/hidePlaceholder", [], function () {
        function h(h, f, d, a) {
          this.placeholder = this.normalizePlaceholder(d.get("placeholder"));
          h.call(this, f, d, a);
        }
        h.prototype.append = function (h, f) {
          f.results = this.removePlaceholder(f.results);
          h.call(this, f);
        };
        h.prototype.normalizePlaceholder = function (h, f) {
          "string" === typeof f && (f = { id: "", text: f });
          return f;
        };
        h.prototype.removePlaceholder = function (h, f) {
          h = f.slice(0);
          for (var d = f.length - 1; 0 <= d; d--)
            this.placeholder.id === f[d].id && h.splice(d, 1);
          return h;
        };
        return h;
      });
      n.define("select2/dropdown/infiniteScroll", ["jquery"], function (h) {
        function l(f, d, a, c) {
          this.lastParams = {};
          f.call(this, d, a, c);
          this.$loadingMore = this.createLoadingMore();
          this.loading = !1;
        }
        l.prototype.append = function (f, d) {
          this.$loadingMore.remove();
          this.loading = !1;
          f.call(this, d);
          this.showLoadingMore(d) &&
            (this.$results.append(this.$loadingMore), this.loadMoreIfNeeded());
        };
        l.prototype.bind = function (f, d, a) {
          var c = this;
          f.call(this, d, a);
          d.on("query", function (a) {
            c.lastParams = a;
            c.loading = !0;
          });
          d.on("query:append", function (a) {
            c.lastParams = a;
            c.loading = !0;
          });
          this.$results.on("scroll", this.loadMoreIfNeeded.bind(this));
        };
        l.prototype.loadMoreIfNeeded = function () {
          var f = h.contains(document.documentElement, this.$loadingMore[0]);
          if (!this.loading && f) {
            f = this.$results.offset().top + this.$results.outerHeight(!1);
            var d =
              this.$loadingMore.offset().top +
              this.$loadingMore.outerHeight(!1);
            f + 50 >= d && this.loadMore();
          }
        };
        l.prototype.loadMore = function () {
          this.loading = !0;
          var f = h.extend({}, { page: 1 }, this.lastParams);
          f.page++;
          this.trigger("query:append", f);
        };
        l.prototype.showLoadingMore = function (f, d) {
          return d.pagination && d.pagination.more;
        };
        l.prototype.createLoadingMore = function () {
          var f = h(
              '<li class="select2-results__option select2-results__option--load-more"role="option" aria-disabled="true"></li>'
            ),
            d = this.options.get("translations").get("loadingMore");
          f.html(d(this.lastParams));
          return f;
        };
        return l;
      });
      n.define(
        "select2/dropdown/attachBody",
        ["jquery", "../utils"],
        function (h, l) {
          function f(d, a, c) {
            this.$dropdownParent = h(c.get("dropdownParent") || document.body);
            d.call(this, a, c);
          }
          f.prototype.bind = function (d, a, c) {
            var e = this;
            d.call(this, a, c);
            a.on("open", function () {
              e._showDropdown();
              e._attachPositioningHandler(a);
              e._bindContainerResultHandlers(a);
            });
            a.on("close", function () {
              e._hideDropdown();
              e._detachPositioningHandler(a);
            });
            this.$dropdownContainer.on("mousedown", function (a) {
              a.stopPropagation();
            });
          };
          f.prototype.destroy = function (d) {
            d.call(this);
            this.$dropdownContainer.remove();
          };
          f.prototype.position = function (d, a, c) {
            a.attr("class", c.attr("class"));
            a.removeClass("select2");
            a.addClass("select2-container--open");
            a.css({ position: "absolute", top: -999999 });
            this.$container = c;
          };
          f.prototype.render = function (d) {
            var a = h("<span></span>");
            d = d.call(this);
            a.append(d);
            return (this.$dropdownContainer = a);
          };
          f.prototype._hideDropdown = function (d) {
            this.$dropdownContainer.detach();
          };
          f.prototype._bindContainerResultHandlers = function (d, a) {
            if (!this._containerResultsHandlersBound) {
              var c = this;
              a.on("results:all", function () {
                c._positionDropdown();
                c._resizeDropdown();
              });
              a.on("results:append", function () {
                c._positionDropdown();
                c._resizeDropdown();
              });
              a.on("results:message", function () {
                c._positionDropdown();
                c._resizeDropdown();
              });
              a.on("select", function () {
                c._positionDropdown();
                c._resizeDropdown();
              });
              a.on("unselect", function () {
                c._positionDropdown();
                c._resizeDropdown();
              });
              this._containerResultsHandlersBound = !0;
            }
          };
          f.prototype._attachPositioningHandler = function (d, a) {
            var c = this;
            d = "scroll.select2." + a.id;
            var e = "resize.select2." + a.id;
            a = "orientationchange.select2." + a.id;
            var f = this.$container.parents().filter(l.hasScroll);
            f.each(function () {
              l.StoreData(this, "select2-scroll-position", {
                x: h(this).scrollLeft(),
                y: h(this).scrollTop(),
              });
            });
            f.on(d, function (a) {
              a = l.GetData(this, "select2-scroll-position");
              h(this).scrollTop(a.y);
            });
            h(window).on(d + " " + e + " " + a, function (a) {
              c._positionDropdown();
              c._resizeDropdown();
            });
          };
          f.prototype._detachPositioningHandler = function (d, a) {
            d = "scroll.select2." + a.id;
            var c = "resize.select2." + a.id;
            a = "orientationchange.select2." + a.id;
            this.$container.parents().filter(l.hasScroll).off(d);
            h(window).off(d + " " + c + " " + a);
          };
          f.prototype._positionDropdown = function () {
            var d = h(window),
              a = this.$dropdown.hasClass("select2-dropdown--above"),
              c = this.$dropdown.hasClass("select2-dropdown--below"),
              e = null,
              f = this.$container.offset();
            f.bottom = f.top + this.$container.outerHeight(!1);
            var l = this.$container.outerHeight(!1);
            var n = f.top;
            var m = f.top + l;
            l = this.$dropdown.outerHeight(!1);
            var p = d.scrollTop(),
              x = d.scrollTop() + d.height();
            d = p < f.top - l;
            p = x > f.bottom + l;
            f = { left: f.left, top: m };
            m = this.$dropdownParent;
            "static" === m.css("position") && (m = m.offsetParent());
            x = { top: 0, left: 0 };
            if (h.contains(document.body, m[0]) || m[0].isConnected)
              x = m.offset();
            f.top -= x.top;
            f.left -= x.left;
            a || c || (e = "below");
            p || !d || a ? !d && p && a && (e = "below") : (e = "above");
            if ("above" == e || (a && "below" !== e)) f.top = n - x.top - l;
            null != e &&
              (this.$dropdown
                .removeClass("select2-dropdown--below select2-dropdown--above")
                .addClass("select2-dropdown--" + e),
              this.$container
                .removeClass(
                  "select2-container--below select2-container--above"
                )
                .addClass("select2-container--" + e));
            this.$dropdownContainer.css(f);
          };
          f.prototype._resizeDropdown = function () {
            var d = { width: this.$container.outerWidth(!1) + "px" };
            this.options.get("dropdownAutoWidth") &&
              ((d.minWidth = d.width),
              (d.position = "relative"),
              (d.width = "auto"));
            this.$dropdown.css(d);
          };
          f.prototype._showDropdown = function (d) {
            this.$dropdownContainer.appendTo(this.$dropdownParent);
            this._positionDropdown();
            this._resizeDropdown();
          };
          return f;
        }
      );
      n.define("select2/dropdown/minimumResultsForSearch", [], function () {
        function h(f) {
          for (var d = 0, a = 0; a < f.length; a++) {
            var c = f[a];
            c.children ? (d += h(c.children)) : d++;
          }
          return d;
        }
        function l(f, d, a, c) {
          this.minimumResultsForSearch = a.get("minimumResultsForSearch");
          0 > this.minimumResultsForSearch &&
            (this.minimumResultsForSearch = Infinity);
          f.call(this, d, a, c);
        }
        l.prototype.showSearch = function (f, d) {
          return h(d.data.results) < this.minimumResultsForSearch
            ? !1
            : f.call(this, d);
        };
        return l;
      });
      n.define("select2/dropdown/selectOnClose", ["../utils"], function (h) {
        function l() {}
        l.prototype.bind = function (f, d, a) {
          var c = this;
          f.call(this, d, a);
          d.on("close", function (a) {
            c._handleSelectOnClose(a);
          });
        };
        l.prototype._handleSelectOnClose = function (f, d) {
          if (
            d &&
            null != d.originalSelect2Event &&
            ((f = d.originalSelect2Event),
            "select" === f._type || "unselect" === f._type)
          )
            return;
          f = this.getHighlightedResults();
          1 > f.length ||
            ((f = h.GetData(f[0], "data")),
            (null != f.element && f.element.selected) ||
              (null == f.element && f.selected) ||
              this.trigger("select", { data: f }));
        };
        return l;
      });
      n.define("select2/dropdown/closeOnSelect", [], function () {
        function h() {}
        h.prototype.bind = function (h, f, d) {
          var a = this;
          h.call(this, f, d);
          f.on("select", function (c) {
            a._selectTriggered(c);
          });
          f.on("unselect", function (c) {
            a._selectTriggered(c);
          });
        };
        h.prototype._selectTriggered = function (h, f) {
          ((h = f.originalEvent) && (h.ctrlKey || h.metaKey)) ||
            this.trigger("close", {
              originalEvent: h,
              originalSelect2Event: f,
            });
        };
        return h;
      });
      n.define("select2/i18n/en", [], function () {
        return {
          errorLoading: function () {
            return "The results could not be loaded.";
          },
          inputTooLong: function (h) {
            h = h.input.length - h.maximum;
            var l = "Please delete " + h + " character";
            1 != h && (l += "s");
            return l;
          },
          inputTooShort: function (h) {
            return (
              "Please enter " +
              (h.minimum - h.input.length) +
              " or more characters"
            );
          },
          loadingMore: function () {
            return "Loading more results\u2026";
          },
          maximumSelected: function (h) {
            var l = "You can only select " + h.maximum + " item";
            1 != h.maximum && (l += "s");
            return l;
          },
          noResults: function () {
            return "No results found";
          },
          searching: function () {
            return "Searching\u2026";
          },
          removeAllItems: function () {
            return "Remove all items";
          },
        };
      });
      n.define(
        "select2/defaults",
        "jquery require ./results ./selection/single ./selection/multiple ./selection/placeholder ./selection/allowClear ./selection/search ./selection/eventRelay ./utils ./translation ./diacritics ./data/select ./data/array ./data/ajax ./data/tags ./data/tokenizer ./data/minimumInputLength ./data/maximumInputLength ./data/maximumSelectionLength ./dropdown ./dropdown/search ./dropdown/hidePlaceholder ./dropdown/infiniteScroll ./dropdown/attachBody ./dropdown/minimumResultsForSearch ./dropdown/selectOnClose ./dropdown/closeOnSelect ./i18n/en".split(
          " "
        ),
        function (
          h,
          l,
          f,
          d,
          a,
          c,
          e,
          k,
          n,
          m,
          q,
          p,
          x,
          y,
          t,
          u,
          B,
          G,
          A,
          z,
          C,
          D,
          H,
          J,
          M,
          I,
          O,
          P,
          K
        ) {
          function v() {
            this.reset();
          }
          v.prototype.apply = function (p) {
            p = h.extend(!0, {}, this.defaults, p);
            if (null == p.dataAdapter) {
              p.dataAdapter = null != p.ajax ? t : null != p.data ? y : x;
              0 < p.minimumInputLength &&
                (p.dataAdapter = m.Decorate(p.dataAdapter, G));
              0 < p.maximumInputLength &&
                (p.dataAdapter = m.Decorate(p.dataAdapter, A));
              0 < p.maximumSelectionLength &&
                (p.dataAdapter = m.Decorate(p.dataAdapter, z));
              p.tags && (p.dataAdapter = m.Decorate(p.dataAdapter, u));
              if (null != p.tokenSeparators || null != p.tokenizer)
                p.dataAdapter = m.Decorate(p.dataAdapter, B);
              if (null != p.query) {
                var q = l(p.amdBase + "compat/query");
                p.dataAdapter = m.Decorate(p.dataAdapter, q);
              }
              null != p.initSelection &&
                ((q = l(p.amdBase + "compat/initSelection")),
                (p.dataAdapter = m.Decorate(p.dataAdapter, q)));
            }
            null == p.resultsAdapter &&
              ((p.resultsAdapter = f),
              null != p.ajax &&
                (p.resultsAdapter = m.Decorate(p.resultsAdapter, J)),
              null != p.placeholder &&
                (p.resultsAdapter = m.Decorate(p.resultsAdapter, H)),
              p.selectOnClose &&
                (p.resultsAdapter = m.Decorate(p.resultsAdapter, O)));
            if (null == p.dropdownAdapter) {
              p.multiple
                ? (p.dropdownAdapter = C)
                : ((q = m.Decorate(C, D)), (p.dropdownAdapter = q));
              0 !== p.minimumResultsForSearch &&
                (p.dropdownAdapter = m.Decorate(p.dropdownAdapter, I));
              p.closeOnSelect &&
                (p.dropdownAdapter = m.Decorate(p.dropdownAdapter, P));
              if (
                null != p.dropdownCssClass ||
                null != p.dropdownCss ||
                null != p.adaptDropdownCssClass
              )
                (q = l(p.amdBase + "compat/dropdownCss")),
                  (p.dropdownAdapter = m.Decorate(p.dropdownAdapter, q));
              p.dropdownAdapter = m.Decorate(p.dropdownAdapter, M);
            }
            if (null == p.selectionAdapter) {
              p.selectionAdapter = p.multiple ? a : d;
              null != p.placeholder &&
                (p.selectionAdapter = m.Decorate(p.selectionAdapter, c));
              p.allowClear &&
                (p.selectionAdapter = m.Decorate(p.selectionAdapter, e));
              p.multiple &&
                (p.selectionAdapter = m.Decorate(p.selectionAdapter, k));
              if (
                null != p.containerCssClass ||
                null != p.containerCss ||
                null != p.adaptContainerCssClass
              )
                (q = l(p.amdBase + "compat/containerCss")),
                  (p.selectionAdapter = m.Decorate(p.selectionAdapter, q));
              p.selectionAdapter = m.Decorate(p.selectionAdapter, n);
            }
            p.language = this._resolveLanguage(p.language);
            p.language.push("en");
            q = [];
            for (var v = 0; v < p.language.length; v++) {
              var w = p.language[v];
              -1 === q.indexOf(w) && q.push(w);
            }
            p.language = q;
            p.translations = this._processTranslations(p.language, p.debug);
            return p;
          };
          v.prototype.reset = function () {
            function a(a) {
              return a.replace(/[^\u0000-\u007E]/g, function (a) {
                return p[a] || a;
              });
            }
            function c(d, e) {
              if ("" === h.trim(d.term)) return e;
              if (e.children && 0 < e.children.length) {
                for (
                  var f = h.extend(!0, {}, e), k = e.children.length - 1;
                  0 <= k;
                  k--
                )
                  null == c(d, e.children[k]) && f.children.splice(k, 1);
                return 0 < f.children.length ? f : c(d, f);
              }
              f = a(e.text).toUpperCase();
              d = a(d.term).toUpperCase();
              return -1 < f.indexOf(d) ? e : null;
            }
            this.defaults = {
              amdBase: "./",
              amdLanguageBase: "./i18n/",
              closeOnSelect: !0,
              debug: !1,
              dropdownAutoWidth: !1,
              escapeMarkup: m.escapeMarkup,
              language: {},
              matcher: c,
              minimumInputLength: 0,
              maximumInputLength: 0,
              maximumSelectionLength: 0,
              minimumResultsForSearch: 0,
              selectOnClose: !1,
              scrollAfterSelect: !1,
              sorter: function (a) {
                return a;
              },
              templateResult: function (a) {
                return a.text;
              },
              templateSelection: function (a) {
                return a.text;
              },
              theme: "default",
              width: "resolve",
            };
          };
          v.prototype.applyFromElement = function (a, c) {
            var d = a.language,
              e = this.defaults.language,
              f = c.prop("lang");
            c = c.closest("[lang]").prop("lang");
            d = Array.prototype.concat.call(
              this._resolveLanguage(f),
              this._resolveLanguage(d),
              this._resolveLanguage(e),
              this._resolveLanguage(c)
            );
            a.language = d;
            return a;
          };
          v.prototype._resolveLanguage = function (a) {
            if (!a || h.isEmptyObject(a)) return [];
            if (h.isPlainObject(a)) return [a];
            a = h.isArray(a) ? a : [a];
            for (var c = [], d = 0; d < a.length; d++)
              if (
                (c.push(a[d]),
                "string" === typeof a[d] && 0 < a[d].indexOf("-"))
              ) {
                var e = a[d].split("-")[0];
                c.push(e);
              }
            return c;
          };
          v.prototype._processTranslations = function (a, c) {
            for (var d = new q(), e = 0; e < a.length; e++) {
              var f = new q(),
                k = a[e];
              if ("string" === typeof k)
                try {
                  f = q.loadPath(k);
                } catch (R) {
                  try {
                    (k = this.defaults.amdLanguageBase + k),
                      (f = q.loadPath(k));
                  } catch (W) {
                    c &&
                      window.console &&
                      console.warn &&
                      console.warn(
                        'Select2: The language file for "' +
                          k +
                          '" could not be automatically loaded. A fallback will be used instead.'
                      );
                  }
                }
              else f = h.isPlainObject(k) ? new q(k) : k;
              d.extend(f);
            }
            return d;
          };
          v.prototype.set = function (a, c) {
            a = h.camelCase(a);
            var d = {};
            d[a] = c;
            c = m._convertData(d);
            h.extend(!0, this.defaults, c);
          };
          return new v();
        }
      );
      n.define(
        "select2/options",
        ["require", "jquery", "./defaults", "./utils"],
        function (h, l, f, d) {
          function a(a, e) {
            this.options = a;
            null != e && this.fromElement(e);
            null != e && (this.options = f.applyFromElement(this.options, e));
            this.options = f.apply(this.options);
            e &&
              e.is("input") &&
              ((a = h(this.get("amdBase") + "compat/inputData")),
              (this.options.dataAdapter = d.Decorate(
                this.options.dataAdapter,
                a
              )));
          }
          a.prototype.fromElement = function (a) {
            function c(a, c) {
              return c.toUpperCase();
            }
            var f = ["select2"];
            null == this.options.multiple &&
              (this.options.multiple = a.prop("multiple"));
            null == this.options.disabled &&
              (this.options.disabled = a.prop("disabled"));
            null == this.options.dir &&
              (a.prop("dir")
                ? (this.options.dir = a.prop("dir"))
                : a.closest("[dir]").prop("dir")
                ? (this.options.dir = a.closest("[dir]").prop("dir"))
                : (this.options.dir = "ltr"));
            a.prop("disabled", this.options.disabled);
            a.prop("multiple", this.options.multiple);
            d.GetData(a[0], "select2Tags") &&
              (this.options.debug &&
                window.console &&
                console.warn &&
                console.warn(
                  'Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'
                ),
              d.StoreData(a[0], "data", d.GetData(a[0], "select2Tags")),
              d.StoreData(a[0], "tags", !0));
            d.GetData(a[0], "ajaxUrl") &&
              (this.options.debug &&
                window.console &&
                console.warn &&
                console.warn(
                  "Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."
                ),
              a.attr("ajax--url", d.GetData(a[0], "ajaxUrl")),
              d.StoreData(a[0], "ajax-Url", d.GetData(a[0], "ajaxUrl")));
            for (var h = {}, n = 0; n < a[0].attributes.length; n++) {
              var m = a[0].attributes[n].name;
              if ("data-" == m.substr(0, 5)) {
                var p = m.substring(5);
                m = d.GetData(a[0], p);
                p = p.replace(/-([a-z])/g, c);
                h[p] = m;
              }
            }
            l.fn.jquery &&
              "1." == l.fn.jquery.substr(0, 2) &&
              a[0].dataset &&
              (h = l.extend(!0, {}, a[0].dataset, h));
            a = l.extend(!0, {}, d.GetData(a[0]), h);
            a = d._convertData(a);
            for (var x in a)
              -1 < l.inArray(x, f) ||
                (l.isPlainObject(this.options[x])
                  ? l.extend(this.options[x], a[x])
                  : (this.options[x] = a[x]));
            return this;
          };
          a.prototype.get = function (a) {
            return this.options[a];
          };
          a.prototype.set = function (a, d) {
            this.options[a] = d;
          };
          return a;
        }
      );
      n.define(
        "select2/core",
        ["jquery", "./options", "./utils", "./keys"],
        function (h, l, f, d) {
          var a = function (c, d) {
            null != f.GetData(c[0], "select2") &&
              f.GetData(c[0], "select2").destroy();
            this.$element = c;
            this.id = this._generateId(c);
            d = d || {};
            this.options = new l(d, c);
            a.__super__.constructor.call(this);
            d = c.attr("tabindex") || 0;
            f.StoreData(c[0], "old-tabindex", d);
            c.attr("tabindex", "-1");
            this.dataAdapter = new (this.options.get("dataAdapter"))(
              c,
              this.options
            );
            d = this.render();
            this._placeContainer(d);
            this.selection = new (this.options.get("selectionAdapter"))(
              c,
              this.options
            );
            this.$selection = this.selection.render();
            this.selection.position(this.$selection, d);
            this.dropdown = new (this.options.get("dropdownAdapter"))(
              c,
              this.options
            );
            this.$dropdown = this.dropdown.render();
            this.dropdown.position(this.$dropdown, d);
            this.results = new (this.options.get("resultsAdapter"))(
              c,
              this.options,
              this.dataAdapter
            );
            this.$results = this.results.render();
            this.results.position(this.$results, this.$dropdown);
            var e = this;
            this._bindAdapters();
            this._registerDomEvents();
            this._registerDataEvents();
            this._registerSelectionEvents();
            this._registerDropdownEvents();
            this._registerResultsEvents();
            this._registerEvents();
            this.dataAdapter.current(function (a) {
              e.trigger("selection:update", { data: a });
            });
            c.addClass("select2-hidden-accessible");
            c.attr("aria-hidden", "true");
            this._syncAttributes();
            f.StoreData(c[0], "select2", this);
            c.data("select2", this);
          };
          f.Extend(a, f.Observable);
          a.prototype._generateId = function (a) {
            a =
              null != a.attr("id")
                ? a.attr("id")
                : null != a.attr("name")
                ? a.attr("name") + "-" + f.generateChars(2)
                : f.generateChars(4);
            a = a.replace(/(:|\.|\[|\]|,)/g, "");
            return "select2-" + a;
          };
          a.prototype._placeContainer = function (a) {
            a.insertAfter(this.$element);
            var c = this._resolveWidth(
              this.$element,
              this.options.get("width")
            );
            null != c && a.css("width", c);
          };
          a.prototype._resolveWidth = function (a, d) {
            var c =
              /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
            if ("resolve" == d)
              return (
                (c = this._resolveWidth(a, "style")),
                null != c ? c : this._resolveWidth(a, "element")
              );
            if ("element" == d)
              return (c = a.outerWidth(!1)), 0 >= c ? "auto" : c + "px";
            if ("style" == d) {
              a = a.attr("style");
              if ("string" !== typeof a) return null;
              a = a.split(";");
              d = 0;
              for (var e = a.length; d < e; d += 1) {
                var f = a[d].replace(/\s/g, "").match(c);
                if (null !== f && 1 <= f.length) return f[1];
              }
              return null;
            }
            return "computedstyle" == d
              ? window.getComputedStyle(a[0]).width
              : d;
          };
          a.prototype._bindAdapters = function () {
            this.dataAdapter.bind(this, this.$container);
            this.selection.bind(this, this.$container);
            this.dropdown.bind(this, this.$container);
            this.results.bind(this, this.$container);
          };
          a.prototype._registerDomEvents = function () {
            var a = this;
            this.$element.on("change.select2", function () {
              a.dataAdapter.current(function (c) {
                a.trigger("selection:update", { data: c });
              });
            });
            this.$element.on("focus.select2", function (c) {
              a.trigger("focus", c);
            });
            this._syncA = f.bind(this._syncAttributes, this);
            this._syncS = f.bind(this._syncSubtree, this);
            this.$element[0].attachEvent &&
              this.$element[0].attachEvent("onpropertychange", this._syncA);
            var d =
              window.MutationObserver ||
              window.WebKitMutationObserver ||
              window.MozMutationObserver;
            null != d
              ? ((this._observer = new d(function (c) {
                  a._syncA();
                  a._syncS(null, c);
                })),
                this._observer.observe(this.$element[0], {
                  attributes: !0,
                  childList: !0,
                  subtree: !1,
                }))
              : this.$element[0].addEventListener &&
                (this.$element[0].addEventListener(
                  "DOMAttrModified",
                  a._syncA,
                  !1
                ),
                this.$element[0].addEventListener(
                  "DOMNodeInserted",
                  a._syncS,
                  !1
                ),
                this.$element[0].addEventListener(
                  "DOMNodeRemoved",
                  a._syncS,
                  !1
                ));
          };
          a.prototype._registerDataEvents = function () {
            var a = this;
            this.dataAdapter.on("*", function (c, d) {
              a.trigger(c, d);
            });
          };
          a.prototype._registerSelectionEvents = function () {
            var a = this,
              d = ["toggle", "focus"];
            this.selection.on("toggle", function () {
              a.toggleDropdown();
            });
            this.selection.on("focus", function (c) {
              a.focus(c);
            });
            this.selection.on("*", function (c, e) {
              -1 === h.inArray(c, d) && a.trigger(c, e);
            });
          };
          a.prototype._registerDropdownEvents = function () {
            var a = this;
            this.dropdown.on("*", function (c, d) {
              a.trigger(c, d);
            });
          };
          a.prototype._registerResultsEvents = function () {
            var a = this;
            this.results.on("*", function (c, d) {
              a.trigger(c, d);
            });
          };
          a.prototype._registerEvents = function () {
            var a = this;
            this.on("open", function () {
              a.$container.addClass("select2-container--open");
            });
            this.on("close", function () {
              a.$container.removeClass("select2-container--open");
            });
            this.on("enable", function () {
              a.$container.removeClass("select2-container--disabled");
            });
            this.on("disable", function () {
              a.$container.addClass("select2-container--disabled");
            });
            this.on("blur", function () {
              a.$container.removeClass("select2-container--focus");
            });
            this.on("query", function (c) {
              a.isOpen() || a.trigger("open", {});
              this.dataAdapter.query(c, function (d) {
                a.trigger("results:all", { data: d, query: c });
              });
            });
            this.on("query:append", function (c) {
              this.dataAdapter.query(c, function (d) {
                a.trigger("results:append", { data: d, query: c });
              });
            });
            this.on("keypress", function (c) {
              var e = c.which;
              if (a.isOpen())
                e === d.ESC || e === d.TAB || (e === d.UP && c.altKey)
                  ? (a.close(c), c.preventDefault())
                  : e === d.ENTER
                  ? (a.trigger("results:select", {}), c.preventDefault())
                  : e === d.SPACE && c.ctrlKey
                  ? (a.trigger("results:toggle", {}), c.preventDefault())
                  : e === d.UP
                  ? (a.trigger("results:previous", {}), c.preventDefault())
                  : e === d.DOWN &&
                    (a.trigger("results:next", {}), c.preventDefault());
              else if (
                e === d.ENTER ||
                e === d.SPACE ||
                (e === d.DOWN && c.altKey)
              )
                a.open(), c.preventDefault();
            });
          };
          a.prototype._syncAttributes = function () {
            this.options.set("disabled", this.$element.prop("disabled"));
            this.isDisabled()
              ? (this.isOpen() && this.close(), this.trigger("disable", {}))
              : this.trigger("enable", {});
          };
          a.prototype._isChangeMutation = function (a, d) {
            var c = !1,
              e = this;
            if (
              !a ||
              !a.target ||
              "OPTION" === a.target.nodeName ||
              "OPTGROUP" === a.target.nodeName
            ) {
              if (d)
                if (d.addedNodes && 0 < d.addedNodes.length)
                  for (a = 0; a < d.addedNodes.length; a++)
                    d.addedNodes[a].selected && (c = !0);
                else
                  d.removedNodes && 0 < d.removedNodes.length
                    ? (c = !0)
                    : h.isArray(d) &&
                      h.each(d, function (a, d) {
                        if (e._isChangeMutation(a, d)) return (c = !0), !1;
                      });
              else c = !0;
              return c;
            }
          };
          a.prototype._syncSubtree = function (a, d) {
            var c = this;
            this._isChangeMutation(a, d) &&
              this.dataAdapter.current(function (a) {
                c.trigger("selection:update", { data: a });
              });
          };
          a.prototype.trigger = function (c, d) {
            var e = a.__super__.trigger,
              f = {
                open: "opening",
                close: "closing",
                select: "selecting",
                unselect: "unselecting",
                clear: "clearing",
              };
            void 0 === d && (d = {});
            if (c in f) {
              var h = { prevented: !1, name: c, args: d };
              e.call(this, f[c], h);
              if (h.prevented) {
                d.prevented = !0;
                return;
              }
            }
            e.call(this, c, d);
          };
          a.prototype.toggleDropdown = function () {
            this.isDisabled() || (this.isOpen() ? this.close() : this.open());
          };
          a.prototype.open = function () {
            this.isOpen() || this.isDisabled() || this.trigger("query", {});
          };
          a.prototype.close = function (a) {
            this.isOpen() && this.trigger("close", { originalEvent: a });
          };
          a.prototype.isEnabled = function () {
            return !this.isDisabled();
          };
          a.prototype.isDisabled = function () {
            return this.options.get("disabled");
          };
          a.prototype.isOpen = function () {
            return this.$container.hasClass("select2-container--open");
          };
          a.prototype.hasFocus = function () {
            return this.$container.hasClass("select2-container--focus");
          };
          a.prototype.focus = function (a) {
            this.hasFocus() ||
              (this.$container.addClass("select2-container--focus"),
              this.trigger("focus", {}));
          };
          a.prototype.enable = function (a) {
            this.options.get("debug") &&
              window.console &&
              console.warn &&
              console.warn(
                'Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'
              );
            if (null == a || 0 === a.length) a = [!0];
            this.$element.prop("disabled", !a[0]);
          };
          a.prototype.data = function () {
            this.options.get("debug") &&
              0 < arguments.length &&
              window.console &&
              console.warn &&
              console.warn(
                'Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.'
              );
            var a = [];
            this.dataAdapter.current(function (c) {
              a = c;
            });
            return a;
          };
          a.prototype.val = function (a) {
            this.options.get("debug") &&
              window.console &&
              console.warn &&
              console.warn(
                'Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'
              );
            if (null == a || 0 === a.length) return this.$element.val();
            a = a[0];
            h.isArray(a) &&
              (a = h.map(a, function (a) {
                return a.toString();
              }));
            this.$element.val(a).trigger("input").trigger("change");
          };
          a.prototype.destroy = function () {
            this.$container.remove();
            this.$element[0].detachEvent &&
              this.$element[0].detachEvent("onpropertychange", this._syncA);
            null != this._observer
              ? (this._observer.disconnect(), (this._observer = null))
              : this.$element[0].removeEventListener &&
                (this.$element[0].removeEventListener(
                  "DOMAttrModified",
                  this._syncA,
                  !1
                ),
                this.$element[0].removeEventListener(
                  "DOMNodeInserted",
                  this._syncS,
                  !1
                ),
                this.$element[0].removeEventListener(
                  "DOMNodeRemoved",
                  this._syncS,
                  !1
                ));
            this._syncS = this._syncA = null;
            this.$element.off(".select2");
            this.$element.attr(
              "tabindex",
              f.GetData(this.$element[0], "old-tabindex")
            );
            this.$element.removeClass("select2-hidden-accessible");
            this.$element.attr("aria-hidden", "false");
            f.RemoveData(this.$element[0]);
            this.$element.removeData("select2");
            this.dataAdapter.destroy();
            this.selection.destroy();
            this.dropdown.destroy();
            this.results.destroy();
            this.results =
              this.dropdown =
              this.selection =
              this.dataAdapter =
                null;
          };
          a.prototype.render = function () {
            var a = h(
              '<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>'
            );
            a.attr("dir", this.options.get("dir"));
            this.$container = a;
            this.$container.addClass(
              "select2-container--" + this.options.get("theme")
            );
            f.StoreData(a[0], "element", this.$element);
            return a;
          };
          return a;
        }
      );
      n.define("jquery-mousewheel", ["jquery"], function (h) {
        return h;
      });
      n.define(
        "jquery.select2",
        [
          "jquery",
          "jquery-mousewheel",
          "./select2/core",
          "./select2/defaults",
          "./select2/utils",
        ],
        function (h, l, f, d, a) {
          if (null == h.fn.select2) {
            var c = ["open", "close", "destroy"];
            h.fn.select2 = function (d) {
              d = d || {};
              if ("object" === typeof d)
                return (
                  this.each(function () {
                    var a = h.extend(!0, {}, d);
                    new f(h(this), a);
                  }),
                  this
                );
              if ("string" === typeof d) {
                var e,
                  l = Array.prototype.slice.call(arguments, 1);
                this.each(function () {
                  var c = a.GetData(this, "select2");
                  null == c &&
                    window.console &&
                    console.error &&
                    console.error(
                      "The select2('" +
                        d +
                        "') method was called on an element that is not using Select2."
                    );
                  e = c[d].apply(c, l);
                });
                return -1 < h.inArray(d, c) ? this : e;
              }
              throw Error("Invalid arguments for Select2: " + d);
            };
          }
          null == h.fn.select2.defaults && (h.fn.select2.defaults = d);
          return f;
        }
      );
      return { define: n.define, require: n.require };
    })(),
    n = u.require("jquery.select2");
  m.fn.select2.amd = u;
  return n;
});
(function (m, u, n, t) {
  function h(a, c) {
    if (!a || !a.isDefaultPrevented()) {
      a.preventDefault();
      c = c || {};
      a && a.data && (c = v(a.data.options, c));
      var d = c.$target || n(a.currentTarget).trigger("blur"),
        e = n.fancybox.getInstance();
      (e && e.$trigger && e.$trigger.is(d)) ||
        (c.selector
          ? (a = n(c.selector))
          : (e = d.attr("data-fancybox") || "")
          ? ((a = a.data ? a.data.items : []),
            (a = a.length
              ? a.filter('[data-fancybox="' + e + '"]')
              : n('[data-fancybox="' + e + '"]')))
          : (a = [d]),
        (e = n(a).index(d)),
        0 > e && (e = 0),
        (e = n.fancybox.open(a, c, e)),
        (e.$trigger = d));
    }
  }
  m.console = m.console || { info: function (a) {} };
  if (n)
    if (n.fn.fancybox) console.info("fancyBox already initialized");
    else {
      var l = {
          closeExisting: !1,
          loop: !1,
          gutter: 50,
          keyboard: !0,
          preventCaptionOverlap: !0,
          arrows: !0,
          infobar: !0,
          smallBtn: "auto",
          toolbar: "auto",
          buttons: ["zoom", "slideShow", "thumbs", "close"],
          idleTime: 3,
          protect: !1,
          modal: !1,
          image: { preload: !1 },
          ajax: { settings: { data: { fancybox: !0 } } },
          iframe: {
            tpl: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',
            preload: !0,
            css: {},
            attr: { scrolling: "auto" },
          },
          video: {
            tpl: '<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',
            format: "",
            autoStart: !0,
          },
          defaultType: "image",
          animationEffect: "zoom",
          animationDuration: 366,
          zoomOpacity: "auto",
          transitionEffect: "fade",
          transitionDuration: 366,
          slideClass: "",
          baseClass: "",
          baseTpl:
            '<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',
          spinnerTpl: '<div class="fancybox-loading"></div>',
          errorTpl: '<div class="fancybox-error"><p>{{ERROR}}</p></div>',
          btnTpl: {
            download:
              '<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',
            zoom: '<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',
            close:
              '<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',
            arrowLeft:
              '<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',
            arrowRight:
              '<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',
            smallBtn:
              '<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>',
          },
          parentEl: "body",
          hideScrollbar: !0,
          autoFocus: !0,
          backFocus: !0,
          trapFocus: !0,
          fullScreen: { autoStart: !1 },
          touch: { vertical: !0, momentum: !0 },
          hash: null,
          media: {},
          slideShow: { autoStart: !1, speed: 3e3 },
          thumbs: {
            autoStart: !1,
            hideOnClose: !0,
            parentEl: ".fancybox-container",
            axis: "y",
          },
          wheel: "auto",
          onInit: n.noop,
          beforeLoad: n.noop,
          afterLoad: n.noop,
          beforeShow: n.noop,
          afterShow: n.noop,
          beforeClose: n.noop,
          afterClose: n.noop,
          onActivate: n.noop,
          onDeactivate: n.noop,
          clickContent: function (a, c) {
            return "image" === a.type ? "zoom" : !1;
          },
          clickSlide: "close",
          clickOutside: "close",
          dblclickContent: !1,
          dblclickSlide: !1,
          dblclickOutside: !1,
          mobile: {
            preventCaptionOverlap: !1,
            idleTime: !1,
            clickContent: function (a, c) {
              return "image" === a.type ? "toggleControls" : !1;
            },
            clickSlide: function (a, c) {
              return "image" === a.type ? "toggleControls" : "close";
            },
            dblclickContent: function (a, c) {
              return "image" === a.type ? "zoom" : !1;
            },
            dblclickSlide: function (a, c) {
              return "image" === a.type ? "zoom" : !1;
            },
          },
          lang: "en",
          i18n: {
            en: {
              CLOSE: "Close",
              NEXT: "Next",
              PREV: "Previous",
              ERROR:
                "The requested content cannot be loaded. <br/> Please try again later.",
              PLAY_START: "Start slideshow",
              PLAY_STOP: "Pause slideshow",
              FULL_SCREEN: "Full screen",
              THUMBS: "Thumbnails",
              DOWNLOAD: "Download",
              SHARE: "Share",
              ZOOM: "Zoom",
            },
            de: {
              CLOSE: "Schlie&szlig;en",
              NEXT: "Weiter",
              PREV: "Zur&uuml;ck",
              ERROR:
                "Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",
              PLAY_START: "Diaschau starten",
              PLAY_STOP: "Diaschau beenden",
              FULL_SCREEN: "Vollbild",
              THUMBS: "Vorschaubilder",
              DOWNLOAD: "Herunterladen",
              SHARE: "Teilen",
              ZOOM: "Vergr&ouml;&szlig;ern",
            },
          },
        },
        f = n(m),
        d = n(u),
        a = 0,
        c = (function () {
          return (
            m.requestAnimationFrame ||
            m.webkitRequestAnimationFrame ||
            m.mozRequestAnimationFrame ||
            m.oRequestAnimationFrame ||
            function (a) {
              return m.setTimeout(a, 1e3 / 60);
            }
          );
        })(),
        e = (function () {
          return (
            m.cancelAnimationFrame ||
            m.webkitCancelAnimationFrame ||
            m.mozCancelAnimationFrame ||
            m.oCancelAnimationFrame ||
            function (a) {
              m.clearTimeout(a);
            }
          );
        })(),
        k = (function () {
          var a = u.createElement("fakeelement"),
            c,
            d = {
              transition: "transitionend",
              OTransition: "oTransitionEnd",
              MozTransition: "transitionend",
              WebkitTransition: "webkitTransitionEnd",
            };
          for (c in d) if (a.style[c] !== t) return d[c];
          return "transitionend";
        })(),
        w = function (a) {
          return a && a.length && a[0].offsetHeight;
        },
        v = function (a, c) {
          var d = n.extend(!0, {}, a, c);
          n.each(c, function (a, c) {
            n.isArray(c) && (d[a] = c);
          });
          return d;
        },
        q = function (c, d, e) {
          this.opts = v({ index: e }, n.fancybox.defaults);
          n.isPlainObject(d) && (this.opts = v(this.opts, d));
          n.fancybox.isMobile && (this.opts = v(this.opts, this.opts.mobile));
          this.id = this.opts.id || ++a;
          this.currIndex = parseInt(this.opts.index, 10) || 0;
          this.prevPos = this.prevIndex = null;
          this.currPos = 0;
          this.firstRun = !0;
          this.group = [];
          this.slides = {};
          this.addContent(c);
          this.group.length && this.init();
        };
      n.extend(q.prototype, {
        init: function () {
          var a = this,
            c = a.group[a.currIndex].opts;
          c.closeExisting && n.fancybox.close(!0);
          n("body").addClass("fancybox-active");
          !n.fancybox.getInstance() &&
            !1 !== c.hideScrollbar &&
            !n.fancybox.isMobile &&
            u.body.scrollHeight > m.innerHeight &&
            (n("head").append(
              '<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:' +
                (m.innerWidth - u.documentElement.clientWidth) +
                "px;}</style>"
            ),
            n("body").addClass("compensate-for-scrollbar"));
          var d = "";
          n.each(c.buttons, function (a, e) {
            d += c.btnTpl[e] || "";
          });
          var e = n(
            a.translate(
              a,
              c.baseTpl
                .replace("{{buttons}}", d)
                .replace("{{arrows}}", c.btnTpl.arrowLeft + c.btnTpl.arrowRight)
            )
          )
            .attr("id", "fancybox-container-" + a.id)
            .addClass(c.baseClass)
            .data("FancyBox", a)
            .appendTo(c.parentEl);
          a.$refs = { container: e };
          "bg inner infobar toolbar stage caption navigation"
            .split(" ")
            .forEach(function (c) {
              a.$refs[c] = e.find(".fancybox-" + c);
            });
          a.trigger("onInit");
          a.activate();
          a.jumpTo(a.currIndex);
        },
        translate: function (a, c) {
          var d = a.opts.i18n[a.opts.lang] || a.opts.i18n.en;
          return c.replace(/\{\{(\w+)\}\}/g, function (a, c) {
            return d[c] === t ? a : d[c];
          });
        },
        addContent: function (a) {
          var c = this;
          a = n.makeArray(a);
          n.each(a, function (a, d) {
            a = {};
            var e = {};
            if (n.isPlainObject(d)) (a = d), (e = d.opts || d);
            else if ("object" === n.type(d) && n(d).length) {
              var f = n(d);
              e = f.data() || {};
              e = n.extend(!0, {}, e, e.options);
              e.$orig = f;
              a.src = c.opts.src || e.src || f.attr("href");
              a.type || a.src || ((a.type = "inline"), (a.src = d));
            } else a = { type: "html", src: d + "" };
            a.opts = n.extend(!0, {}, c.opts, e);
            n.isArray(e.buttons) && (a.opts.buttons = e.buttons);
            n.fancybox.isMobile &&
              a.opts.mobile &&
              (a.opts = v(a.opts, a.opts.mobile));
            e = a.type || a.opts.type;
            var k = a.src || "";
            !e &&
              k &&
              ((f = k.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))
                ? ((e = "video"),
                  a.opts.video.format ||
                    (a.opts.video.format =
                      "video/" + ("ogv" === f[1] ? "ogg" : f[1])))
                : k.match(
                    /(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i
                  )
                ? (e = "image")
                : k.match(/\.(pdf)((\?|#).*)?$/i)
                ? ((e = "iframe"),
                  (a = n.extend(!0, a, {
                    contentType: "pdf",
                    opts: { iframe: { preload: !1 } },
                  })))
                : "#" === k.charAt(0) && (e = "inline"));
            e ? (a.type = e) : c.trigger("objectNeedsType", a);
            a.contentType ||
              (a.contentType =
                -1 < n.inArray(a.type, ["html", "inline", "ajax"])
                  ? "html"
                  : a.type);
            a.index = c.group.length;
            "auto" == a.opts.smallBtn &&
              (a.opts.smallBtn =
                -1 < n.inArray(a.type, ["html", "inline", "ajax"]));
            "auto" === a.opts.toolbar && (a.opts.toolbar = !a.opts.smallBtn);
            a.$thumb = a.opts.$thumb || null;
            a.opts.$trigger &&
              a.index === c.opts.index &&
              ((a.$thumb = a.opts.$trigger.find("img:first")),
              a.$thumb.length && (a.opts.$orig = a.opts.$trigger));
            (a.$thumb && a.$thumb.length) ||
              !a.opts.$orig ||
              (a.$thumb = a.opts.$orig.find("img:first"));
            a.$thumb && !a.$thumb.length && (a.$thumb = null);
            a.thumb = a.opts.thumb || (a.$thumb ? a.$thumb[0].src : null);
            "function" === n.type(a.opts.caption) &&
              (a.opts.caption = a.opts.caption.apply(d, [c, a]));
            "function" === n.type(c.opts.caption) &&
              (a.opts.caption = c.opts.caption.apply(d, [c, a]));
            a.opts.caption instanceof n ||
              (a.opts.caption =
                a.opts.caption === t ? "" : a.opts.caption + "");
            "ajax" === a.type &&
              ((d = k.split(/\s+/, 2)),
              1 < d.length &&
                ((a.src = d.shift()), (a.opts.filter = d.shift())));
            a.opts.modal &&
              (a.opts = n.extend(!0, a.opts, {
                trapFocus: !0,
                infobar: 0,
                toolbar: 0,
                smallBtn: 0,
                keyboard: 0,
                slideShow: 0,
                fullScreen: 0,
                thumbs: 0,
                touch: 0,
                clickContent: !1,
                clickSlide: !1,
                clickOutside: !1,
                dblclickContent: !1,
                dblclickSlide: !1,
                dblclickOutside: !1,
              }));
            c.group.push(a);
          });
          Object.keys(c.slides).length &&
            (c.updateControls(),
            (a = c.Thumbs) && a.isActive && (a.create(), a.focus()));
        },
        addEvents: function () {
          var a = this;
          a.removeEvents();
          a.$refs.container
            .on("click.fb-close", "[data-fancybox-close]", function (c) {
              c.stopPropagation();
              c.preventDefault();
              a.close(c);
            })
            .on(
              "touchstart.fb-prev click.fb-prev",
              "[data-fancybox-prev]",
              function (c) {
                c.stopPropagation();
                c.preventDefault();
                a.previous();
              }
            )
            .on(
              "touchstart.fb-next click.fb-next",
              "[data-fancybox-next]",
              function (c) {
                c.stopPropagation();
                c.preventDefault();
                a.next();
              }
            )
            .on("click.fb", "[data-fancybox-zoom]", function (c) {
              a[a.isScaledDown() ? "scaleToActual" : "scaleToFit"]();
            });
          f.on("orientationchange.fb resize.fb", function (d) {
            d && d.originalEvent && "resize" === d.originalEvent.type
              ? (a.requestId && e(a.requestId),
                (a.requestId = c(function () {
                  a.update(d);
                })))
              : (a.current &&
                  "iframe" === a.current.type &&
                  a.$refs.stage.hide(),
                setTimeout(
                  function () {
                    a.$refs.stage.show();
                    a.update(d);
                  },
                  n.fancybox.isMobile ? 600 : 250
                ));
          });
          d.on("keydown.fb", function (c) {
            var d = (n.fancybox ? n.fancybox.getInstance() : null).current,
              e = c.keyCode || c.which;
            9 == e
              ? d.opts.trapFocus && a.focus(c)
              : !d.opts.keyboard ||
                c.ctrlKey ||
                c.altKey ||
                c.shiftKey ||
                n(c.target).is("input,textarea,video,audio,select") ||
                (8 === e || 27 === e
                  ? (c.preventDefault(), a.close(c))
                  : 37 === e || 38 === e
                  ? (c.preventDefault(), a.previous())
                  : 39 === e || 40 === e
                  ? (c.preventDefault(), a.next())
                  : a.trigger("afterKeydown", c, e));
          });
          a.group[a.currIndex].opts.idleTime &&
            ((a.idleSecondsCounter = 0),
            d.on(
              "mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",
              function (c) {
                a.idleSecondsCounter = 0;
                a.isIdle && a.showControls();
                a.isIdle = !1;
              }
            ),
            (a.idleInterval = m.setInterval(function () {
              a.idleSecondsCounter++;
              a.idleSecondsCounter >= a.group[a.currIndex].opts.idleTime &&
                !a.isDragging &&
                ((a.isIdle = !0), (a.idleSecondsCounter = 0), a.hideControls());
            }, 1e3)));
        },
        removeEvents: function () {
          f.off("orientationchange.fb resize.fb");
          d.off("keydown.fb .fb-idle");
          this.$refs.container.off(".fb-close .fb-prev .fb-next");
          this.idleInterval &&
            (m.clearInterval(this.idleInterval), (this.idleInterval = null));
        },
        previous: function (a) {
          return this.jumpTo(this.currPos - 1, a);
        },
        next: function (a) {
          return this.jumpTo(this.currPos + 1, a);
        },
        jumpTo: function (a, c) {
          var d = this,
            e = d.group.length;
          if (!(d.isDragging || d.isClosing || (d.isAnimating && d.firstRun))) {
            a = parseInt(a, 10);
            var f = d.current ? d.current.opts.loop : d.opts.loop;
            if (!f && (0 > a || a >= e)) return !1;
            var k = (d.firstRun = !Object.keys(d.slides).length),
              h = d.current;
            d.prevIndex = d.currIndex;
            d.prevPos = d.currPos;
            var p = d.createSlide(a);
            1 < e &&
              ((f || p.index < e - 1) && d.createSlide(a + 1),
              (f || 0 < p.index) && d.createSlide(a - 1));
            d.current = p;
            d.currIndex = p.index;
            d.currPos = p.pos;
            d.trigger("beforeShow", k);
            d.updateControls();
            p.forcedDuration = t;
            n.isNumeric(c)
              ? (p.forcedDuration = c)
              : (c = p.opts[k ? "animationDuration" : "transitionDuration"]);
            c = parseInt(c, 10);
            a = d.isMoved(p);
            p.$slide.addClass("fancybox-slide--current");
            if (k)
              p.opts.animationEffect &&
                c &&
                d.$refs.container.css("transition-duration", c + "ms"),
                d.$refs.container.addClass("fancybox-is-open").trigger("focus"),
                d.loadSlide(p);
            else {
              var l = n.fancybox.getTranslate(h.$slide),
                m = n.fancybox.getTranslate(d.$refs.stage);
              n.each(d.slides, function (a, c) {
                n.fancybox.stop(c.$slide, !0);
              });
              h.pos !== p.pos && (h.isComplete = !1);
              h.$slide.removeClass(
                "fancybox-slide--complete fancybox-slide--current"
              );
              if (a) {
                var x = l.left - (h.pos * l.width + h.pos * h.opts.gutter);
                n.each(d.slides, function (a, e) {
                  e.$slide
                    .removeClass("fancybox-animated")
                    .removeClass(function (a, c) {
                      return (c.match(/(^|\s)fancybox-fx-\S+/g) || []).join(
                        " "
                      );
                    });
                  n.fancybox.setTranslate(e.$slide, {
                    top: 0,
                    left: e.pos * l.width + e.pos * e.opts.gutter - m.left + x,
                  });
                  e.pos !== p.pos &&
                    e.$slide.addClass(
                      "fancybox-slide--" + (e.pos > p.pos ? "next" : "previous")
                    );
                  w(e.$slide);
                  n.fancybox.animate(
                    e.$slide,
                    {
                      top: 0,
                      left:
                        (e.pos - p.pos) * l.width +
                        (e.pos - p.pos) * e.opts.gutter,
                    },
                    c,
                    function () {
                      e.$slide
                        .css({ transform: "", opacity: "" })
                        .removeClass(
                          "fancybox-slide--next fancybox-slide--previous"
                        );
                      e.pos === d.currPos && d.complete();
                    }
                  );
                });
              } else if (c && p.opts.transitionEffect) {
                var q =
                  "fancybox-animated fancybox-fx-" + p.opts.transitionEffect;
                h.$slide.addClass(
                  "fancybox-slide--" + (h.pos > p.pos ? "next" : "previous")
                );
                n.fancybox.animate(
                  h.$slide,
                  q,
                  c,
                  function () {
                    h.$slide
                      .removeClass(q)
                      .removeClass(
                        "fancybox-slide--next fancybox-slide--previous"
                      );
                  },
                  !1
                );
              }
              p.isLoaded ? d.revealContent(p) : d.loadSlide(p);
            }
            d.preload("image");
          }
        },
        createSlide: function (a) {
          var c = a % this.group.length;
          c = 0 > c ? this.group.length + c : c;
          if (!this.slides[a] && this.group[c]) {
            var d = n('<div class="fancybox-slide"></div>').appendTo(
              this.$refs.stage
            );
            this.slides[a] = n.extend(!0, {}, this.group[c], {
              pos: a,
              $slide: d,
              isLoaded: !1,
            });
            this.updateSlide(this.slides[a]);
          }
          return this.slides[a];
        },
        scaleToActual: function (a, c, d) {
          var e = this,
            f = e.current,
            k = f.$content,
            h = n.fancybox.getTranslate(f.$slide).width,
            p = n.fancybox.getTranslate(f.$slide).height,
            l = f.width,
            m = f.height;
          if (
            !e.isAnimating &&
            !e.isMoved() &&
            k &&
            "image" == f.type &&
            f.isLoaded &&
            !f.hasError
          ) {
            e.isAnimating = !0;
            n.fancybox.stop(k);
            a = a === t ? 0.5 * h : a;
            c = c === t ? 0.5 * p : c;
            var q = n.fancybox.getTranslate(k);
            q.top -= n.fancybox.getTranslate(f.$slide).top;
            q.left -= n.fancybox.getTranslate(f.$slide).left;
            var x = l / q.width,
              v = m / q.height;
            f = 0.5 * h - 0.5 * l;
            var y = 0.5 * p - 0.5 * m;
            l > h &&
              ((f = q.left * x - (a * x - a)),
              0 < f && (f = 0),
              f < h - l && (f = h - l));
            m > p &&
              ((y = q.top * v - (c * v - c)),
              0 < y && (y = 0),
              y < p - m && (y = p - m));
            e.updateCursor(l, m);
            n.fancybox.animate(
              k,
              { top: y, left: f, scaleX: x, scaleY: v },
              d || 366,
              function () {
                e.isAnimating = !1;
              }
            );
            e.SlideShow && e.SlideShow.isActive && e.SlideShow.stop();
          }
        },
        scaleToFit: function (a) {
          var c = this,
            d = c.current,
            e = d.$content;
          c.isAnimating ||
            c.isMoved() ||
            !e ||
            "image" != d.type ||
            !d.isLoaded ||
            d.hasError ||
            ((c.isAnimating = !0),
            n.fancybox.stop(e),
            (d = c.getFitPos(d)),
            c.updateCursor(d.width, d.height),
            n.fancybox.animate(
              e,
              {
                top: d.top,
                left: d.left,
                scaleX: d.width / e.width(),
                scaleY: d.height / e.height(),
              },
              a || 366,
              function () {
                c.isAnimating = !1;
              }
            ));
        },
        getFitPos: function (a) {
          var c = a.$content,
            d = a.$slide,
            e = a.width || a.opts.width,
            f = a.height || a.opts.height,
            k = {};
          if (!a.isLoaded || !c || !c.length) return !1;
          var h = n.fancybox.getTranslate(this.$refs.stage).width,
            p = n.fancybox.getTranslate(this.$refs.stage).height;
          h -=
            parseFloat(d.css("paddingLeft")) +
            parseFloat(d.css("paddingRight")) +
            parseFloat(c.css("marginLeft")) +
            parseFloat(c.css("marginRight"));
          p -=
            parseFloat(d.css("paddingTop")) +
            parseFloat(d.css("paddingBottom")) +
            parseFloat(c.css("marginTop")) +
            parseFloat(c.css("marginBottom"));
          (e && f) || ((e = h), (f = p));
          c = Math.min(1, h / e, p / f);
          e *= c;
          f *= c;
          e > h - 0.5 && (e = h);
          f > p - 0.5 && (f = p);
          "image" === a.type
            ? ((k.top =
                Math.floor(0.5 * (p - f)) + parseFloat(d.css("paddingTop"))),
              (k.left =
                Math.floor(0.5 * (h - e)) + parseFloat(d.css("paddingLeft"))))
            : "video" === a.contentType &&
              ((a =
                a.opts.width && a.opts.height ? e / f : a.opts.ratio || 16 / 9),
              f > e / a ? (f = e / a) : e > f * a && (e = f * a));
          k.width = e;
          k.height = f;
          return k;
        },
        update: function (a) {
          var c = this;
          n.each(c.slides, function (d, e) {
            c.updateSlide(e, a);
          });
        },
        updateSlide: function (a, c) {
          var d = a && a.$content,
            e = a.width || a.opts.width,
            f = a.height || a.opts.height,
            k = a.$slide;
          this.adjustCaption(a);
          d &&
            (e || f || "video" === a.contentType) &&
            !a.hasError &&
            (n.fancybox.stop(d),
            n.fancybox.setTranslate(d, this.getFitPos(a)),
            a.pos === this.currPos &&
              ((this.isAnimating = !1), this.updateCursor()));
          this.adjustLayout(a);
          k.length &&
            (k.trigger("refresh"),
            a.pos === this.currPos &&
              this.$refs.toolbar
                .add(
                  this.$refs.navigation.find(".fancybox-button--arrow_right")
                )
                .toggleClass(
                  "compensate-for-scrollbar",
                  k.get(0).scrollHeight > k.get(0).clientHeight
                ));
          this.trigger("onUpdate", a, c);
        },
        centerSlide: function (a) {
          var c = this,
            d = c.current,
            e = d.$slide;
          !c.isClosing &&
            d &&
            (e.siblings().css({ transform: "", opacity: "" }),
            e
              .parent()
              .children()
              .removeClass("fancybox-slide--previous fancybox-slide--next"),
            n.fancybox.animate(
              e,
              { top: 0, left: 0, opacity: 1 },
              a === t ? 0 : a,
              function () {
                e.css({ transform: "", opacity: "" });
                d.isComplete || c.complete();
              },
              !1
            ));
        },
        isMoved: function (a) {
          a = a || this.current;
          if (!a) return !1;
          var c = n.fancybox.getTranslate(this.$refs.stage),
            d = n.fancybox.getTranslate(a.$slide);
          return (
            !a.$slide.hasClass("fancybox-animated") &&
            (0.5 < Math.abs(d.top - c.top) || 0.5 < Math.abs(d.left - c.left))
          );
        },
        updateCursor: function (a, c) {
          var d = this.current,
            e = this.$refs.container;
          d &&
            !this.isClosing &&
            this.Guestures &&
            (e.removeClass(
              "fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"
            ),
            (c = (a = this.canPan(a, c)) ? !0 : this.isZoomable()),
            e.toggleClass("fancybox-is-zoomable", c),
            n("[data-fancybox-zoom]").prop("disabled", !c),
            a
              ? e.addClass("fancybox-can-pan")
              : c &&
                ("zoom" === d.opts.clickContent ||
                  (n.isFunction(d.opts.clickContent) &&
                    "zoom" == d.opts.clickContent(d)))
              ? e.addClass("fancybox-can-zoomIn")
              : d.opts.touch &&
                (d.opts.touch.vertical || 1 < this.group.length) &&
                "video" !== d.contentType &&
                e.addClass("fancybox-can-swipe"));
        },
        isZoomable: function () {
          var a = this.current,
            c;
          return a &&
            !this.isClosing &&
            "image" === a.type &&
            !a.hasError &&
            (!a.isLoaded ||
              ((c = this.getFitPos(a)) &&
                (a.width > c.width || a.height > c.height)))
            ? !0
            : !1;
        },
        isScaledDown: function (a, c) {
          var d = !1,
            e = this.current,
            f = e.$content;
          a !== t && c !== t
            ? (d = a < e.width && c < e.height)
            : f &&
              ((d = n.fancybox.getTranslate(f)),
              (d = d.width < e.width && d.height < e.height));
          return d;
        },
        canPan: function (a, c) {
          var d = this.current,
            e = null,
            f = !1;
          "image" === d.type &&
            (d.isComplete || (a && c)) &&
            !d.hasError &&
            ((f = this.getFitPos(d)),
            a !== t && c !== t
              ? (e = { width: a, height: c })
              : d.isComplete && (e = n.fancybox.getTranslate(d.$content)),
            e &&
              f &&
              (f =
                1.5 < Math.abs(e.width - f.width) ||
                1.5 < Math.abs(e.height - f.height)));
          return f;
        },
        loadSlide: function (a) {
          var c = this;
          if (!a.isLoading && !a.isLoaded) {
            a.isLoading = !0;
            if (!1 === c.trigger("beforeLoad", a)) return (a.isLoading = !1);
            var d = a.type,
              e = a.$slide;
            e.off("refresh").trigger("onReset").addClass(a.opts.slideClass);
            switch (d) {
              case "image":
                c.setImage(a);
                break;
              case "iframe":
                c.setIframe(a);
                break;
              case "html":
                c.setContent(a, a.src || a.content);
                break;
              case "video":
                c.setContent(
                  a,
                  a.opts.video.tpl
                    .replace(/\{\{src\}\}/gi, a.src)
                    .replace(
                      "{{format}}",
                      a.opts.videoFormat || a.opts.video.format || ""
                    )
                    .replace("{{poster}}", a.thumb || "")
                );
                break;
              case "inline":
                n(a.src).length ? c.setContent(a, n(a.src)) : c.setError(a);
                break;
              case "ajax":
                c.showLoading(a);
                var f = n.ajax(
                  n.extend({}, a.opts.ajax.settings, {
                    url: a.src,
                    success: function (d, e) {
                      "success" === e && c.setContent(a, d);
                    },
                    error: function (d, e) {
                      d && "abort" !== e && c.setError(a);
                    },
                  })
                );
                e.one("onReset", function () {
                  f.abort();
                });
                break;
              default:
                c.setError(a);
            }
            return !0;
          }
        },
        setImage: function (a) {
          var c = this;
          setTimeout(function () {
            var d = a.$image;
            c.isClosing ||
              !a.isLoading ||
              (d && d.length && d[0].complete) ||
              a.hasError ||
              c.showLoading(a);
          }, 50);
          c.checkSrcset(a);
          a.$content = n('<div class="fancybox-content"></div>')
            .addClass("fancybox-is-hidden")
            .appendTo(a.$slide.addClass("fancybox-slide--image"));
          if (
            !1 !== a.opts.preload &&
            a.opts.width &&
            a.opts.height &&
            a.thumb
          ) {
            a.width = a.opts.width;
            a.height = a.opts.height;
            var d = u.createElement("img");
            d.onerror = function () {
              n(this).remove();
              a.$ghost = null;
            };
            d.onload = function () {
              c.afterLoad(a);
            };
            a.$ghost = n(d)
              .addClass("fancybox-image")
              .appendTo(a.$content)
              .attr("src", a.thumb);
          }
          c.setBigImage(a);
        },
        checkSrcset: function (a) {
          var c = a.opts.srcset || a.opts.image.srcset;
          if (c) {
            var d = m.devicePixelRatio || 1,
              e = m.innerWidth * d,
              f = c.split(",").map(function (a) {
                var c = {};
                a.trim()
                  .split(/\s+/)
                  .forEach(function (a, d) {
                    var e = parseInt(a.substring(0, a.length - 1), 10);
                    if (0 === d) return (c.url = a);
                    e && ((c.value = e), (c.postfix = a[a.length - 1]));
                  });
                return c;
              });
            f.sort(function (a, c) {
              return a.value - c.value;
            });
            for (var k = 0; k < f.length; k++) {
              var h = f[k];
              if (
                ("w" === h.postfix && h.value >= e) ||
                ("x" === h.postfix && h.value >= d)
              ) {
                var p = h;
                break;
              }
            }
            !p && f.length && (p = f[f.length - 1]);
            p &&
              ((a.src = p.url),
              a.width &&
                a.height &&
                "w" == p.postfix &&
                ((a.height = (a.width / a.height) * p.value),
                (a.width = p.value)),
              (a.opts.srcset = c));
          }
        },
        setBigImage: function (a) {
          var c = this,
            d = u.createElement("img"),
            e = n(d);
          a.$image = e
            .one("error", function () {
              c.setError(a);
            })
            .one("load", function () {
              var d;
              a.$ghost ||
                (c.resolveImageSlideSize(
                  a,
                  this.naturalWidth,
                  this.naturalHeight
                ),
                c.afterLoad(a));
              c.isClosing ||
                (a.opts.srcset &&
                  (((d = a.opts.sizes) && "auto" !== d) ||
                    (d =
                      (1 < a.width / a.height && 1 < f.width() / f.height()
                        ? "100"
                        : Math.round((a.width / a.height) * 100)) + "vw"),
                  e.attr("sizes", d).attr("srcset", a.opts.srcset)),
                a.$ghost &&
                  setTimeout(function () {
                    a.$ghost && !c.isClosing && a.$ghost.hide();
                  }, Math.min(300, Math.max(1e3, a.height / 1600))),
                c.hideLoading(a));
            })
            .addClass("fancybox-image")
            .attr("src", a.src)
            .appendTo(a.$content);
          (d.complete || "complete" == d.readyState) &&
          e.naturalWidth &&
          e.naturalHeight
            ? e.trigger("load")
            : d.error && e.trigger("error");
        },
        resolveImageSlideSize: function (a, c, d) {
          var e = parseInt(a.opts.width, 10),
            f = parseInt(a.opts.height, 10);
          a.width = c;
          a.height = d;
          0 < e && ((a.width = e), (a.height = Math.floor((e * d) / c)));
          0 < f && ((a.width = Math.floor((f * c) / d)), (a.height = f));
        },
        setIframe: function (a) {
          var c = this,
            d = a.opts.iframe,
            e = a.$slide,
            f;
          a.$content = n(
            '<div class="fancybox-content' +
              (d.preload ? " fancybox-is-hidden" : "") +
              '"></div>'
          )
            .css(d.css)
            .appendTo(e);
          e.addClass("fancybox-slide--" + a.contentType);
          a.$iframe = f = n(d.tpl.replace(/\{rnd\}/g, new Date().getTime()))
            .attr(d.attr)
            .appendTo(a.$content);
          d.preload
            ? (c.showLoading(a),
              f.on("load.fb error.fb", function (d) {
                this.isReady = 1;
                a.$slide.trigger("refresh");
                c.afterLoad(a);
              }),
              e.on("refresh.fb", function () {
                var c = a.$content,
                  k = d.css.width,
                  h = d.css.height;
                if (1 === f[0].isReady) {
                  try {
                    var p = f.contents().find("body");
                  } catch (C) {}
                  p &&
                    p.length &&
                    p.children().length &&
                    (e.css("overflow", "visible"),
                    c.css({
                      width: "100%",
                      "max-width": "100%",
                      height: "9999px",
                    }),
                    k === t &&
                      (k = Math.ceil(
                        Math.max(p[0].clientWidth, p.outerWidth(!0))
                      )),
                    c.css("width", k ? k : "").css("max-width", ""),
                    h === t &&
                      (h = Math.ceil(
                        Math.max(p[0].clientHeight, p.outerHeight(!0))
                      )),
                    c.css("height", h ? h : ""),
                    e.css("overflow", "auto"));
                  c.removeClass("fancybox-is-hidden");
                }
              }))
            : c.afterLoad(a);
          f.attr("src", a.src);
          e.one("onReset", function () {
            try {
              n(this)
                .find("iframe")
                .hide()
                .unbind()
                .attr("src", "//about:blank");
            } catch (B) {}
            n(this).off("refresh.fb").empty();
            a.isLoaded = !1;
            a.isRevealed = !1;
          });
        },
        setContent: function (a, c) {
          this.isClosing ||
            (this.hideLoading(a),
            a.$content && n.fancybox.stop(a.$content),
            a.$slide.empty(),
            c && c.hasOwnProperty && c instanceof n && c.parent().length
              ? ((c.hasClass("fancybox-content") ||
                  c.parent().hasClass("fancybox-content")) &&
                  c.parents(".fancybox-slide").trigger("onReset"),
                (a.$placeholder = n("<div>").hide().insertAfter(c)),
                c.css("display", "inline-block"))
              : a.hasError ||
                ("string" === n.type(c) &&
                  (c = n("<div>").append(n.trim(c)).contents()),
                a.opts.filter && (c = n("<div>").html(c).find(a.opts.filter))),
            a.$slide.one("onReset", function () {
              n(this).find("video,audio").trigger("pause");
              a.$placeholder &&
                (a.$placeholder
                  .after(c.removeClass("fancybox-content").hide())
                  .remove(),
                (a.$placeholder = null));
              a.$smallBtn && (a.$smallBtn.remove(), (a.$smallBtn = null));
              a.hasError ||
                (n(this).empty(), (a.isLoaded = !1), (a.isRevealed = !1));
            }),
            n(c).appendTo(a.$slide),
            n(c).is("video,audio") &&
              (n(c).addClass("fancybox-video"),
              n(c).wrap("<div></div>"),
              (a.contentType = "video"),
              (a.opts.width = a.opts.width || n(c).attr("width")),
              (a.opts.height = a.opts.height || n(c).attr("height"))),
            (a.$content = a.$slide
              .children()
              .filter("div,form,main,video,audio,article,.fancybox-content")
              .first()),
            a.$content.siblings().hide(),
            a.$content.length ||
              (a.$content = a.$slide
                .wrapInner("<div></div>")
                .children()
                .first()),
            a.$content.addClass("fancybox-content"),
            a.$slide.addClass("fancybox-slide--" + a.contentType),
            this.afterLoad(a));
        },
        setError: function (a) {
          a.hasError = !0;
          a.$slide
            .trigger("onReset")
            .removeClass("fancybox-slide--" + a.contentType)
            .addClass("fancybox-slide--error");
          a.contentType = "html";
          this.setContent(a, this.translate(a, a.opts.errorTpl));
          a.pos === this.currPos && (this.isAnimating = !1);
        },
        showLoading: function (a) {
          (a = a || this.current) &&
            !a.$spinner &&
            (a.$spinner = n(this.translate(this, this.opts.spinnerTpl))
              .appendTo(a.$slide)
              .hide()
              .fadeIn("fast"));
        },
        hideLoading: function (a) {
          (a = a || this.current) &&
            a.$spinner &&
            (a.$spinner.stop().remove(), delete a.$spinner);
        },
        afterLoad: function (a) {
          this.isClosing ||
            ((a.isLoading = !1),
            (a.isLoaded = !0),
            this.trigger("afterLoad", a),
            this.hideLoading(a),
            !a.opts.smallBtn ||
              (a.$smallBtn && a.$smallBtn.length) ||
              (a.$smallBtn = n(
                this.translate(a, a.opts.btnTpl.smallBtn)
              ).appendTo(a.$content)),
            a.opts.protect &&
              a.$content &&
              !a.hasError &&
              (a.$content.on("contextmenu.fb", function (a) {
                2 == a.button && a.preventDefault();
                return !0;
              }),
              "image" === a.type &&
                n('<div class="fancybox-spaceball"></div>').appendTo(
                  a.$content
                )),
            this.adjustCaption(a),
            this.adjustLayout(a),
            a.pos === this.currPos && this.updateCursor(),
            this.revealContent(a));
        },
        adjustCaption: function (a) {
          a = a || this.current;
          var c = a.opts.caption,
            d = a.opts.preventCaptionOverlap,
            e = this.$refs.caption,
            f = !1;
          e.toggleClass("fancybox-caption--separate", d);
          d &&
            c &&
            c.length &&
            (a.pos !== this.currPos
              ? ((d = e.clone().appendTo(e.parent())),
                d.children().eq(0).empty().html(c),
                (f = d.outerHeight(!0)),
                d.empty().remove())
              : this.$caption && (f = this.$caption.outerHeight(!0)),
            a.$slide.css("padding-bottom", f || ""));
        },
        adjustLayout: function (a) {
          a = a || this.current;
          var c;
          if (a.isLoaded && !0 !== a.opts.disableLayoutFix) {
            a.$content.css("margin-bottom", "");
            if (a.$content.outerHeight() > a.$slide.height() + 0.5) {
              var d = a.$slide[0].style["padding-bottom"],
                e = a.$slide.css("padding-bottom");
              if (0 < parseFloat(e)) {
                var f = a.$slide[0].scrollHeight;
                a.$slide.css("padding-bottom", 0);
                1 > Math.abs(f - a.$slide[0].scrollHeight) && (c = e);
                a.$slide.css("padding-bottom", d);
              }
            }
            a.$content.css("margin-bottom", c);
          }
        },
        revealContent: function (a) {
          var c = this,
            d = a.$slide,
            e = !1,
            f = !1,
            k = c.isMoved(a),
            h = a.isRevealed;
          a.isRevealed = !0;
          var l = a.opts[c.firstRun ? "animationEffect" : "transitionEffect"],
            p = a.opts[c.firstRun ? "animationDuration" : "transitionDuration"];
          p = parseInt(a.forcedDuration === t ? p : a.forcedDuration, 10);
          if (k || a.pos !== c.currPos || !p) l = !1;
          "zoom" === l &&
            (a.pos === c.currPos &&
            p &&
            "image" === a.type &&
            !a.hasError &&
            (f = c.getThumbPos(a))
              ? (e = c.getFitPos(a))
              : (l = "fade"));
          if ("zoom" === l)
            (c.isAnimating = !0),
              (e.scaleX = e.width / f.width),
              (e.scaleY = e.height / f.height),
              (k = a.opts.zoomOpacity),
              "auto" == k &&
                (k = 0.1 < Math.abs(a.width / a.height - f.width / f.height)),
              k && ((f.opacity = 0.1), (e.opacity = 1)),
              n.fancybox.setTranslate(
                a.$content.removeClass("fancybox-is-hidden"),
                f
              ),
              w(a.$content),
              n.fancybox.animate(a.$content, e, p, function () {
                c.isAnimating = !1;
                c.complete();
              });
          else if ((c.updateSlide(a), l)) {
            n.fancybox.stop(d);
            var m =
              "fancybox-slide--" +
              (a.pos >= c.prevPos ? "next" : "previous") +
              " fancybox-animated fancybox-fx-" +
              l;
            d.addClass(m).removeClass("fancybox-slide--current");
            a.$content.removeClass("fancybox-is-hidden");
            w(d);
            "image" !== a.type && a.$content.hide().show(0);
            n.fancybox.animate(
              d,
              "fancybox-slide--current",
              p,
              function () {
                d.removeClass(m).css({ transform: "", opacity: "" });
                a.pos === c.currPos && c.complete();
              },
              !0
            );
          } else
            a.$content.removeClass("fancybox-is-hidden"),
              h ||
                !k ||
                "image" !== a.type ||
                a.hasError ||
                a.$content.hide().fadeIn("fast"),
              a.pos === c.currPos && c.complete();
        },
        getThumbPos: function (a) {
          var c;
          a = a.$thumb;
          var d;
          if (!(c = !a)) {
            if ((d = a[0]) && d.ownerDocument === u) {
              n(".fancybox-container").css("pointer-events", "none");
              c = d.getBoundingClientRect().left + d.offsetWidth / 2;
              var e = d.getBoundingClientRect().top + d.offsetHeight / 2;
              c = u.elementFromPoint(c, e) === d;
              n(".fancybox-container").css("pointer-events", "");
            } else c = !1;
            c = !c;
          }
          if (c) return !1;
          c = n.fancybox.getTranslate(a);
          e = parseFloat(a.css("border-top-width") || 0);
          d = parseFloat(a.css("border-right-width") || 0);
          var f = parseFloat(a.css("border-bottom-width") || 0);
          a = parseFloat(a.css("border-left-width") || 0);
          a = {
            top: c.top + e,
            left: c.left + a,
            width: c.width - d - a,
            height: c.height - e - f,
            scaleX: 1,
            scaleY: 1,
          };
          return 0 < c.width && 0 < c.height ? a : !1;
        },
        complete: function () {
          var a = this,
            c = a.current,
            d = {};
          if (!a.isMoved() && c.isLoaded) {
            c.isComplete ||
              ((c.isComplete = !0),
              c.$slide.siblings().trigger("onReset"),
              a.preload("inline"),
              w(c.$slide),
              c.$slide.addClass("fancybox-slide--complete"),
              n.each(a.slides, function (c, e) {
                e.pos >= a.currPos - 1 && e.pos <= a.currPos + 1
                  ? (d[e.pos] = e)
                  : e && (n.fancybox.stop(e.$slide), e.$slide.off().remove());
              }),
              (a.slides = d));
            a.isAnimating = !1;
            a.updateCursor();
            a.trigger("afterShow");
            if (c.opts.video.autoStart)
              c.$slide
                .find("video,audio")
                .filter(":visible:first")
                .trigger("play")
                .one("ended", function () {
                  Document.exitFullscreen
                    ? Document.exitFullscreen()
                    : this.webkitExitFullscreen && this.webkitExitFullscreen();
                  a.next();
                });
            if (c.opts.autoFocus && "html" === c.contentType) {
              var e = c.$content.find("input[autofocus]:enabled:visible:first");
              e.length ? e.trigger("focus") : a.focus(null, !0);
            }
            c.$slide.scrollTop(0).scrollLeft(0);
          }
        },
        preload: function (a) {
          var c;
          if (!(2 > this.group.length)) {
            var d = this.slides[this.currPos + 1];
            (c = this.slides[this.currPos - 1]) &&
              c.type === a &&
              this.loadSlide(c);
            d && d.type === a && this.loadSlide(d);
          }
        },
        focus: function (a, c) {
          if (!this.isClosing)
            if (
              ((c =
                !a && this.current && this.current.isComplete
                  ? this.current.$slide.find(
                      "*:visible" + (c ? ":not(.fancybox-close-small)" : "")
                    )
                  : this.$refs.container.find("*:visible")),
              (c = c
                .filter(
                  'a[href],area[href],input:not([disabled]):not([type="hidden"]):not([aria-hidden]),select:not([disabled]):not([aria-hidden]),textarea:not([disabled]):not([aria-hidden]),button:not([disabled]):not([aria-hidden]),iframe,object,embed,video,audio,[contenteditable],[tabindex]:not([tabindex^="-"])'
                )
                .filter(function () {
                  return (
                    "hidden" !== n(this).css("visibility") &&
                    !n(this).hasClass("disabled")
                  );
                })),
              c.length)
            ) {
              var d = c.index(u.activeElement);
              if (a && a.shiftKey) {
                if (0 > d || 0 == d)
                  a.preventDefault(), c.eq(c.length - 1).trigger("focus");
              } else if (0 > d || d == c.length - 1)
                a && a.preventDefault(), c.eq(0).trigger("focus");
            } else this.$refs.container.trigger("focus");
        },
        activate: function () {
          var a = this;
          n(".fancybox-container").each(function () {
            var c = n(this).data("FancyBox");
            c &&
              c.id !== a.id &&
              !c.isClosing &&
              (c.trigger("onDeactivate"), c.removeEvents(), (c.isVisible = !1));
          });
          a.isVisible = !0;
          if (a.current || a.isIdle) a.update(), a.updateControls();
          a.trigger("onActivate");
          a.addEvents();
        },
        close: function (a, d) {
          var e = this,
            f = e.current,
            k,
            h = function () {
              e.cleanUp(a);
            };
          if (e.isClosing) return !1;
          e.isClosing = !0;
          if (!1 === e.trigger("beforeClose", a))
            return (
              (e.isClosing = !1),
              c(function () {
                e.update();
              }),
              !1
            );
          e.removeEvents();
          var l = f.$content,
            p = f.opts.animationEffect;
          d = n.isNumeric(d) ? d : p ? f.opts.animationDuration : 0;
          f.$slide.removeClass(
            "fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"
          );
          !0 !== a ? n.fancybox.stop(f.$slide) : (p = !1);
          f.$slide.siblings().trigger("onReset").remove();
          d &&
            e.$refs.container
              .removeClass("fancybox-is-open")
              .addClass("fancybox-is-closing")
              .css("transition-duration", d + "ms");
          e.hideLoading(f);
          e.hideControls(!0);
          e.updateCursor();
          "zoom" !== p ||
            (l &&
              d &&
              "image" === f.type &&
              !e.isMoved() &&
              !f.hasError &&
              (k = e.getThumbPos(f))) ||
            (p = "fade");
          if ("zoom" === p) {
            n.fancybox.stop(l);
            p = n.fancybox.getTranslate(l);
            var m = {
              top: p.top,
              left: p.left,
              scaleX: p.width / k.width,
              scaleY: p.height / k.height,
              width: k.width,
              height: k.height,
            };
            p = f.opts.zoomOpacity;
            "auto" == p &&
              (p = 0.1 < Math.abs(f.width / f.height - k.width / k.height));
            p && (k.opacity = 0);
            n.fancybox.setTranslate(l, m);
            w(l);
            n.fancybox.animate(l, k, d, h);
            return !0;
          }
          p && d
            ? n.fancybox.animate(
                f.$slide
                  .addClass("fancybox-slide--previous")
                  .removeClass("fancybox-slide--current"),
                "fancybox-animated fancybox-fx-" + p,
                d,
                h
              )
            : !0 === a
            ? setTimeout(h, d)
            : h();
          return !0;
        },
        cleanUp: function (a) {
          var c = this.current.opts.$orig;
          this.current.$slide.trigger("onReset");
          this.$refs.container.empty().remove();
          this.trigger("afterClose", a);
          if (
            this.current.opts.backFocus &&
            ((c && c.length && c.is(":visible")) || (c = this.$trigger),
            c && c.length)
          ) {
            a = m.scrollX;
            var d = m.scrollY;
            c.trigger("focus");
            n("html, body").scrollTop(d).scrollLeft(a);
          }
          this.current = null;
          (c = n.fancybox.getInstance())
            ? c.activate()
            : (n("body").removeClass(
                "fancybox-active compensate-for-scrollbar"
              ),
              n("#fancybox-style-noscroll").remove());
        },
        trigger: function (a, c) {
          var e = Array.prototype.slice.call(arguments, 1),
            f = c && c.opts ? c : this.current,
            k;
          f ? e.unshift(f) : (f = this);
          e.unshift(this);
          n.isFunction(f.opts[a]) && (k = f.opts[a].apply(f, e));
          if (!1 === k) return k;
          "afterClose" !== a && this.$refs
            ? this.$refs.container.trigger(a + ".fb", e)
            : d.trigger(a + ".fb", e);
        },
        updateControls: function () {
          var a = this.current,
            c = a.index,
            d = this.$refs.container,
            e = this.$refs.caption,
            f = a.opts.caption;
          a.$slide.trigger("refresh");
          f && f.length
            ? ((this.$caption = e), e.children().eq(0).html(f))
            : (this.$caption = null);
          this.hasHiddenControls || this.isIdle || this.showControls();
          d.find("[data-fancybox-count]").html(this.group.length);
          d.find("[data-fancybox-index]").html(c + 1);
          d.find("[data-fancybox-prev]").prop(
            "disabled",
            !a.opts.loop && 0 >= c
          );
          d.find("[data-fancybox-next]").prop(
            "disabled",
            !a.opts.loop && c >= this.group.length - 1
          );
          "image" === a.type
            ? d
                .find("[data-fancybox-zoom]")
                .show()
                .end()
                .find("[data-fancybox-download]")
                .attr("href", a.opts.image.src || a.src)
                .show()
            : a.opts.toolbar &&
              d.find("[data-fancybox-download],[data-fancybox-zoom]").hide();
          n(u.activeElement).is(":hidden,[disabled]") &&
            this.$refs.container.trigger("focus");
        },
        hideControls: function (a) {
          var c = ["infobar", "toolbar", "nav"];
          (!a && this.current.opts.preventCaptionOverlap) || c.push("caption");
          this.$refs.container.removeClass(
            c
              .map(function (a) {
                return "fancybox-show-" + a;
              })
              .join(" ")
          );
          this.hasHiddenControls = !0;
        },
        showControls: function () {
          var a = this.current ? this.current.opts : this.opts,
            c = this.$refs.container;
          this.hasHiddenControls = !1;
          this.idleSecondsCounter = 0;
          c.toggleClass("fancybox-show-toolbar", !(!a.toolbar || !a.buttons))
            .toggleClass(
              "fancybox-show-infobar",
              !!(a.infobar && 1 < this.group.length)
            )
            .toggleClass("fancybox-show-caption", !!this.$caption)
            .toggleClass(
              "fancybox-show-nav",
              !!(a.arrows && 1 < this.group.length)
            )
            .toggleClass("fancybox-is-modal", !!a.modal);
        },
        toggleControls: function () {
          this.hasHiddenControls ? this.showControls() : this.hideControls();
        },
      });
      n.fancybox = {
        version: "3.5.7",
        defaults: l,
        getInstance: function (a) {
          var c = n(
              '.fancybox-container:not(".fancybox-is-closing"):last'
            ).data("FancyBox"),
            d = Array.prototype.slice.call(arguments, 1);
          return c instanceof q
            ? ("string" === n.type(a)
                ? c[a].apply(c, d)
                : "function" === n.type(a) && a.apply(c, d),
              c)
            : !1;
        },
        open: function (a, c, d) {
          return new q(a, c, d);
        },
        close: function (a) {
          var c = this.getInstance();
          c && (c.close(), !0 === a && this.close(a));
        },
        destroy: function () {
          this.close(!0);
          d.add("body").off("click.fb-start", "**");
        },
        isMobile:
          /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
            navigator.userAgent
          ),
        use3d: (function () {
          var a = u.createElement("div");
          return (
            m.getComputedStyle &&
            m.getComputedStyle(a) &&
            m.getComputedStyle(a).getPropertyValue("transform") &&
            !(u.documentMode && 11 > u.documentMode)
          );
        })(),
        getTranslate: function (a) {
          if (!a || !a.length) return !1;
          var c = a[0].getBoundingClientRect();
          return {
            top: c.top || 0,
            left: c.left || 0,
            width: c.width,
            height: c.height,
            opacity: parseFloat(a.css("opacity")),
          };
        },
        setTranslate: function (a, c) {
          var d = "",
            e = {};
          if (a && c) {
            if (c.left !== t || c.top !== t)
              (d =
                (c.left === t ? a.position().left : c.left) +
                "px, " +
                (c.top === t ? a.position().top : c.top) +
                "px"),
                (d = this.use3d
                  ? "translate3d(" + d + ", 0px)"
                  : "translate(" + d + ")");
            c.scaleX !== t && c.scaleY !== t
              ? (d += " scale(" + c.scaleX + ", " + c.scaleY + ")")
              : c.scaleX !== t && (d += " scaleX(" + c.scaleX + ")");
            d.length && (e.transform = d);
            c.opacity !== t && (e.opacity = c.opacity);
            c.width !== t && (e.width = c.width);
            c.height !== t && (e.height = c.height);
            return a.css(e);
          }
        },
        animate: function (a, c, d, e, f) {
          var h = this;
          n.isFunction(d) && ((e = d), (d = null));
          h.stop(a);
          var l = h.getTranslate(a);
          a.on(k, function (k) {
            if (
              !k ||
              !k.originalEvent ||
              (a.is(k.originalEvent.target) &&
                "z-index" != k.originalEvent.propertyName)
            )
              h.stop(a),
                n.isNumeric(d) && a.css("transition-duration", ""),
                n.isPlainObject(c)
                  ? c.scaleX !== t &&
                    c.scaleY !== t &&
                    h.setTranslate(a, {
                      top: c.top,
                      left: c.left,
                      width: l.width * c.scaleX,
                      height: l.height * c.scaleY,
                      scaleX: 1,
                      scaleY: 1,
                    })
                  : !0 !== f && a.removeClass(c),
                n.isFunction(e) && e(k);
          });
          n.isNumeric(d) && a.css("transition-duration", d + "ms");
          n.isPlainObject(c)
            ? (c.scaleX !== t &&
                c.scaleY !== t &&
                (delete c.width,
                delete c.height,
                a.parent().hasClass("fancybox-slide--image") &&
                  a.parent().addClass("fancybox-is-scaling")),
              n.fancybox.setTranslate(a, c))
            : a.addClass(c);
          a.data(
            "timer",
            setTimeout(function () {
              a.trigger(k);
            }, d + 33)
          );
        },
        stop: function (a, c) {
          a &&
            a.length &&
            (clearTimeout(a.data("timer")),
            c && a.trigger(k),
            a.off(k).css("transition-duration", ""),
            a.parent().removeClass("fancybox-is-scaling"));
        },
      };
      n.fn.fancybox = function (a) {
        var c;
        a = a || {};
        if ((c = a.selector || !1))
          n("body")
            .off("click.fb-start", c)
            .on("click.fb-start", c, { options: a }, h);
        else
          this.off("click.fb-start").on(
            "click.fb-start",
            { items: this, options: a },
            h
          );
        return this;
      };
      d.on("click.fb-start", "[data-fancybox]", h);
      d.on("click.fb-start", "[data-fancybox-trigger]", function (a) {
        n('[data-fancybox="' + n(this).attr("data-fancybox-trigger") + '"]')
          .eq(n(this).attr("data-fancybox-index") || 0)
          .trigger("click.fb-start", { $trigger: n(this) });
      });
      (function () {
        var a = null;
        d.on("mousedown mouseup focus blur", ".fancybox-button", function (c) {
          switch (c.type) {
            case "mousedown":
              a = n(this);
              break;
            case "mouseup":
              a = null;
              break;
            case "focusin":
              n(".fancybox-button").removeClass("fancybox-focus");
              n(this).is(a) ||
                n(this).is("[disabled]") ||
                n(this).addClass("fancybox-focus");
              break;
            case "focusout":
              n(".fancybox-button").removeClass("fancybox-focus");
          }
        });
      })();
    }
})(window, document, jQuery);
(function (m) {
  var u = {
      youtube: {
        matcher:
          /(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,
        params: {
          autoplay: 1,
          autohide: 1,
          fs: 1,
          rel: 0,
          hd: 1,
          wmode: "transparent",
          enablejsapi: 1,
          html5: 1,
        },
        paramPlace: 8,
        type: "iframe",
        url: "https://www.youtube-nocookie.com/embed/$4",
        thumb: "https://img.youtube.com/vi/$4/hqdefault.jpg",
      },
      vimeo: {
        matcher: /^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,
        params: {
          autoplay: 1,
          hd: 1,
          show_title: 1,
          show_byline: 1,
          show_portrait: 0,
          fullscreen: 1,
        },
        paramPlace: 3,
        type: "iframe",
        url: "//player.vimeo.com/video/$2",
      },
      instagram: {
        matcher: /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
        type: "image",
        url: "//$1/p/$2/media/?size=l",
      },
      gmap_place: {
        matcher:
          /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,
        type: "iframe",
        url: function (h) {
          return (
            "//maps.google." +
            h[2] +
            "/?ll=" +
            (h[9]
              ? h[9] +
                "&z=" +
                Math.floor(h[10]) +
                (h[12] ? h[12].replace(/^\//, "&") : "")
              : h[12] + ""
            ).replace(/\?/, "&") +
            "&output=" +
            (h[12] && 0 < h[12].indexOf("layer=c") ? "svembed" : "embed")
          );
        },
      },
      gmap_search: {
        matcher:
          /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,
        type: "iframe",
        url: function (h) {
          return (
            "//maps.google." +
            h[2] +
            "/maps?q=" +
            h[5].replace("query=", "q=").replace("api=1", "") +
            "&output=embed"
          );
        },
      },
    },
    n = function (h, l, f) {
      if (h)
        return (
          (f = f || ""),
          "object" === m.type(f) && (f = m.param(f, !0)),
          m.each(l, function (d, a) {
            h = h.replace("$" + d, a || "");
          }),
          f.length && (h += (0 < h.indexOf("?") ? "&" : "?") + f),
          h
        );
    };
  m(document).on("objectNeedsType.fb", function (h, l, f) {
    var d = f.src || "",
      a = !1,
      c,
      e,
      k,
      t,
      v,
      q;
    h = m.extend(!0, {}, u, f.opts.media);
    m.each(h, function (h, l) {
      if ((e = d.match(l.matcher))) {
        a = l.type;
        q = h;
        v = {};
        if (l.paramPlace && e[l.paramPlace]) {
          t = e[l.paramPlace];
          "?" == t[0] && (t = t.substring(1));
          t = t.split("&");
          for (var p = 0; p < t.length; ++p) {
            var u = t[p].split("=", 2);
            2 == u.length &&
              (v[u[0]] = decodeURIComponent(u[1].replace(/\+/g, " ")));
          }
        }
        k = m.extend(!0, {}, l.params, f.opts[h], v);
        d =
          "function" === m.type(l.url)
            ? l.url.call(this, e, k, f)
            : n(l.url, e, k);
        c =
          "function" === m.type(l.thumb)
            ? l.thumb.call(this, e, k, f)
            : n(l.thumb, e);
        "youtube" === h
          ? (d = d.replace(/&t=((\d+)m)?(\d+)s/, function (a, c, d, e) {
              return (
                "&start=" + ((d ? 60 * parseInt(d, 10) : 0) + parseInt(e, 10))
              );
            }))
          : "vimeo" === h && (d = d.replace("&%23", "#"));
        return !1;
      }
    });
    a
      ? (f.opts.thumb ||
          (f.opts.$thumb && f.opts.$thumb.length) ||
          (f.opts.thumb = c),
        "iframe" === a &&
          (f.opts = m.extend(!0, f.opts, {
            iframe: { preload: !1, attr: { scrolling: "no" } },
          })),
        m.extend(f, {
          type: a,
          src: d,
          origSrc: f.src,
          contentSource: q,
          contentType:
            "image" === a
              ? "image"
              : "gmap_place" == q || "gmap_search" == q
              ? "map"
              : "video",
        }))
      : d && (f.type = f.opts.defaultType);
  });
  var t = {
    youtube: {
      src: "https://www.youtube.com/iframe_api",
      class: "YT",
      loading: !1,
      loaded: !1,
    },
    vimeo: {
      src: "https://player.vimeo.com/api/player.js",
      class: "Vimeo",
      loading: !1,
      loaded: !1,
    },
    load: function (h) {
      var l = this;
      if (this[h].loaded)
        setTimeout(function () {
          l.done(h);
        });
      else if (!this[h].loading) {
        this[h].loading = !0;
        var f = document.createElement("script");
        f.type = "text/javascript";
        f.src = this[h].src;
        "youtube" === h
          ? (window.onYouTubeIframeAPIReady = function () {
              l[h].loaded = !0;
              l.done(h);
            })
          : (f.onload = function () {
              l[h].loaded = !0;
              l.done(h);
            });
        document.body.appendChild(f);
      }
    },
    done: function (h) {
      var l;
      "youtube" === h && delete window.onYouTubeIframeAPIReady;
      if ((l = m.fancybox.getInstance())) {
        var f = l.current.$content.find("iframe");
        "youtube" === h && void 0 !== YT && YT
          ? (h = new YT.Player(f.attr("id"), {
              events: {
                onStateChange: function (d) {
                  0 == d.data && l.next();
                },
              },
            }))
          : "vimeo" === h &&
            void 0 !== Vimeo &&
            Vimeo &&
            ((h = new Vimeo.Player(f)),
            h.on("ended", function () {
              l.next();
            }));
      }
    },
  };
  m(document).on({
    "afterShow.fb": function (h, l, f) {
      1 < l.group.length &&
        ("youtube" === f.contentSource || "vimeo" === f.contentSource) &&
        t.load(f.contentSource);
    },
  });
})(jQuery);
(function (m, u, n) {
  var t = (function () {
      return (
        m.requestAnimationFrame ||
        m.webkitRequestAnimationFrame ||
        m.mozRequestAnimationFrame ||
        m.oRequestAnimationFrame ||
        function (a) {
          return m.setTimeout(a, 1e3 / 60);
        }
      );
    })(),
    h = (function () {
      return (
        m.cancelAnimationFrame ||
        m.webkitCancelAnimationFrame ||
        m.mozCancelAnimationFrame ||
        m.oCancelAnimationFrame ||
        function (a) {
          m.clearTimeout(a);
        }
      );
    })(),
    l = function (a) {
      var c = [];
      a = a.originalEvent || a || m.e;
      a =
        a.touches && a.touches.length
          ? a.touches
          : a.changedTouches && a.changedTouches.length
          ? a.changedTouches
          : [a];
      for (var d in a)
        a[d].pageX
          ? c.push({ x: a[d].pageX, y: a[d].pageY })
          : a[d].clientX && c.push({ x: a[d].clientX, y: a[d].clientY });
      return c;
    },
    f = function (a, c, d) {
      return c && a
        ? "x" === d
          ? a.x - c.x
          : "y" === d
          ? a.y - c.y
          : Math.sqrt(Math.pow(a.x - c.x, 2) + Math.pow(a.y - c.y, 2))
        : 0;
    },
    d = function (a) {
      if (
        a.is(
          'a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe'
        ) ||
        n.isFunction(a.get(0).onclick) ||
        a.data("selectable")
      )
        return !0;
      var c = 0;
      a = a[0].attributes;
      for (var d = a.length; c < d; c++)
        if ("data-fancybox-" === a[c].nodeName.substr(0, 14)) return !0;
      return !1;
    },
    a = function (a) {
      for (var c; ; ) {
        c = a.get(0);
        var d = m.getComputedStyle(c)["overflow-y"],
          e = m.getComputedStyle(c)["overflow-x"];
        e = ("scroll" === e || "auto" === e) && c.scrollWidth > c.clientWidth;
        if (
          (c =
            (("scroll" === d || "auto" === d) &&
              c.scrollHeight > c.clientHeight) ||
            e)
        )
          break;
        a = a.parent();
        if (!a.length || a.hasClass("fancybox-stage") || a.is("body")) break;
      }
      return c;
    },
    c = function (a) {
      this.instance = a;
      this.$bg = a.$refs.bg;
      this.$stage = a.$refs.stage;
      this.$container = a.$refs.container;
      this.destroy();
      this.$container.on(
        "touchstart.fb.touch mousedown.fb.touch",
        n.proxy(this, "ontouchstart")
      );
    };
  c.prototype.destroy = function () {
    this.$container.off(".fb.touch");
    n(u).off(".fb.touch");
    this.requestId && (h(this.requestId), (this.requestId = null));
    this.tapped && (clearTimeout(this.tapped), (this.tapped = null));
  };
  c.prototype.ontouchstart = function (c) {
    var e = n(c.target),
      h = this.instance,
      v = h.current,
      q = v.$slide,
      p = v.$content,
      t = "touchstart" == c.type;
    t && this.$container.off("mousedown.fb.touch");
    if (
      !(
        (c.originalEvent && 2 == c.originalEvent.button) ||
        !q.length ||
        !e.length ||
        d(e) ||
        d(e.parent()) ||
        (!e.is("img") &&
          c.originalEvent.clientX > e[0].clientWidth + e.offset().left)
      )
    )
      if (!v || h.isAnimating || v.$slide.hasClass("fancybox-animated"))
        c.stopPropagation(), c.preventDefault();
      else if (
        ((this.realPoints = this.startPoints = l(c)), this.startPoints.length)
      ) {
        v.touch && c.stopPropagation();
        this.startEvent = c;
        this.canTap = !0;
        this.$target = e;
        this.$content = p;
        this.opts = v.opts.touch;
        this.isScrolling =
          this.isZooming =
          this.isSwiping =
          this.isPanning =
            !1;
        this.canPan = h.canPan();
        this.startTime = new Date().getTime();
        this.distanceX = this.distanceY = this.distance = 0;
        this.canvasWidth = Math.round(q[0].clientWidth);
        this.canvasHeight = Math.round(q[0].clientHeight);
        this.contentLastPos = null;
        this.contentStartPos = n.fancybox.getTranslate(this.$content) || {
          top: 0,
          left: 0,
        };
        this.sliderStartPos = n.fancybox.getTranslate(q);
        this.stagePos = n.fancybox.getTranslate(h.$refs.stage);
        this.sliderStartPos.top -= this.stagePos.top;
        this.sliderStartPos.left -= this.stagePos.left;
        this.contentStartPos.top -= this.stagePos.top;
        this.contentStartPos.left -= this.stagePos.left;
        n(u)
          .off(".fb.touch")
          .on(
            t
              ? "touchend.fb.touch touchcancel.fb.touch"
              : "mouseup.fb.touch mouseleave.fb.touch",
            n.proxy(this, "ontouchend")
          )
          .on(
            t ? "touchmove.fb.touch" : "mousemove.fb.touch",
            n.proxy(this, "ontouchmove")
          );
        n.fancybox.isMobile && u.addEventListener("scroll", this.onscroll, !0);
        if (
          (!this.opts && !this.canPan) ||
          (!e.is(this.$stage) && !this.$stage.find(e).length)
        )
          if (
            (e.is(".fancybox-image") && c.preventDefault(),
            !n.fancybox.isMobile || !e.parents(".fancybox-caption").length)
          )
            return;
        this.isScrollable = a(e) || a(e.parent());
        (n.fancybox.isMobile && this.isScrollable) || c.preventDefault();
        if (1 === this.startPoints.length || v.hasError)
          this.canPan
            ? (n.fancybox.stop(this.$content), (this.isPanning = !0))
            : (this.isSwiping = !0),
            this.$container.addClass("fancybox-is-grabbing");
        2 === this.startPoints.length &&
          "image" === v.type &&
          (v.isLoaded || v.$ghost) &&
          ((this.isPanning = this.isSwiping = this.canTap = !1),
          (this.isZooming = !0),
          n.fancybox.stop(this.$content),
          (this.centerPointStartX =
            0.5 * (this.startPoints[0].x + this.startPoints[1].x) -
            n(m).scrollLeft()),
          (this.centerPointStartY =
            0.5 * (this.startPoints[0].y + this.startPoints[1].y) -
            n(m).scrollTop()),
          (this.percentageOfImageAtPinchPointX =
            (this.centerPointStartX - this.contentStartPos.left) /
            this.contentStartPos.width),
          (this.percentageOfImageAtPinchPointY =
            (this.centerPointStartY - this.contentStartPos.top) /
            this.contentStartPos.height),
          (this.startDistanceBetweenFingers = f(
            this.startPoints[0],
            this.startPoints[1]
          )));
      }
  };
  c.prototype.onscroll = function (a) {
    this.isScrolling = !0;
    u.removeEventListener("scroll", this.onscroll, !0);
  };
  c.prototype.ontouchmove = function (a) {
    if (void 0 !== a.originalEvent.buttons && 0 === a.originalEvent.buttons)
      this.ontouchend(a);
    else if (this.isScrolling) this.canTap = !1;
    else if (
      ((this.newPoints = l(a)),
      (this.opts || this.canPan) &&
        this.newPoints.length &&
        this.newPoints.length &&
        ((this.isSwiping && !0 === this.isSwiping) || a.preventDefault(),
        (this.distanceX = f(this.newPoints[0], this.startPoints[0], "x")),
        (this.distanceY = f(this.newPoints[0], this.startPoints[0], "y")),
        (this.distance = f(this.newPoints[0], this.startPoints[0])),
        0 < this.distance))
    )
      if (this.isSwiping) this.onSwipe(a);
      else if (this.isPanning) this.onPan();
      else if (this.isZooming) this.onZoom();
  };
  c.prototype.onSwipe = function (a) {
    var c = this,
      d = c.instance;
    a = c.isSwiping;
    var e = c.sliderStartPos.left || 0;
    !0 === a
      ? 10 < Math.abs(c.distance) &&
        ((c.canTap = !1),
        2 > d.group.length && c.opts.vertical
          ? (c.isSwiping = "y")
          : d.isDragging ||
            !1 === c.opts.vertical ||
            ("auto" === c.opts.vertical && 800 < n(m).width())
          ? (c.isSwiping = "x")
          : ((a = Math.abs(
              (180 * Math.atan2(c.distanceY, c.distanceX)) / Math.PI
            )),
            (c.isSwiping = 45 < a && 135 > a ? "y" : "x")),
        "y" === c.isSwiping && n.fancybox.isMobile && c.isScrollable
          ? (c.isScrolling = !0)
          : ((d.isDragging = c.isSwiping),
            (c.startPoints = c.newPoints),
            n.each(d.slides, function (a, e) {
              n.fancybox.stop(e.$slide);
              a = n.fancybox.getTranslate(e.$slide);
              var f = n.fancybox.getTranslate(d.$refs.stage);
              e.$slide
                .css({ transform: "", opacity: "", "transition-duration": "" })
                .removeClass("fancybox-animated")
                .removeClass(function (a, c) {
                  return (c.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ");
                });
              e.pos === d.current.pos &&
                ((c.sliderStartPos.top = a.top - f.top),
                (c.sliderStartPos.left = a.left - f.left));
              n.fancybox.setTranslate(e.$slide, {
                top: a.top - f.top,
                left: a.left - f.left,
              });
            }),
            d.SlideShow && d.SlideShow.isActive && d.SlideShow.stop()))
      : ("x" == a &&
          (e =
            0 < c.distanceX &&
            (2 > c.instance.group.length ||
              (0 === c.instance.current.index && !c.instance.current.opts.loop))
              ? e + Math.pow(c.distanceX, 0.8)
              : 0 > c.distanceX &&
                (2 > c.instance.group.length ||
                  (c.instance.current.index === c.instance.group.length - 1 &&
                    !c.instance.current.opts.loop))
              ? e - Math.pow(-c.distanceX, 0.8)
              : e + c.distanceX),
        (c.sliderLastPos = {
          top: "x" == a ? 0 : c.sliderStartPos.top + c.distanceY,
          left: e,
        }),
        c.requestId && (h(c.requestId), (c.requestId = null)),
        (c.requestId = t(function () {
          c.sliderLastPos &&
            (n.each(c.instance.slides, function (a, d) {
              a = d.pos - c.instance.currPos;
              n.fancybox.setTranslate(d.$slide, {
                top: c.sliderLastPos.top,
                left:
                  c.sliderLastPos.left + a * c.canvasWidth + a * d.opts.gutter,
              });
            }),
            c.$container.addClass("fancybox-is-sliding"));
        })));
  };
  c.prototype.onPan = function () {
    var a = this;
    f(a.newPoints[0], a.realPoints[0]) < (n.fancybox.isMobile ? 10 : 5)
      ? (a.startPoints = a.newPoints)
      : ((a.canTap = !1),
        (a.contentLastPos = a.limitMovement()),
        a.requestId && h(a.requestId),
        (a.requestId = t(function () {
          n.fancybox.setTranslate(a.$content, a.contentLastPos);
        })));
  };
  c.prototype.limitMovement = function () {
    var a = this.canvasWidth,
      c = this.canvasHeight,
      d = this.distanceX,
      f = this.distanceY,
      h = this.contentStartPos,
      l = h.left,
      m = h.top,
      n = h.width,
      t = h.height,
      u = n > a ? l + d : l,
      B = m + f;
    h = Math.max(0, 0.5 * a - 0.5 * n);
    var G = Math.max(0, 0.5 * c - 0.5 * t);
    a = Math.min(a - n, 0.5 * a - 0.5 * n);
    c = Math.min(c - t, 0.5 * c - 0.5 * t);
    0 < d && u > h && (u = h - 1 + Math.pow(-h + l + d, 0.8) || 0);
    0 > d && u < a && (u = a + 1 - Math.pow(a - l - d, 0.8) || 0);
    0 < f && B > G && (B = G - 1 + Math.pow(-G + m + f, 0.8) || 0);
    0 > f && B < c && (B = c + 1 - Math.pow(c - m - f, 0.8) || 0);
    return { top: B, left: u };
  };
  c.prototype.limitPosition = function (a, c, d, f) {
    var e = this.canvasWidth,
      h = this.canvasHeight;
    d > e
      ? ((a = 0 < a ? 0 : a), (a = a < e - d ? e - d : a))
      : (a = Math.max(0, e / 2 - d / 2));
    f > h
      ? ((c = 0 < c ? 0 : c), (c = c < h - f ? h - f : c))
      : (c = Math.max(0, h / 2 - f / 2));
    return { top: c, left: a };
  };
  c.prototype.onZoom = function () {
    var a = this,
      c = a.contentStartPos,
      d = c.width,
      l = c.height,
      q = c.left,
      p = c.top,
      u = f(a.newPoints[0], a.newPoints[1]) / a.startDistanceBetweenFingers;
    c = Math.floor(d * u);
    var y = Math.floor(l * u);
    d = (d - c) * a.percentageOfImageAtPinchPointX;
    l = (l - y) * a.percentageOfImageAtPinchPointY;
    var F = (a.newPoints[0].x + a.newPoints[1].x) / 2 - n(m).scrollLeft(),
      E = (a.newPoints[0].y + a.newPoints[1].y) / 2 - n(m).scrollTop();
    q = {
      top: p + (l + (E - a.centerPointStartY)),
      left: q + (d + (F - a.centerPointStartX)),
      scaleX: u,
      scaleY: u,
    };
    a.canTap = !1;
    a.newWidth = c;
    a.newHeight = y;
    a.contentLastPos = q;
    a.requestId && h(a.requestId);
    a.requestId = t(function () {
      n.fancybox.setTranslate(a.$content, a.contentLastPos);
    });
  };
  c.prototype.ontouchend = function (a) {
    var c = this.isSwiping,
      d = this.isPanning,
      e = this.isZooming,
      f = this.isScrolling;
    this.endPoints = l(a);
    this.dMs = Math.max(new Date().getTime() - this.startTime, 1);
    this.$container.removeClass("fancybox-is-grabbing");
    n(u).off(".fb.touch");
    u.removeEventListener("scroll", this.onscroll, !0);
    this.requestId && (h(this.requestId), (this.requestId = null));
    this.isScrolling = this.isZooming = this.isPanning = this.isSwiping = !1;
    this.instance.isDragging = !1;
    if (this.canTap) return this.onTap(a);
    this.speed = 100;
    this.velocityX = (this.distanceX / this.dMs) * 0.5;
    this.velocityY = (this.distanceY / this.dMs) * 0.5;
    d ? this.endPanning() : e ? this.endZooming() : this.endSwiping(c, f);
  };
  c.prototype.endSwiping = function (a, c) {
    var d = !1,
      e = this.instance.group.length,
      f = Math.abs(this.distanceX);
    e = "x" == a && 1 < e && ((130 < this.dMs && 10 < f) || 50 < f);
    this.sliderLastPos = null;
    "y" == a && !c && 50 < Math.abs(this.distanceY)
      ? (n.fancybox.animate(
          this.instance.current.$slide,
          {
            top:
              this.sliderStartPos.top + this.distanceY + 150 * this.velocityY,
            opacity: 0,
          },
          200
        ),
        (d = this.instance.close(!0, 250)))
      : e && 0 < this.distanceX
      ? (d = this.instance.previous(300))
      : e && 0 > this.distanceX && (d = this.instance.next(300));
    !1 !== d || ("x" != a && "y" != a) || this.instance.centerSlide(200);
    this.$container.removeClass("fancybox-is-sliding");
  };
  c.prototype.endPanning = function () {
    if (this.contentLastPos) {
      if (!1 === this.opts.momentum || 350 < this.dMs)
        var a = this.contentLastPos.left,
          c = this.contentLastPos.top;
      else
        (a = this.contentLastPos.left + 500 * this.velocityX),
          (c = this.contentLastPos.top + 500 * this.velocityY);
      a = this.limitPosition(
        a,
        c,
        this.contentStartPos.width,
        this.contentStartPos.height
      );
      a.width = this.contentStartPos.width;
      a.height = this.contentStartPos.height;
      n.fancybox.animate(this.$content, a, 366);
    }
  };
  c.prototype.endZooming = function () {
    var a = this.instance.current,
      c = this.newWidth,
      d = this.newHeight;
    if (this.contentLastPos) {
      var f = this.contentLastPos.left,
        h = this.contentLastPos.top;
      n.fancybox.setTranslate(this.$content, {
        top: h,
        left: f,
        width: c,
        height: d,
        scaleX: 1,
        scaleY: 1,
      });
      c < this.canvasWidth && d < this.canvasHeight
        ? this.instance.scaleToFit(150)
        : c > a.width || d > a.height
        ? this.instance.scaleToActual(
            this.centerPointStartX,
            this.centerPointStartY,
            150
          )
        : ((a = this.limitPosition(f, h, c, d)),
          n.fancybox.animate(this.$content, a, 150));
    }
  };
  c.prototype.onTap = function (a) {
    var c = this,
      d = n(a.target),
      e = c.instance,
      f = e.current,
      h = (a && l(a)) || c.startPoints,
      t = h[0] ? h[0].x - n(m).scrollLeft() - c.stagePos.left : 0,
      u = h[0] ? h[0].y - n(m).scrollTop() - c.stagePos.top : 0,
      F = function (d) {
        d = f.opts[d];
        n.isFunction(d) && (d = d.apply(e, [f, a]));
        if (d)
          switch (d) {
            case "close":
              e.close(c.startEvent);
              break;
            case "toggleControls":
              e.toggleControls();
              break;
            case "next":
              e.next();
              break;
            case "nextOrClose":
              1 < e.group.length ? e.next() : e.close(c.startEvent);
              break;
            case "zoom":
              "image" == f.type &&
                (f.isLoaded || f.$ghost) &&
                (e.canPan()
                  ? e.scaleToFit()
                  : e.isScaledDown()
                  ? e.scaleToActual(t, u)
                  : 2 > e.group.length && e.close(c.startEvent));
          }
      };
    if (!a.originalEvent || 2 != a.originalEvent.button)
      if (d.is("img") || !(t > d[0].clientWidth + d.offset().left)) {
        if (
          d.is(
            ".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"
          )
        )
          var E = "Outside";
        else if (d.is(".fancybox-slide")) E = "Slide";
        else if (
          e.current.$content &&
          e.current.$content.find(d).addBack().filter(d).length
        )
          E = "Content";
        else return;
        if (c.tapped) {
          clearTimeout(c.tapped);
          c.tapped = null;
          if (50 < Math.abs(t - c.tapX) || 50 < Math.abs(u - c.tapY))
            return this;
          F("dblclick" + E);
        } else
          (c.tapX = t),
            (c.tapY = u),
            f.opts["dblclick" + E] &&
            f.opts["dblclick" + E] !== f.opts["click" + E]
              ? (c.tapped = setTimeout(function () {
                  c.tapped = null;
                  e.isAnimating || F("click" + E);
                }, 500))
              : F("click" + E);
        return this;
      }
  };
  n(u)
    .on("onActivate.fb", function (a, d) {
      d && !d.Guestures && (d.Guestures = new c(d));
    })
    .on("beforeClose.fb", function (a, c) {
      c && c.Guestures && c.Guestures.destroy();
    });
})(window, document, jQuery);
(function (m, u) {
  u.extend(!0, u.fancybox.defaults, {
    btnTpl: {
      slideShow:
        '<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>',
    },
    slideShow: { autoStart: !1, speed: 3e3, progress: !0 },
  });
  var n = function (m) {
    this.instance = m;
    this.init();
  };
  u.extend(n.prototype, {
    timer: null,
    isActive: !1,
    $button: null,
    init: function () {
      var m = this,
        h = m.instance,
        l = h.group[h.currIndex].opts.slideShow;
      m.$button = h.$refs.toolbar
        .find("[data-fancybox-play]")
        .on("click", function () {
          m.toggle();
        });
      2 > h.group.length || !l
        ? m.$button.hide()
        : l.progress &&
          (m.$progress = u('<div class="fancybox-progress"></div>').appendTo(
            h.$refs.inner
          ));
    },
    set: function (m) {
      var h = this.instance,
        l = h.current;
      l && (!0 === m || l.opts.loop || h.currIndex < h.group.length - 1)
        ? this.isActive &&
          "video" !== l.contentType &&
          (this.$progress &&
            u.fancybox.animate(
              this.$progress.show(),
              { scaleX: 1 },
              l.opts.slideShow.speed
            ),
          (this.timer = setTimeout(function () {
            h.current.opts.loop || h.current.index != h.group.length - 1
              ? h.next()
              : h.jumpTo(0);
          }, l.opts.slideShow.speed)))
        : (this.stop(), (h.idleSecondsCounter = 0), h.showControls());
    },
    clear: function () {
      clearTimeout(this.timer);
      this.timer = null;
      this.$progress && this.$progress.removeAttr("style").hide();
    },
    start: function () {
      var m = this.instance.current;
      m &&
        (this.$button
          .attr("title", (m.opts.i18n[m.opts.lang] || m.opts.i18n.en).PLAY_STOP)
          .removeClass("fancybox-button--play")
          .addClass("fancybox-button--pause"),
        (this.isActive = !0),
        m.isComplete && this.set(!0),
        this.instance.trigger("onSlideShowChange", !0));
    },
    stop: function () {
      var m = this.instance.current;
      this.clear();
      this.$button
        .attr("title", (m.opts.i18n[m.opts.lang] || m.opts.i18n.en).PLAY_START)
        .removeClass("fancybox-button--pause")
        .addClass("fancybox-button--play");
      this.isActive = !1;
      this.instance.trigger("onSlideShowChange", !1);
      this.$progress && this.$progress.removeAttr("style").hide();
    },
    toggle: function () {
      this.isActive ? this.stop() : this.start();
    },
  });
  u(m).on({
    "onInit.fb": function (m, h) {
      h && !h.SlideShow && (h.SlideShow = new n(h));
    },
    "beforeShow.fb": function (m, h, l, f) {
      m = h && h.SlideShow;
      f
        ? m && l.opts.slideShow.autoStart && m.start()
        : m && m.isActive && m.clear();
    },
    "afterShow.fb": function (m, h, l) {
      (m = h && h.SlideShow) && m.isActive && m.set();
    },
    "afterKeydown.fb": function (n, h, l, f, d) {
      !(n = h && h.SlideShow) ||
        !l.opts.slideShow ||
        (80 !== d && 32 !== d) ||
        u(m.activeElement).is("button,a,input") ||
        (f.preventDefault(), n.toggle());
    },
    "beforeClose.fb onDeactivate.fb": function (m, h) {
      (m = h && h.SlideShow) && m.stop();
    },
  });
  u(m).on("visibilitychange", function () {
    var n = u.fancybox.getInstance();
    (n = n && n.SlideShow) && n.isActive && (m.hidden ? n.clear() : n.set());
  });
})(document, jQuery);
(function (m, u) {
  var n = (function () {
    for (
      var h = [
          "requestFullscreen exitFullscreen fullscreenElement fullscreenEnabled fullscreenchange fullscreenerror".split(
            " "
          ),
          "webkitRequestFullscreen webkitExitFullscreen webkitFullscreenElement webkitFullscreenEnabled webkitfullscreenchange webkitfullscreenerror".split(
            " "
          ),
          "webkitRequestFullScreen webkitCancelFullScreen webkitCurrentFullScreenElement webkitCancelFullScreen webkitfullscreenchange webkitfullscreenerror".split(
            " "
          ),
          "mozRequestFullScreen mozCancelFullScreen mozFullScreenElement mozFullScreenEnabled mozfullscreenchange mozfullscreenerror".split(
            " "
          ),
          "msRequestFullscreen msExitFullscreen msFullscreenElement msFullscreenEnabled MSFullscreenChange MSFullscreenError".split(
            " "
          ),
        ],
        l = {},
        f = 0;
      f < h.length;
      f++
    ) {
      var d = h[f];
      if (d && d[1] in m) {
        for (f = 0; f < d.length; f++) l[h[0][f]] = d[f];
        return l;
      }
    }
    return !1;
  })();
  if (n) {
    var t = {
      request: function (h) {
        h = h || m.documentElement;
        h[n.requestFullscreen](h.ALLOW_KEYBOARD_INPUT);
      },
      exit: function () {
        m[n.exitFullscreen]();
      },
      toggle: function (h) {
        h = h || m.documentElement;
        this.isFullscreen() ? this.exit() : this.request(h);
      },
      isFullscreen: function () {
        return !!m[n.fullscreenElement];
      },
      enabled: function () {
        return !!m[n.fullscreenEnabled];
      },
    };
    u.extend(!0, u.fancybox.defaults, {
      btnTpl: {
        fullScreen:
          '<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>',
      },
      fullScreen: { autoStart: !1 },
    });
    u(m).on(n.fullscreenchange, function () {
      var h = t.isFullscreen(),
        l = u.fancybox.getInstance();
      l &&
        (l.current &&
          "image" === l.current.type &&
          l.isAnimating &&
          ((l.isAnimating = !1),
          l.update(!0, !0, 0),
          l.isComplete || l.complete()),
        l.trigger("onFullscreenChange", h),
        l.$refs.container.toggleClass("fancybox-is-fullscreen", h),
        l.$refs.toolbar
          .find("[data-fancybox-fullscreen]")
          .toggleClass("fancybox-button--fsenter", !h)
          .toggleClass("fancybox-button--fsexit", h));
    });
  }
  u(m).on({
    "onInit.fb": function (h, l) {
      n
        ? l && l.group[l.currIndex].opts.fullScreen
          ? ((h = l.$refs.container),
            h.on(
              "click.fb-fullscreen",
              "[data-fancybox-fullscreen]",
              function (f) {
                f.stopPropagation();
                f.preventDefault();
                t.toggle();
              }
            ),
            l.opts.fullScreen &&
              !0 === l.opts.fullScreen.autoStart &&
              t.request(),
            (l.FullScreen = t))
          : l && l.$refs.toolbar.find("[data-fancybox-fullscreen]").hide()
        : l.$refs.toolbar.find("[data-fancybox-fullscreen]").remove();
    },
    "afterKeydown.fb": function (h, l, f, d, a) {
      l &&
        l.FullScreen &&
        70 === a &&
        (d.preventDefault(), l.FullScreen.toggle());
    },
    "beforeClose.fb": function (h, l) {
      l &&
        l.FullScreen &&
        l.$refs.container.hasClass("fancybox-is-fullscreen") &&
        t.exit();
    },
  });
})(document, jQuery);
(function (m, u) {
  u.fancybox.defaults = u.extend(
    !0,
    {
      btnTpl: {
        thumbs:
          '<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>',
      },
      thumbs: {
        autoStart: !1,
        hideOnClose: !0,
        parentEl: ".fancybox-container",
        axis: "y",
      },
    },
    u.fancybox.defaults
  );
  var n = function (m) {
    this.init(m);
  };
  u.extend(n.prototype, {
    $button: null,
    $grid: null,
    $list: null,
    isVisible: !1,
    isActive: !1,
    init: function (m) {
      var h = this,
        l = m.group,
        f = 0;
      h.instance = m;
      h.opts = l[m.currIndex].opts.thumbs;
      m.Thumbs = h;
      h.$button = m.$refs.toolbar.find("[data-fancybox-thumbs]");
      m = 0;
      for (var d = l.length; m < d && !(l[m].thumb && f++, 1 < f); m++);
      1 < f && h.opts
        ? (h.$button.removeAttr("style").on("click", function () {
            h.toggle();
          }),
          (h.isActive = !0))
        : h.$button.hide();
    },
    create: function () {
      var m = this.instance,
        h = this.opts.parentEl,
        l = [],
        f;
      this.$grid ||
        ((this.$grid = u(
          '<div class="fancybox-thumbs fancybox-thumbs-' +
            this.opts.axis +
            '"></div>'
        ).appendTo(m.$refs.container.find(h).addBack().filter(h))),
        this.$grid.on("click", "a", function () {
          m.jumpTo(u(this).attr("data-index"));
        }));
      this.$list ||
        (this.$list = u('<div class="fancybox-thumbs__list">').appendTo(
          this.$grid
        ));
      u.each(m.group, function (d, a) {
        (f = a.thumb) || "image" !== a.type || (f = a.src);
        l.push(
          '<a href="javascript:;" tabindex="0" data-index="' +
            d +
            '"' +
            (f && f.length
              ? ' style="background-image:url(' + f + ')"'
              : 'class="fancybox-thumbs-missing"') +
            "></a>"
        );
      });
      this.$list[0].innerHTML = l.join("");
      "x" === this.opts.axis &&
        this.$list.width(
          parseInt(this.$grid.css("padding-right"), 10) +
            m.group.length * this.$list.children().eq(0).outerWidth(!0)
        );
    },
    focus: function (m) {
      var h = this.$list,
        l = this.$grid;
      if (this.instance.current) {
        var f = h
            .children()
            .removeClass("fancybox-thumbs-active")
            .filter('[data-index="' + this.instance.current.index + '"]')
            .addClass("fancybox-thumbs-active"),
          d = f.position();
        "y" === this.opts.axis &&
        (0 > d.top || d.top > h.height() - f.outerHeight())
          ? h.stop().animate({ scrollTop: h.scrollTop() + d.top }, m)
          : "x" === this.opts.axis &&
            (d.left < l.scrollLeft() ||
              d.left > l.scrollLeft() + (l.width() - f.outerWidth())) &&
            h.parent().stop().animate({ scrollLeft: d.left }, m);
      }
    },
    update: function () {
      this.instance.$refs.container.toggleClass(
        "fancybox-show-thumbs",
        this.isVisible
      );
      this.isVisible
        ? (this.$grid || this.create(),
          this.instance.trigger("onThumbsShow"),
          this.focus(0))
        : this.$grid && this.instance.trigger("onThumbsHide");
      this.instance.update();
    },
    hide: function () {
      this.isVisible = !1;
      this.update();
    },
    show: function () {
      this.isVisible = !0;
      this.update();
    },
    toggle: function () {
      this.isVisible = !this.isVisible;
      this.update();
    },
  });
  u(m).on({
    "onInit.fb": function (m, h) {
      h &&
        !h.Thumbs &&
        ((m = new n(h)), m.isActive && !0 === m.opts.autoStart && m.show());
    },
    "beforeShow.fb": function (m, h, l, f) {
      (m = h && h.Thumbs) && m.isVisible && m.focus(f ? 0 : 250);
    },
    "afterKeydown.fb": function (m, h, l, f, d) {
      (m = h && h.Thumbs) &&
        m.isActive &&
        71 === d &&
        (f.preventDefault(), m.toggle());
    },
    "beforeClose.fb": function (m, h) {
      (m = h && h.Thumbs) &&
        m.isVisible &&
        !1 !== m.opts.hideOnClose &&
        m.$grid.hide();
    },
  });
})(document, jQuery);
(function (m, u) {
  function n(m) {
    var h = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;",
      "/": "&#x2F;",
      "`": "&#x60;",
      "=": "&#x3D;",
    };
    return String(m).replace(/[&<>"'`=\/]/g, function (l) {
      return h[l];
    });
  }
  u.extend(!0, u.fancybox.defaults, {
    btnTpl: {
      share:
        '<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>',
    },
    share: {
      url: function (m, h) {
        return (
          (m.currentHash || "inline" === h.type || "html" === h.type
            ? !1
            : h.origSrc || h.src) || window.location
        );
      },
      tpl: '<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>',
    },
  });
  u(m).on("click", "[data-fancybox-share]", function () {
    var m = u.fancybox.getInstance(),
      h = m.current || null,
      l;
    h &&
      ("function" === u.type(h.opts.share.url) &&
        (l = h.opts.share.url.apply(h, [m, h])),
      (h = h.opts.share.tpl
        .replace(
          /\{\{media\}\}/g,
          "image" === h.type ? encodeURIComponent(h.src) : ""
        )
        .replace(/\{\{url\}\}/g, encodeURIComponent(l))
        .replace(/\{\{url_raw\}\}/g, n(l))
        .replace(
          /\{\{descr\}\}/g,
          m.$caption ? encodeURIComponent(m.$caption.text()) : ""
        )),
      u.fancybox.open({
        src: m.translate(m, h),
        type: "html",
        opts: {
          touch: !1,
          animationEffect: !1,
          afterLoad: function (f, d) {
            m.$refs.container.one("beforeClose.fb", function () {
              f.close(null, 0);
            });
            d.$content.find(".fancybox-share__button").click(function () {
              window.open(this.href, "Share", "width=550, height=450");
              return !1;
            });
          },
          mobile: { autoFocus: !1 },
        },
      }));
  });
})(document, jQuery);
(function (m, u, n) {
  function t() {
    var f = m.location.hash.substr(1),
      d = f.split("-"),
      a =
        1 < d.length && /^\+?\d+$/.test(d[d.length - 1])
          ? parseInt(d.pop(-1), 10) || 1
          : 1;
    d = d.join("-");
    return { hash: f, index: 1 > a ? 1 : a, gallery: d };
  }
  function h(f) {
    "" !== f.gallery &&
      n("[data-fancybox='" + n.escapeSelector(f.gallery) + "']")
        .eq(f.index - 1)
        .focus()
        .trigger("click.fb-start");
  }
  function l(f) {
    if (!f) return !1;
    f = f.current ? f.current.opts : f.opts;
    f =
      f.hash ||
      (f.$orig
        ? f.$orig.data("fancybox") || f.$orig.data("fancybox-trigger")
        : "");
    return "" === f ? !1 : f;
  }
  n.escapeSelector ||
    (n.escapeSelector = function (f) {
      return (f + "").replace(
        /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,
        function (d, a) {
          return a
            ? "\x00" === d
              ? "\ufffd"
              : d.slice(0, -1) +
                "\\" +
                d.charCodeAt(d.length - 1).toString(16) +
                " "
            : "\\" + d;
        }
      );
    });
  n(function () {
    !1 !== n.fancybox.defaults.hash &&
      (n(u).on({
        "onInit.fb": function (f, d) {
          var a;
          !1 !== d.group[d.currIndex].opts.hash &&
            ((f = t()),
            (a = l(d)) &&
              f.gallery &&
              a == f.gallery &&
              (d.currIndex = f.index - 1));
        },
        "beforeShow.fb": function (f, d, a, c) {
          a &&
            !1 !== a.opts.hash &&
            (f = l(d)) &&
            ((d.currentHash =
              f + (1 < d.group.length ? "-" + (a.index + 1) : "")),
            m.location.hash !== "#" + d.currentHash &&
              (c && !d.origHash && (d.origHash = m.location.hash),
              d.hashTimer && clearTimeout(d.hashTimer),
              (d.hashTimer = setTimeout(function () {
                "replaceState" in m.history
                  ? (m.history[c ? "pushState" : "replaceState"](
                      {},
                      u.title,
                      m.location.pathname +
                        m.location.search +
                        "#" +
                        d.currentHash
                    ),
                    c && (d.hasCreatedHistory = !0))
                  : (m.location.hash = d.currentHash);
                d.hashTimer = null;
              }, 300))));
        },
        "beforeClose.fb": function (f, d, a) {
          a &&
            !1 !== a.opts.hash &&
            (clearTimeout(d.hashTimer),
            d.currentHash && d.hasCreatedHistory
              ? m.history.back()
              : d.currentHash &&
                ("replaceState" in m.history
                  ? m.history.replaceState(
                      {},
                      u.title,
                      m.location.pathname +
                        m.location.search +
                        (d.origHash || "")
                    )
                  : (m.location.hash = d.origHash)),
            (d.currentHash = null));
        },
      }),
      n(m).on("hashchange.fb", function () {
        var f = t(),
          d = null;
        n.each(n(".fancybox-container").get().reverse(), function (a, c) {
          if ((a = n(c).data("FancyBox")) && a.currentHash) return (d = a), !1;
        });
        d
          ? d.currentHash === f.gallery + "-" + f.index ||
            (1 === f.index && d.currentHash == f.gallery) ||
            ((d.currentHash = null), d.close())
          : "" !== f.gallery && h(f);
      }),
      setTimeout(function () {
        n.fancybox.getInstance() || h(t());
      }, 50));
  });
})(window, document, jQuery);
(function (m, u) {
  var n = new Date().getTime();
  u(m).on({
    "onInit.fb": function (m, h, l) {
      h.$refs.stage.on(
        "mousewheel DOMMouseScroll wheel MozMousePixelScroll",
        function (f) {
          var d = h.current,
            a = new Date().getTime();
          2 > h.group.length ||
            !1 === d.opts.wheel ||
            ("auto" === d.opts.wheel && "image" !== d.type) ||
            (f.preventDefault(),
            f.stopPropagation(),
            d.$slide.hasClass("fancybox-animated") ||
              ((f = f.originalEvent || f),
              250 > a - n ||
                ((n = a),
                h[
                  0 > (-f.deltaY || -f.deltaX || f.wheelDelta || -f.detail)
                    ? "next"
                    : "previous"
                ]())));
        }
      );
    },
  });
})(document, jQuery);
(function (m, u) {
  "function" === typeof define && define.amd
    ? define(["jquery"], function (m) {
        return u(m);
      })
    : "object" === typeof exports
    ? (module.exports = u(require("jquery")))
    : u(jQuery);
})(this, function (m) {
  function u(a) {
    this.$container;
    this.constraints = null;
    this.__$tooltip;
    this.__init(a);
  }
  function n(a, c) {
    var d = !0;
    m.each(a, function (e, f) {
      if (void 0 === c[e] || a[e] !== c[e]) return (d = !1);
    });
    return d;
  }
  function t(a) {
    var c = a.attr("id");
    return (c = c ? f.window.document.getElementById(c) : null)
      ? c === a[0]
      : m.contains(f.window.document.body, a[0]);
  }
  var h = {
      animation: "fade",
      animationDuration: 350,
      content: null,
      contentAsHTML: !1,
      contentCloning: !1,
      debug: !0,
      delay: 300,
      delayTouch: [300, 500],
      functionInit: null,
      functionBefore: null,
      functionReady: null,
      functionAfter: null,
      functionFormat: null,
      IEmin: 6,
      interactive: !1,
      multiple: !1,
      parent: null,
      plugins: ["sideTip"],
      repositionOnScroll: !1,
      restoration: "none",
      selfDestruction: !0,
      theme: [],
      timer: 0,
      trackerInterval: 500,
      trackOrigin: !1,
      trackTooltip: !1,
      trigger: "hover",
      triggerClose: {
        click: !1,
        mouseleave: !1,
        originClick: !1,
        scroll: !1,
        tap: !1,
        touchleave: !1,
      },
      triggerOpen: { click: !1, mouseenter: !1, tap: !1, touchstart: !1 },
      updateAnimation: "rotate",
      zIndex: 9999999,
    },
    l = "undefined" != typeof window ? window : null,
    f = {
      hasTouchCapability: !(
        !l ||
        !(
          "ontouchstart" in l ||
          (l.DocumentTouch && l.document instanceof l.DocumentTouch) ||
          l.navigator.maxTouchPoints
        )
      ),
      hasTransitions: (function () {
        if (!l) return !1;
        var a = (l.document.body || l.document.documentElement).style,
          c = "transition",
          d = ["Moz", "Webkit", "Khtml", "O", "ms"];
        if ("string" == typeof a[c]) return !0;
        c = c.charAt(0).toUpperCase() + c.substr(1);
        for (var f = 0; f < d.length; f++)
          if ("string" == typeof a[d[f] + c]) return !0;
        return !1;
      })(),
      IE: !1,
      semVer: "4.2.8",
      window: l,
    },
    d = function () {
      this.__$emitterPrivate = m({});
      this.__$emitterPublic = m({});
      this.__instancesLatestArr = [];
      this.__plugins = {};
      this._env = f;
    };
  d.prototype = {
    __bridge: function (a, c, d) {
      if (!c[d]) {
        var e = function () {};
        e.prototype = a;
        var f = new e();
        f.__init && f.__init(c);
        m.each(a, function (a, e) {
          0 != a.indexOf("__") &&
            (c[a]
              ? h.debug &&
                console.log(
                  "The " +
                    a +
                    " method of the " +
                    d +
                    " plugin conflicts with another plugin or native methods"
                )
              : ((c[a] = function () {
                  return f[a].apply(f, Array.prototype.slice.apply(arguments));
                }),
                (c[a].bridged = f)));
        });
        c[d] = f;
      }
      return this;
    },
    __setWindow: function (a) {
      f.window = a;
      return this;
    },
    _getRuler: function (a) {
      return new u(a);
    },
    _off: function () {
      this.__$emitterPrivate.off.apply(
        this.__$emitterPrivate,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    _on: function () {
      this.__$emitterPrivate.on.apply(
        this.__$emitterPrivate,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    _one: function () {
      this.__$emitterPrivate.one.apply(
        this.__$emitterPrivate,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    _plugin: function (a) {
      if ("string" == typeof a) {
        var c = null;
        0 < a.indexOf(".")
          ? (c = this.__plugins[a])
          : m.each(this.__plugins, function (d, f) {
              if (f.name.substring(f.name.length - a.length - 1) == "." + a)
                return (c = f), !1;
            });
        return c;
      }
      if (0 > a.name.indexOf(".")) throw Error("Plugins must be namespaced");
      this.__plugins[a.name] = a;
      a.core && this.__bridge(a.core, this, a.name);
      return this;
    },
    _trigger: function () {
      var a = Array.prototype.slice.apply(arguments);
      "string" == typeof a[0] && (a[0] = { type: a[0] });
      this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, a);
      this.__$emitterPublic.trigger.apply(this.__$emitterPublic, a);
      return this;
    },
    instances: function (a) {
      var c = [];
      m(a || ".tooltipstered").each(function () {
        var a = m(this),
          d = a.data("tooltipster-ns");
        d &&
          m.each(d, function (d, e) {
            c.push(a.data(e));
          });
      });
      return c;
    },
    instancesLatest: function () {
      return this.__instancesLatestArr;
    },
    off: function () {
      this.__$emitterPublic.off.apply(
        this.__$emitterPublic,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    on: function () {
      this.__$emitterPublic.on.apply(
        this.__$emitterPublic,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    one: function () {
      this.__$emitterPublic.one.apply(
        this.__$emitterPublic,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    origins: function (a) {
      return m((a ? a + " " : "") + ".tooltipstered").toArray();
    },
    setDefaults: function (a) {
      m.extend(h, a);
      return this;
    },
    triggerHandler: function () {
      this.__$emitterPublic.triggerHandler.apply(
        this.__$emitterPublic,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
  };
  m.tooltipster = new d();
  m.Tooltipster = function (a, c) {
    this.__callbacks = { close: [], open: [] };
    this.__closingTime;
    this.__Content;
    this.__contentBcr;
    this.__destroyed = !1;
    this.__$emitterPrivate = m({});
    this.__$emitterPublic = m({});
    this.__enabled = !0;
    this.__garbageCollector;
    this.__Geometry;
    this.__lastPosition;
    this.__namespace = "tooltipster-" + Math.round(1e6 * Math.random());
    this.__options;
    this.__$originParents;
    this.__pointerIsOverOrigin = !1;
    this.__previousThemes = [];
    this.__state = "closed";
    this.__timeouts = { close: [], open: null };
    this.__touchEvents = [];
    this.__tracker = null;
    this._$origin;
    this._$tooltip;
    this.__init(a, c);
  };
  m.Tooltipster.prototype = {
    __init: function (a, c) {
      var d = this;
      d._$origin = m(a);
      d.__options = m.extend(!0, {}, h, c);
      d.__optionsFormat();
      if (!f.IE || f.IE >= d.__options.IEmin) {
        a = null;
        void 0 === d._$origin.data("tooltipster-initialTitle") &&
          ((a = d._$origin.attr("title")),
          void 0 === a && (a = null),
          d._$origin.data("tooltipster-initialTitle", a));
        if (null !== d.__options.content) d.__contentSet(d.__options.content);
        else {
          c = d._$origin.attr("data-tooltip-content");
          var k;
          c && (k = m(c));
          k && k[0] ? d.__contentSet(k.first()) : d.__contentSet(a);
        }
        d._$origin.removeAttr("title").addClass("tooltipstered");
        d.__prepareOrigin();
        d.__prepareGC();
        m.each(d.__options.plugins, function (a, c) {
          d._plug(c);
        });
        if (f.hasTouchCapability)
          m(f.window.document.body).on(
            "touchmove." + d.__namespace + "-triggerOpen",
            function (a) {
              d._touchRecordEvent(a);
            }
          );
        d._on("created", function () {
          d.__prepareTooltip();
        })._on("repositioned", function (a) {
          d.__lastPosition = a.position;
        });
      } else d.__options.disabled = !0;
    },
    __contentInsert: function () {
      var a = this._$tooltip.find(".tooltipster-content"),
        c = this.__Content;
      this._trigger({
        type: "format",
        content: this.__Content,
        format: function (a) {
          c = a;
        },
      });
      this.__options.functionFormat &&
        (c = this.__options.functionFormat.call(
          this,
          this,
          { origin: this._$origin[0] },
          this.__Content
        ));
      "string" !== typeof c || this.__options.contentAsHTML
        ? a.empty().append(c)
        : a.text(c);
      return this;
    },
    __contentSet: function (a) {
      a instanceof m && this.__options.contentCloning && (a = a.clone(!0));
      this.__Content = a;
      this._trigger({ type: "updated", content: a });
      return this;
    },
    __destroyError: function () {
      throw Error(
        "This tooltip has been destroyed and cannot execute your method call."
      );
    },
    __geometry: function () {
      var a = this._$origin,
        c = this._$origin.is("area");
      if (c) {
        var d = this._$origin.parent().attr("name");
        a = m('img[usemap="#' + d + '"]');
      }
      var h = a[0].getBoundingClientRect(),
        l = m(f.window.document),
        n = m(f.window);
      d = a;
      var q = {
        available: { document: null, window: null },
        document: { size: { height: l.height(), width: l.width() } },
        window: {
          scroll: {
            left:
              f.window.scrollX || f.window.document.documentElement.scrollLeft,
            top:
              f.window.scrollY || f.window.document.documentElement.scrollTop,
          },
          size: { height: n.height(), width: n.width() },
        },
        origin: {
          fixedLineage: !1,
          offset: {},
          size: { height: h.bottom - h.top, width: h.right - h.left },
          usemapImage: c ? a[0] : null,
          windowOffset: {
            bottom: h.bottom,
            left: h.left,
            right: h.right,
            top: h.top,
          },
        },
      };
      if (c) {
        c = this._$origin.attr("shape");
        var p = this._$origin.attr("coords");
        p &&
          ((p = p.split(",")),
          m.map(p, function (a, c) {
            p[c] = parseInt(a);
          }));
        if ("default" != c)
          switch (c) {
            case "circle":
              c = p[0];
              a = p[1];
              h = p[2];
              q.origin.size.height = 2 * h;
              q.origin.size.width = q.origin.size.height;
              q.origin.windowOffset.left += c - h;
              q.origin.windowOffset.top += a - h;
              break;
            case "rect":
              c = p[0];
              a = p[1];
              h = p[2];
              q.origin.size.height = p[3] - a;
              q.origin.size.width = h - c;
              q.origin.windowOffset.left += c;
              q.origin.windowOffset.top += a;
              break;
            case "poly":
              l = h = a = c = 0;
              n = "even";
              for (var u = 0; u < p.length; u++) {
                var t = p[u];
                "even" == n
                  ? (t > h && ((h = t), 0 === u && (c = h)),
                    t < c && (c = t),
                    (n = "odd"))
                  : (t > l && ((l = t), 1 == u && (a = l)),
                    t < a && (a = t),
                    (n = "even"));
              }
              q.origin.size.height = l - a;
              q.origin.size.width = h - c;
              q.origin.windowOffset.left += c;
              q.origin.windowOffset.top += a;
          }
      }
      this._trigger({
        type: "geometry",
        edit: function (a) {
          q.origin.size.height = a.height;
          q.origin.windowOffset.left = a.left;
          q.origin.windowOffset.top = a.top;
          q.origin.size.width = a.width;
        },
        geometry: {
          height: q.origin.size.height,
          left: q.origin.windowOffset.left,
          top: q.origin.windowOffset.top,
          width: q.origin.size.width,
        },
      });
      q.origin.windowOffset.right =
        q.origin.windowOffset.left + q.origin.size.width;
      q.origin.windowOffset.bottom =
        q.origin.windowOffset.top + q.origin.size.height;
      q.origin.offset.left = q.origin.windowOffset.left + q.window.scroll.left;
      q.origin.offset.top = q.origin.windowOffset.top + q.window.scroll.top;
      q.origin.offset.bottom = q.origin.offset.top + q.origin.size.height;
      q.origin.offset.right = q.origin.offset.left + q.origin.size.width;
      q.available.document = {
        bottom: {
          height: q.document.size.height - q.origin.offset.bottom,
          width: q.document.size.width,
        },
        left: { height: q.document.size.height, width: q.origin.offset.left },
        right: {
          height: q.document.size.height,
          width: q.document.size.width - q.origin.offset.right,
        },
        top: { height: q.origin.offset.top, width: q.document.size.width },
      };
      for (
        q.available.window = {
          bottom: {
            height: Math.max(
              q.window.size.height - Math.max(q.origin.windowOffset.bottom, 0),
              0
            ),
            width: q.window.size.width,
          },
          left: {
            height: q.window.size.height,
            width: Math.max(q.origin.windowOffset.left, 0),
          },
          right: {
            height: q.window.size.height,
            width: Math.max(
              q.window.size.width - Math.max(q.origin.windowOffset.right, 0),
              0
            ),
          },
          top: {
            height: Math.max(q.origin.windowOffset.top, 0),
            width: q.window.size.width,
          },
        };
        "html" != d[0].tagName.toLowerCase();

      ) {
        if ("fixed" == d.css("position")) {
          q.origin.fixedLineage = !0;
          break;
        }
        d = d.parent();
      }
      return q;
    },
    __optionsFormat: function () {
      "number" == typeof this.__options.animationDuration &&
        (this.__options.animationDuration = [
          this.__options.animationDuration,
          this.__options.animationDuration,
        ]);
      "number" == typeof this.__options.delay &&
        (this.__options.delay = [this.__options.delay, this.__options.delay]);
      "number" == typeof this.__options.delayTouch &&
        (this.__options.delayTouch = [
          this.__options.delayTouch,
          this.__options.delayTouch,
        ]);
      "string" == typeof this.__options.theme &&
        (this.__options.theme = [this.__options.theme]);
      null === this.__options.parent
        ? (this.__options.parent = m(f.window.document.body))
        : "string" == typeof this.__options.parent &&
          (this.__options.parent = m(this.__options.parent));
      "hover" == this.__options.trigger
        ? ((this.__options.triggerOpen = { mouseenter: !0, touchstart: !0 }),
          (this.__options.triggerClose = {
            mouseleave: !0,
            originClick: !0,
            touchleave: !0,
          }))
        : "click" == this.__options.trigger &&
          ((this.__options.triggerOpen = { click: !0, tap: !0 }),
          (this.__options.triggerClose = { click: !0, tap: !0 }));
      this._trigger("options");
      return this;
    },
    __prepareGC: function () {
      var a = this;
      a.__options.selfDestruction
        ? (a.__garbageCollector = setInterval(function () {
            var c = new Date().getTime();
            a.__touchEvents = m.grep(a.__touchEvents, function (a, d) {
              return 6e4 < c - a.time;
            });
            t(a._$origin) ||
              a.close(function () {
                a.destroy();
              });
          }, 2e4))
        : clearInterval(a.__garbageCollector);
      return a;
    },
    __prepareOrigin: function () {
      var a = this;
      a._$origin.off("." + a.__namespace + "-triggerOpen");
      if (f.hasTouchCapability)
        a._$origin.on(
          "touchstart." +
            a.__namespace +
            "-triggerOpen touchend." +
            a.__namespace +
            "-triggerOpen touchcancel." +
            a.__namespace +
            "-triggerOpen",
          function (c) {
            a._touchRecordEvent(c);
          }
        );
      if (
        a.__options.triggerOpen.click ||
        (a.__options.triggerOpen.tap && f.hasTouchCapability)
      ) {
        var c = "";
        a.__options.triggerOpen.click &&
          (c += "click." + a.__namespace + "-triggerOpen ");
        a.__options.triggerOpen.tap &&
          f.hasTouchCapability &&
          (c += "touchend." + a.__namespace + "-triggerOpen");
        a._$origin.on(c, function (c) {
          a._touchIsMeaningfulEvent(c) && a._open(c);
        });
      }
      if (
        a.__options.triggerOpen.mouseenter ||
        (a.__options.triggerOpen.touchstart && f.hasTouchCapability)
      )
        (c = ""),
          a.__options.triggerOpen.mouseenter &&
            (c += "mouseenter." + a.__namespace + "-triggerOpen "),
          a.__options.triggerOpen.touchstart &&
            f.hasTouchCapability &&
            (c += "touchstart." + a.__namespace + "-triggerOpen"),
          a._$origin.on(c, function (c) {
            if (a._touchIsTouchEvent(c) || !a._touchIsEmulatedEvent(c))
              (a.__pointerIsOverOrigin = !0), a._openShortly(c);
          });
      if (
        a.__options.triggerClose.mouseleave ||
        (a.__options.triggerClose.touchleave && f.hasTouchCapability)
      )
        (c = ""),
          a.__options.triggerClose.mouseleave &&
            (c += "mouseleave." + a.__namespace + "-triggerOpen "),
          a.__options.triggerClose.touchleave &&
            f.hasTouchCapability &&
            (c +=
              "touchend." +
              a.__namespace +
              "-triggerOpen touchcancel." +
              a.__namespace +
              "-triggerOpen"),
          a._$origin.on(c, function (c) {
            a._touchIsMeaningfulEvent(c) && (a.__pointerIsOverOrigin = !1);
          });
      return a;
    },
    __prepareTooltip: function () {
      var a = this,
        c = a.__options.interactive ? "auto" : "";
      a._$tooltip
        .attr("id", a.__namespace)
        .css({ "pointer-events": c, zIndex: a.__options.zIndex });
      m.each(a.__previousThemes, function (c, d) {
        a._$tooltip.removeClass(d);
      });
      m.each(a.__options.theme, function (c, d) {
        a._$tooltip.addClass(d);
      });
      a.__previousThemes = m.merge([], a.__options.theme);
      return a;
    },
    __scrollHandler: function (a) {
      if (this.__options.triggerClose.scroll) this._close(a);
      else if (t(this._$origin) && t(this._$tooltip)) {
        var c = null;
        if (a.target === f.window.document)
          this.__Geometry.origin.fixedLineage ||
            (this.__options.repositionOnScroll && this.reposition(a));
        else {
          c = this.__geometry();
          var d = !1;
          "fixed" != this._$origin.css("position") &&
            this.__$originParents.each(function (a, e) {
              a = m(e);
              var f = a.css("overflow-x"),
                h = a.css("overflow-y");
              if ("visible" != f || "visible" != h)
                if (
                  ((e = e.getBoundingClientRect()),
                  ("visible" != f &&
                    (c.origin.windowOffset.left < e.left ||
                      c.origin.windowOffset.right > e.right)) ||
                    ("visible" != h &&
                      (c.origin.windowOffset.top < e.top ||
                        c.origin.windowOffset.bottom > e.bottom)))
                )
                  return (d = !0), !1;
              if ("fixed" == a.css("position")) return !1;
            });
          d
            ? this._$tooltip.css("visibility", "hidden")
            : (this._$tooltip.css("visibility", "visible"),
              this.__options.repositionOnScroll
                ? this.reposition(a)
                : this._$tooltip.css({
                    left:
                      this.__lastPosition.coord.left +
                      (c.origin.offset.left -
                        this.__Geometry.origin.offset.left),
                    top:
                      this.__lastPosition.coord.top +
                      (c.origin.offset.top - this.__Geometry.origin.offset.top),
                  }));
        }
        this._trigger({ type: "scroll", event: a, geo: c });
      }
      return this;
    },
    __stateSet: function (a) {
      this.__state = a;
      this._trigger({ type: "state", state: a });
      return this;
    },
    __timeoutsClear: function () {
      clearTimeout(this.__timeouts.open);
      this.__timeouts.open = null;
      m.each(this.__timeouts.close, function (a, c) {
        clearTimeout(c);
      });
      this.__timeouts.close = [];
      return this;
    },
    __trackerStart: function () {
      var a = this,
        c = a._$tooltip.find(".tooltipster-content");
      a.__options.trackTooltip &&
        (a.__contentBcr = c[0].getBoundingClientRect());
      a.__tracker = setInterval(function () {
        if (t(a._$origin) && t(a._$tooltip)) {
          if (a.__options.trackOrigin) {
            var d = a.__geometry(),
              f = !1;
            n(d.origin.size, a.__Geometry.origin.size) &&
              (a.__Geometry.origin.fixedLineage
                ? n(d.origin.windowOffset, a.__Geometry.origin.windowOffset) &&
                  (f = !0)
                : n(d.origin.offset, a.__Geometry.origin.offset) && (f = !0));
            f ||
              (a.__options.triggerClose.mouseleave
                ? a._close()
                : a.reposition());
          }
          a.__options.trackTooltip &&
            ((d = c[0].getBoundingClientRect()),
            d.height !== a.__contentBcr.height ||
              d.width !== a.__contentBcr.width) &&
            (a.reposition(), (a.__contentBcr = d));
        } else a._close();
      }, a.__options.trackerInterval);
      return a;
    },
    _close: function (a, c, d) {
      var e = this,
        h = !0;
      e._trigger({
        type: "close",
        event: a,
        stop: function () {
          h = !1;
        },
      });
      if (h || d) {
        c && e.__callbacks.close.push(c);
        e.__callbacks.open = [];
        e.__timeoutsClear();
        var l = function () {
          m.each(e.__callbacks.close, function (c, d) {
            d.call(e, e, { event: a, origin: e._$origin[0] });
          });
          e.__callbacks.close = [];
        };
        "closed" != e.__state
          ? ((c = !0),
            (d = new Date().getTime() + e.__options.animationDuration[1]),
            "disappearing" == e.__state &&
              d > e.__closingTime &&
              0 < e.__options.animationDuration[1] &&
              (c = !1),
            c &&
              ((e.__closingTime = d),
              "disappearing" != e.__state && e.__stateSet("disappearing"),
              (c = function () {
                clearInterval(e.__tracker);
                e._trigger({ type: "closing", event: a });
                e._$tooltip
                  .off("." + e.__namespace + "-triggerClose")
                  .removeClass("tooltipster-dying");
                m(f.window).off("." + e.__namespace + "-triggerClose");
                e.__$originParents.each(function (a, c) {
                  m(c).off("scroll." + e.__namespace + "-triggerClose");
                });
                e.__$originParents = null;
                m(f.window.document.body).off(
                  "." + e.__namespace + "-triggerClose"
                );
                e._$origin.off("." + e.__namespace + "-triggerClose");
                e._off("dismissable");
                e.__stateSet("closed");
                e._trigger({ type: "after", event: a });
                e.__options.functionAfter &&
                  e.__options.functionAfter.call(e, e, {
                    event: a,
                    origin: e._$origin[0],
                  });
                l();
              }),
              f.hasTransitions
                ? (e._$tooltip.css({
                    "-moz-animation-duration":
                      e.__options.animationDuration[1] + "ms",
                    "-ms-animation-duration":
                      e.__options.animationDuration[1] + "ms",
                    "-o-animation-duration":
                      e.__options.animationDuration[1] + "ms",
                    "-webkit-animation-duration":
                      e.__options.animationDuration[1] + "ms",
                    "animation-duration":
                      e.__options.animationDuration[1] + "ms",
                    "transition-duration":
                      e.__options.animationDuration[1] + "ms",
                  }),
                  e._$tooltip
                    .clearQueue()
                    .removeClass("tooltipster-show")
                    .addClass("tooltipster-dying"),
                  0 < e.__options.animationDuration[1] &&
                    e._$tooltip.delay(e.__options.animationDuration[1]),
                  e._$tooltip.queue(c))
                : e._$tooltip
                    .stop()
                    .fadeOut(e.__options.animationDuration[1], c)))
          : l();
      }
      return e;
    },
    _off: function () {
      this.__$emitterPrivate.off.apply(
        this.__$emitterPrivate,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    _on: function () {
      this.__$emitterPrivate.on.apply(
        this.__$emitterPrivate,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    _one: function () {
      this.__$emitterPrivate.one.apply(
        this.__$emitterPrivate,
        Array.prototype.slice.apply(arguments)
      );
      return this;
    },
    _open: function (a, c) {
      var d = this;
      if (!d.__destroying && t(d._$origin) && d.__enabled) {
        var h = !0;
        "closed" == d.__state &&
          (d._trigger({
            type: "before",
            event: a,
            stop: function () {
              h = !1;
            },
          }),
          h &&
            d.__options.functionBefore &&
            (h = d.__options.functionBefore.call(d, d, {
              event: a,
              origin: d._$origin[0],
            })));
        if (!1 !== h && null !== d.__Content) {
          c && d.__callbacks.open.push(c);
          d.__callbacks.close = [];
          d.__timeoutsClear();
          var l = function () {
            "stable" != d.__state && d.__stateSet("stable");
            m.each(d.__callbacks.open, function (a, c) {
              c.call(d, d, { origin: d._$origin[0], tooltip: d._$tooltip[0] });
            });
            d.__callbacks.open = [];
          };
          if ("closed" !== d.__state)
            (c = 0),
              "disappearing" === d.__state
                ? (d.__stateSet("appearing"),
                  f.hasTransitions
                    ? (d._$tooltip
                        .clearQueue()
                        .removeClass("tooltipster-dying")
                        .addClass("tooltipster-show"),
                      0 < d.__options.animationDuration[0] &&
                        d._$tooltip.delay(d.__options.animationDuration[0]),
                      d._$tooltip.queue(l))
                    : d._$tooltip.stop().fadeIn(l))
                : "stable" == d.__state && l();
          else {
            d.__stateSet("appearing");
            c = d.__options.animationDuration[0];
            d.__contentInsert();
            d.reposition(a, !0);
            f.hasTransitions
              ? (d._$tooltip
                  .addClass("tooltipster-" + d.__options.animation)
                  .addClass("tooltipster-initial")
                  .css({
                    "-moz-animation-duration":
                      d.__options.animationDuration[0] + "ms",
                    "-ms-animation-duration":
                      d.__options.animationDuration[0] + "ms",
                    "-o-animation-duration":
                      d.__options.animationDuration[0] + "ms",
                    "-webkit-animation-duration":
                      d.__options.animationDuration[0] + "ms",
                    "animation-duration":
                      d.__options.animationDuration[0] + "ms",
                    "transition-duration":
                      d.__options.animationDuration[0] + "ms",
                  }),
                setTimeout(function () {
                  "closed" != d.__state &&
                    (d._$tooltip
                      .addClass("tooltipster-show")
                      .removeClass("tooltipster-initial"),
                    0 < d.__options.animationDuration[0] &&
                      d._$tooltip.delay(d.__options.animationDuration[0]),
                    d._$tooltip.queue(l));
                }, 0))
              : d._$tooltip
                  .css("display", "none")
                  .fadeIn(d.__options.animationDuration[0], l);
            d.__trackerStart();
            m(f.window)
              .on("resize." + d.__namespace + "-triggerClose", function (a) {
                var c = m(document.activeElement);
                ((c.is("input") || c.is("textarea")) &&
                  m.contains(d._$tooltip[0], c[0])) ||
                  d.reposition(a);
              })
              .on("scroll." + d.__namespace + "-triggerClose", function (a) {
                d.__scrollHandler(a);
              });
            d.__$originParents = d._$origin.parents();
            d.__$originParents.each(function (a, c) {
              m(c).on(
                "scroll." + d.__namespace + "-triggerClose",
                function (a) {
                  d.__scrollHandler(a);
                }
              );
            });
            if (
              d.__options.triggerClose.mouseleave ||
              (d.__options.triggerClose.touchleave && f.hasTouchCapability)
            ) {
              d._on("dismissable", function (a) {
                a.dismissable
                  ? a.delay
                    ? ((p = setTimeout(function () {
                        d._close(a.event);
                      }, a.delay)),
                      d.__timeouts.close.push(p))
                    : d._close(a)
                  : clearTimeout(p);
              });
              a = d._$origin;
              var n = "",
                q = "",
                p = null;
              d.__options.interactive && (a = a.add(d._$tooltip));
              d.__options.triggerClose.mouseleave &&
                ((n += "mouseenter." + d.__namespace + "-triggerClose "),
                (q += "mouseleave." + d.__namespace + "-triggerClose "));
              d.__options.triggerClose.touchleave &&
                f.hasTouchCapability &&
                ((n += "touchstart." + d.__namespace + "-triggerClose"),
                (q +=
                  "touchend." +
                  d.__namespace +
                  "-triggerClose touchcancel." +
                  d.__namespace +
                  "-triggerClose"));
              a.on(q, function (a) {
                (!d._touchIsTouchEvent(a) && d._touchIsEmulatedEvent(a)) ||
                  d._trigger({
                    delay: ("mouseleave" == a.type
                      ? d.__options.delay
                      : d.__options.delayTouch)[1],
                    dismissable: !0,
                    event: a,
                    type: "dismissable",
                  });
              }).on(n, function (a) {
                (!d._touchIsTouchEvent(a) && d._touchIsEmulatedEvent(a)) ||
                  d._trigger({
                    dismissable: !1,
                    event: a,
                    type: "dismissable",
                  });
              });
            }
            if (d.__options.triggerClose.originClick)
              d._$origin.on(
                "click." + d.__namespace + "-triggerClose",
                function (a) {
                  d._touchIsTouchEvent(a) ||
                    d._touchIsEmulatedEvent(a) ||
                    d._close(a);
                }
              );
            (d.__options.triggerClose.click ||
              (d.__options.triggerClose.tap && f.hasTouchCapability)) &&
              setTimeout(function () {
                if ("closed" != d.__state) {
                  var a = "",
                    c = m(f.window.document.body);
                  d.__options.triggerClose.click &&
                    (a += "click." + d.__namespace + "-triggerClose ");
                  d.__options.triggerClose.tap &&
                    f.hasTouchCapability &&
                    (a += "touchend." + d.__namespace + "-triggerClose");
                  c.on(a, function (a) {
                    d._touchIsMeaningfulEvent(a) &&
                      (d._touchRecordEvent(a),
                      (d.__options.interactive &&
                        m.contains(d._$tooltip[0], a.target)) ||
                        d._close(a));
                  });
                  if (d.__options.triggerClose.tap && f.hasTouchCapability)
                    c.on(
                      "touchstart." + d.__namespace + "-triggerClose",
                      function (a) {
                        d._touchRecordEvent(a);
                      }
                    );
                }
              }, 0);
            d._trigger("ready");
            d.__options.functionReady &&
              d.__options.functionReady.call(d, d, {
                origin: d._$origin[0],
                tooltip: d._$tooltip[0],
              });
          }
          0 < d.__options.timer &&
            ((p = setTimeout(function () {
              d._close();
            }, d.__options.timer + c)),
            d.__timeouts.close.push(p));
        }
      }
      return d;
    },
    _openShortly: function (a) {
      var c = this,
        d = !0;
      if (
        "stable" != c.__state &&
        "appearing" != c.__state &&
        !c.__timeouts.open &&
        (c._trigger({
          type: "start",
          event: a,
          stop: function () {
            d = !1;
          },
        }),
        d)
      ) {
        var f =
          0 == a.type.indexOf("touch")
            ? c.__options.delayTouch
            : c.__options.delay;
        f[0]
          ? (c.__timeouts.open = setTimeout(function () {
              c.__timeouts.open = null;
              c.__pointerIsOverOrigin && c._touchIsMeaningfulEvent(a)
                ? (c._trigger("startend"), c._open(a))
                : c._trigger("startcancel");
            }, f[0]))
          : (c._trigger("startend"), c._open(a));
      }
      return c;
    },
    _optionsExtract: function (a, c) {
      var d = this,
        f = m.extend(!0, {}, c),
        h = d.__options[a];
      h ||
        ((h = {}),
        m.each(c, function (a, c) {
          c = d.__options[a];
          void 0 !== c && (h[a] = c);
        }));
      m.each(f, function (a, c) {
        void 0 !== h[a] &&
          ("object" != typeof c ||
          c instanceof Array ||
          null == c ||
          "object" != typeof h[a] ||
          h[a] instanceof Array ||
          null == h[a]
            ? (f[a] = h[a])
            : m.extend(f[a], h[a]));
      });
      return f;
    },
    _plug: function (a) {
      var c = m.tooltipster._plugin(a);
      if (c) c.instance && m.tooltipster.__bridge(c.instance, this, c.name);
      else throw Error('The "' + a + '" plugin is not defined');
      return this;
    },
    _touchIsEmulatedEvent: function (a) {
      for (
        var c = !1, d = new Date().getTime(), f = this.__touchEvents.length - 1;
        0 <= f;
        f--
      ) {
        var h = this.__touchEvents[f];
        if (500 > d - h.time) h.target === a.target && (c = !0);
        else break;
      }
      return c;
    },
    _touchIsMeaningfulEvent: function (a) {
      return (
        (this._touchIsTouchEvent(a) && !this._touchSwiped(a.target)) ||
        (!this._touchIsTouchEvent(a) && !this._touchIsEmulatedEvent(a))
      );
    },
    _touchIsTouchEvent: function (a) {
      return 0 == a.type.indexOf("touch");
    },
    _touchRecordEvent: function (a) {
      this._touchIsTouchEvent(a) &&
        ((a.time = new Date().getTime()), this.__touchEvents.push(a));
      return this;
    },
    _touchSwiped: function (a) {
      for (var c = !1, d = this.__touchEvents.length - 1; 0 <= d; d--) {
        var f = this.__touchEvents[d];
        if ("touchmove" == f.type) {
          c = !0;
          break;
        } else if ("touchstart" == f.type && a === f.target) break;
      }
      return c;
    },
    _trigger: function () {
      var a = Array.prototype.slice.apply(arguments);
      "string" == typeof a[0] && (a[0] = { type: a[0] });
      a[0].instance = this;
      a[0].origin = this._$origin ? this._$origin[0] : null;
      a[0].tooltip = this._$tooltip ? this._$tooltip[0] : null;
      this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, a);
      m.tooltipster._trigger.apply(m.tooltipster, a);
      this.__$emitterPublic.trigger.apply(this.__$emitterPublic, a);
      return this;
    },
    _unplug: function (a) {
      var c = this;
      if (c[a]) {
        var d = m.tooltipster._plugin(a);
        d.instance &&
          m.each(d.instance, function (d, e) {
            c[d] && c[d].bridged === c[a] && delete c[d];
          });
        c[a].__destroy && c[a].__destroy();
        delete c[a];
      }
      return c;
    },
    close: function (a) {
      this.__destroyed ? this.__destroyError() : this._close(null, a);
      return this;
    },
    content: function (a) {
      var c = this;
      if (void 0 === a) return c.__Content;
      if (c.__destroyed) c.__destroyError();
      else if ((c.__contentSet(a), null !== c.__Content)) {
        if (
          "closed" !== c.__state &&
          (c.__contentInsert(), c.reposition(), c.__options.updateAnimation)
        )
          if (f.hasTransitions) {
            var d = c.__options.updateAnimation;
            c._$tooltip.addClass("tooltipster-update-" + d);
            setTimeout(function () {
              "closed" != c.__state &&
                c._$tooltip.removeClass("tooltipster-update-" + d);
            }, 1e3);
          } else
            c._$tooltip.fadeTo(200, 0.5, function () {
              "closed" != c.__state && c._$tooltip.fadeTo(200, 1);
            });
      } else c._close();
      return c;
    },
    destroy: function () {
      var a = this;
      if (a.__destroyed) a.__destroyError();
      else {
        "closed" != a.__state
          ? a.option("animationDuration", 0)._close(null, null, !0)
          : a.__timeoutsClear();
        a._trigger("destroy");
        a.__destroyed = !0;
        a._$origin
          .removeData(a.__namespace)
          .off("." + a.__namespace + "-triggerOpen");
        m(f.window.document.body).off("." + a.__namespace + "-triggerOpen");
        var c = a._$origin.data("tooltipster-ns");
        c &&
          (1 === c.length
            ? ((c = null),
              "previous" == a.__options.restoration
                ? (c = a._$origin.data("tooltipster-initialTitle"))
                : "current" == a.__options.restoration &&
                  (c =
                    "string" == typeof a.__Content
                      ? a.__Content
                      : m("<div></div>").append(a.__Content).html()),
              c && a._$origin.attr("title", c),
              a._$origin.removeClass("tooltipstered"),
              a._$origin
                .removeData("tooltipster-ns")
                .removeData("tooltipster-initialTitle"))
            : ((c = m.grep(c, function (c, d) {
                return c !== a.__namespace;
              })),
              a._$origin.data("tooltipster-ns", c)));
        a._trigger("destroyed");
        a._off();
        a.off();
        a.__Content = null;
        a.__$emitterPrivate = null;
        a.__$emitterPublic = null;
        a.__options.parent = null;
        a._$origin = null;
        a._$tooltip = null;
        m.tooltipster.__instancesLatestArr = m.grep(
          m.tooltipster.__instancesLatestArr,
          function (c, d) {
            return a !== c;
          }
        );
        clearInterval(a.__garbageCollector);
      }
      return a;
    },
    disable: function () {
      this.__destroyed
        ? this.__destroyError()
        : (this._close(), (this.__enabled = !1));
      return this;
    },
    elementOrigin: function () {
      if (this.__destroyed) this.__destroyError();
      else return this._$origin[0];
    },
    elementTooltip: function () {
      return this._$tooltip ? this._$tooltip[0] : null;
    },
    enable: function () {
      this.__enabled = !0;
      return this;
    },
    hide: function (a) {
      return this.close(a);
    },
    instance: function () {
      return this;
    },
    off: function () {
      this.__destroyed ||
        this.__$emitterPublic.off.apply(
          this.__$emitterPublic,
          Array.prototype.slice.apply(arguments)
        );
      return this;
    },
    on: function () {
      this.__destroyed
        ? this.__destroyError()
        : this.__$emitterPublic.on.apply(
            this.__$emitterPublic,
            Array.prototype.slice.apply(arguments)
          );
      return this;
    },
    one: function () {
      this.__destroyed
        ? this.__destroyError()
        : this.__$emitterPublic.one.apply(
            this.__$emitterPublic,
            Array.prototype.slice.apply(arguments)
          );
      return this;
    },
    open: function (a) {
      this.__destroyed ? this.__destroyError() : this._open(null, a);
      return this;
    },
    option: function (a, c) {
      if (void 0 === c) return this.__options[a];
      this.__destroyed
        ? this.__destroyError()
        : ((this.__options[a] = c),
          this.__optionsFormat(),
          0 <= m.inArray(a, ["trigger", "triggerClose", "triggerOpen"]) &&
            this.__prepareOrigin(),
          "selfDestruction" === a && this.__prepareGC());
      return this;
    },
    reposition: function (a, c) {
      this.__destroyed
        ? this.__destroyError()
        : "closed" != this.__state &&
          t(this._$origin) &&
          (c || t(this._$tooltip)) &&
          (c || this._$tooltip.detach(),
          (this.__Geometry = this.__geometry()),
          this._trigger({
            type: "reposition",
            event: a,
            helper: { geo: this.__Geometry },
          }));
      return this;
    },
    show: function (a) {
      return this.open(a);
    },
    status: function () {
      return {
        destroyed: this.__destroyed,
        enabled: this.__enabled,
        open: "closed" !== this.__state,
        state: this.__state,
      };
    },
    triggerHandler: function () {
      this.__destroyed
        ? this.__destroyError()
        : this.__$emitterPublic.triggerHandler.apply(
            this.__$emitterPublic,
            Array.prototype.slice.apply(arguments)
          );
      return this;
    },
  };
  m.fn.tooltipster = function () {
    var a = Array.prototype.slice.apply(arguments);
    if (0 === this.length) return this;
    if ("string" === typeof a[0]) {
      var c = "#*$~&";
      this.each(function () {
        var d = m(this).data("tooltipster-ns");
        if ((d = d ? m(this).data(d[0]) : null)) {
          if ("function" === typeof d[a[0]]) {
            1 < this.length &&
              "content" == a[0] &&
              (a[1] instanceof m ||
                ("object" == typeof a[1] && null != a[1] && a[1].tagName)) &&
              !d.__options.contentCloning &&
              d.__options.debug &&
              console.log(
                "You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE."
              );
            var e = d[a[0]](a[1], a[2]);
          } else throw Error('Unknown method "' + a[0] + '"');
          if (e !== d || "instance" === a[0]) return (c = e), !1;
        } else throw Error("You called Tooltipster's \"" + a[0] + '" method on an uninitialized element');
      });
      return "#*$~&" !== c ? c : this;
    }
    m.tooltipster.__instancesLatestArr = [];
    var d = a[0] && void 0 !== a[0].multiple,
      f = (d && a[0].multiple) || (!d && h.multiple);
    d =
      ((d = a[0] && void 0 !== a[0].content) && a[0].content) ||
      (!d && h.content);
    var l = a[0] && void 0 !== a[0].contentCloning;
    l = (l && a[0].contentCloning) || (!l && h.contentCloning);
    var n = a[0] && void 0 !== a[0].debug,
      q = (n && a[0].debug) || (!n && h.debug);
    1 < this.length &&
      (d instanceof m || ("object" == typeof d && null != d && d.tagName)) &&
      !l &&
      q &&
      console.log(
        "You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE."
      );
    this.each(function () {
      var c = !1,
        d = m(this),
        e = d.data("tooltipster-ns"),
        h = null;
      e
        ? f
          ? (c = !0)
          : q &&
            (console.log(
              "Tooltipster: one or more tooltips are already attached to the element below. Ignoring."
            ),
            console.log(this))
        : (c = !0);
      c &&
        ((h = new m.Tooltipster(this, a[0])),
        e || (e = []),
        e.push(h.__namespace),
        d.data("tooltipster-ns", e),
        d.data(h.__namespace, h),
        h.__options.functionInit &&
          h.__options.functionInit.call(h, h, { origin: this }),
        h._trigger("init"));
      m.tooltipster.__instancesLatestArr.push(h);
    });
    return this;
  };
  u.prototype = {
    __init: function (a) {
      this.__$tooltip = a;
      this.__$tooltip
        .css({ left: 0, overflow: "hidden", position: "absolute", top: 0 })
        .find(".tooltipster-content")
        .css("overflow", "auto");
      this.$container = m('<div class="tooltipster-ruler"></div>')
        .append(this.__$tooltip)
        .appendTo(f.window.document.body);
    },
    __forceRedraw: function () {
      var a = this.__$tooltip.parent();
      this.__$tooltip.detach();
      this.__$tooltip.appendTo(a);
    },
    constrain: function (a, c) {
      this.constraints = { width: a, height: c };
      this.__$tooltip.css({
        display: "block",
        height: "",
        overflow: "auto",
        width: a,
      });
      return this;
    },
    destroy: function () {
      this.__$tooltip
        .detach()
        .find(".tooltipster-content")
        .css({ display: "", overflow: "" });
      this.$container.remove();
    },
    free: function () {
      this.constraints = null;
      this.__$tooltip.css({
        display: "",
        height: "",
        overflow: "visible",
        width: "",
      });
      return this;
    },
    measure: function () {
      this.__forceRedraw();
      var a = this.__$tooltip[0].getBoundingClientRect(),
        c = {
          size: {
            height: a.height || a.bottom - a.top,
            width: a.width || a.right - a.left,
          },
        };
      if (this.constraints) {
        var d = this.__$tooltip.find(".tooltipster-content"),
          h = this.__$tooltip.outerHeight(),
          l = d[0].getBoundingClientRect();
        a =
          a.width <= this.constraints.width && l.width >= d[0].scrollWidth - 1;
        c.fits = h <= this.constraints.height && a;
      }
      f.IE &&
        11 >= f.IE &&
        c.size.width !== f.window.document.documentElement.clientWidth &&
        (c.size.width = Math.ceil(c.size.width) + 1);
      return c;
    },
  };
  d = navigator.userAgent.toLowerCase();
  -1 != d.indexOf("msie")
    ? (f.IE = parseInt(d.split("msie")[1]))
    : -1 !== d.toLowerCase().indexOf("trident") && -1 !== d.indexOf(" rv:11")
    ? (f.IE = 11)
    : -1 != d.toLowerCase().indexOf("edge/") &&
      (f.IE = parseInt(d.toLowerCase().split("edge/")[1]));
  m.tooltipster._plugin({
    name: "tooltipster.sideTip",
    instance: {
      __defaults: function () {
        return {
          arrow: !0,
          distance: 6,
          functionPosition: null,
          maxWidth: null,
          minIntersection: 16,
          minWidth: 0,
          position: null,
          side: "top",
          viewportAware: !0,
        };
      },
      __init: function (a) {
        var c = this;
        c.__instance = a;
        c.__namespace =
          "tooltipster-sideTip-" + Math.round(1e6 * Math.random());
        c.__previousState = "closed";
        c.__options;
        c.__optionsFormat();
        c.__instance._on("state." + c.__namespace, function (a) {
          "closed" == a.state
            ? c.__close()
            : "appearing" == a.state &&
              "closed" == c.__previousState &&
              c.__create();
          c.__previousState = a.state;
        });
        c.__instance._on("options." + c.__namespace, function () {
          c.__optionsFormat();
        });
        c.__instance._on("reposition." + c.__namespace, function (a) {
          c.__reposition(a.event, a.helper);
        });
      },
      __close: function () {
        this.__instance.content() instanceof m &&
          this.__instance.content().detach();
        this.__instance._$tooltip.remove();
        this.__instance._$tooltip = null;
      },
      __create: function () {
        var a = m(
          '<div class="tooltipster-base tooltipster-sidetip"><div class="tooltipster-box"><div class="tooltipster-content"></div></div><div class="tooltipster-arrow"><div class="tooltipster-arrow-uncropped"><div class="tooltipster-arrow-border"></div><div class="tooltipster-arrow-background"></div></div></div></div>'
        );
        this.__options.arrow ||
          a
            .find(".tooltipster-box")
            .css("margin", 0)
            .end()
            .find(".tooltipster-arrow")
            .hide();
        this.__options.minWidth &&
          a.css("min-width", this.__options.minWidth + "px");
        this.__options.maxWidth &&
          a.css("max-width", this.__options.maxWidth + "px");
        this.__instance._$tooltip = a;
        this.__instance._trigger("created");
      },
      __destroy: function () {
        this.__instance._off("." + self.__namespace);
      },
      __optionsFormat: function () {
        this.__options = this.__instance._optionsExtract(
          "tooltipster.sideTip",
          this.__defaults()
        );
        this.__options.position &&
          (this.__options.side = this.__options.position);
        "object" != typeof this.__options.distance &&
          (this.__options.distance = [this.__options.distance]);
        4 > this.__options.distance.length &&
          (void 0 === this.__options.distance[1] &&
            (this.__options.distance[1] = this.__options.distance[0]),
          void 0 === this.__options.distance[2] &&
            (this.__options.distance[2] = this.__options.distance[0]),
          void 0 === this.__options.distance[3] &&
            (this.__options.distance[3] = this.__options.distance[1]));
        this.__options.distance = {
          top: this.__options.distance[0],
          right: this.__options.distance[1],
          bottom: this.__options.distance[2],
          left: this.__options.distance[3],
        };
        "string" == typeof this.__options.side &&
          ((this.__options.side = [
            this.__options.side,
            { top: "bottom", right: "left", bottom: "top", left: "right" }[
              this.__options.side
            ],
          ]),
          "left" == this.__options.side[0] || "right" == this.__options.side[0]
            ? this.__options.side.push("top", "bottom")
            : this.__options.side.push("right", "left"));
        6 === m.tooltipster._env.IE &&
          !0 !== this.__options.arrow &&
          (this.__options.arrow = !1);
      },
      __reposition: function (a, c) {
        var d,
          f = this,
          h = f.__targetFind(c),
          l = [];
        f.__instance._$tooltip.detach();
        var n = f.__instance._$tooltip.clone(),
          p = m.tooltipster._getRuler(n),
          u = !1;
        (d = f.__instance.option("animation")) &&
          n.removeClass("tooltipster-" + d);
        m.each(["window", "document"], function (d, e) {
          var k = null;
          f.__instance._trigger({
            container: e,
            helper: c,
            satisfied: u,
            takeTest: function (a) {
              k = a;
            },
            results: l,
            type: "positionTest",
          });
          if (
            1 == k ||
            (0 != k && 0 == u && ("window" != e || f.__options.viewportAware))
          )
            for (d = 0; d < f.__options.side.length; d++) {
              var q = { horizontal: 0, vertical: 0 },
                t = f.__options.side[d];
              "top" == t || "bottom" == t
                ? (q.vertical = f.__options.distance[t])
                : (q.horizontal = f.__options.distance[t]);
              f.__sideChange(n, t);
              m.each(["natural", "constrained"], function (d, m) {
                k = null;
                f.__instance._trigger({
                  container: e,
                  event: a,
                  helper: c,
                  mode: m,
                  results: l,
                  satisfied: u,
                  side: t,
                  takeTest: function (a) {
                    k = a;
                  },
                  type: "positionTest",
                });
                if (1 == k || (0 != k && 0 == u)) {
                  d = {
                    container: e,
                    distance: q,
                    fits: null,
                    mode: m,
                    outerSize: null,
                    side: t,
                    size: null,
                    target: h[t],
                    whole: null,
                  };
                  var n = (
                    "natural" == m
                      ? p.free()
                      : p.constrain(
                          c.geo.available[e][t].width - q.horizontal,
                          c.geo.available[e][t].height - q.vertical
                        )
                  ).measure();
                  d.size = n.size;
                  d.outerSize = {
                    height: n.size.height + q.vertical,
                    width: n.size.width + q.horizontal,
                  };
                  d.fits =
                    "natural" == m
                      ? c.geo.available[e][t].width >= d.outerSize.width &&
                        c.geo.available[e][t].height >= d.outerSize.height
                        ? !0
                        : !1
                      : n.fits;
                  "window" == e &&
                    (d.whole = d.fits
                      ? "top" == t || "bottom" == t
                        ? c.geo.origin.windowOffset.right >=
                            f.__options.minIntersection &&
                          c.geo.window.size.width -
                            c.geo.origin.windowOffset.left >=
                            f.__options.minIntersection
                        : c.geo.origin.windowOffset.bottom >=
                            f.__options.minIntersection &&
                          c.geo.window.size.height -
                            c.geo.origin.windowOffset.top >=
                            f.__options.minIntersection
                      : !1);
                  l.push(d);
                  if (d.whole) u = !0;
                  else if (
                    "natural" == d.mode &&
                    (d.fits || d.size.width <= c.geo.available[e][t].width)
                  )
                    return !1;
                }
              });
            }
        });
        f.__instance._trigger({
          edit: function (a) {
            l = a;
          },
          event: a,
          helper: c,
          results: l,
          type: "positionTested",
        });
        l.sort(function (a, c) {
          if (a.whole && !c.whole) return -1;
          if (!a.whole && c.whole) return 1;
          if (a.whole && c.whole) {
            var d = f.__options.side.indexOf(a.side);
            c = f.__options.side.indexOf(c.side);
            return d < c ? -1 : d > c ? 1 : "natural" == a.mode ? -1 : 1;
          }
          return a.fits && !c.fits
            ? -1
            : !a.fits && c.fits
            ? 1
            : a.fits && c.fits
            ? ((d = f.__options.side.indexOf(a.side)),
              (c = f.__options.side.indexOf(c.side)),
              d < c ? -1 : d > c ? 1 : "natural" == a.mode ? -1 : 1)
            : "document" == a.container &&
              "bottom" == a.side &&
              "natural" == a.mode
            ? -1
            : 1;
        });
        var t = l[0];
        t.coord = {};
        switch (t.side) {
          case "left":
          case "right":
            t.coord.top = Math.floor(t.target - t.size.height / 2);
            break;
          case "bottom":
          case "top":
            t.coord.left = Math.floor(t.target - t.size.width / 2);
        }
        switch (t.side) {
          case "left":
            t.coord.left = c.geo.origin.windowOffset.left - t.outerSize.width;
            break;
          case "right":
            t.coord.left =
              c.geo.origin.windowOffset.right + t.distance.horizontal;
            break;
          case "top":
            t.coord.top = c.geo.origin.windowOffset.top - t.outerSize.height;
            break;
          case "bottom":
            t.coord.top =
              c.geo.origin.windowOffset.bottom + t.distance.vertical;
        }
        "window" == t.container
          ? "top" == t.side || "bottom" == t.side
            ? 0 > t.coord.left
              ? (t.coord.left =
                  0 <=
                  c.geo.origin.windowOffset.right -
                    this.__options.minIntersection
                    ? 0
                    : c.geo.origin.windowOffset.right -
                      this.__options.minIntersection -
                      1)
              : t.coord.left > c.geo.window.size.width - t.size.width &&
                (t.coord.left =
                  c.geo.origin.windowOffset.left +
                    this.__options.minIntersection <=
                  c.geo.window.size.width
                    ? c.geo.window.size.width - t.size.width
                    : c.geo.origin.windowOffset.left +
                      this.__options.minIntersection +
                      1 -
                      t.size.width)
            : 0 > t.coord.top
            ? (t.coord.top =
                0 <=
                c.geo.origin.windowOffset.bottom -
                  this.__options.minIntersection
                  ? 0
                  : c.geo.origin.windowOffset.bottom -
                    this.__options.minIntersection -
                    1)
            : t.coord.top > c.geo.window.size.height - t.size.height &&
              (t.coord.top =
                c.geo.origin.windowOffset.top +
                  this.__options.minIntersection <=
                c.geo.window.size.height
                  ? c.geo.window.size.height - t.size.height
                  : c.geo.origin.windowOffset.top +
                    this.__options.minIntersection +
                    1 -
                    t.size.height)
          : (t.coord.left > c.geo.window.size.width - t.size.width &&
              (t.coord.left = c.geo.window.size.width - t.size.width),
            0 > t.coord.left && (t.coord.left = 0));
        f.__sideChange(n, t.side);
        c.tooltipClone = n[0];
        c.tooltipParent = f.__instance.option("parent").parent[0];
        c.mode = t.mode;
        c.whole = t.whole;
        c.origin = f.__instance._$origin[0];
        c.tooltip = f.__instance._$tooltip[0];
        delete t.container;
        delete t.fits;
        delete t.mode;
        delete t.outerSize;
        delete t.whole;
        t.distance = t.distance.horizontal || t.distance.vertical;
        d = m.extend(!0, {}, t);
        f.__instance._trigger({
          edit: function (a) {
            t = a;
          },
          event: a,
          helper: c,
          position: d,
          type: "position",
        });
        f.__options.functionPosition &&
          (d = f.__options.functionPosition.call(f, f.__instance, c, d)) &&
          (t = d);
        p.destroy();
        if ("top" == t.side || "bottom" == t.side) {
          d = "left";
          var F = t.target - t.coord.left,
            E = t.size.width - this.__options.minIntersection;
        } else
          (d = "top"),
            (F = t.target - t.coord.top),
            (E = t.size.height - this.__options.minIntersection);
        F < this.__options.minIntersection
          ? (F = this.__options.minIntersection)
          : F > E && (F = E);
        E = c.geo.origin.fixedLineage
          ? c.geo.origin.windowOffset
          : {
              left: c.geo.origin.windowOffset.left + c.geo.window.scroll.left,
              top: c.geo.origin.windowOffset.top + c.geo.window.scroll.top,
            };
        t.coord = {
          left: E.left + (t.coord.left - c.geo.origin.windowOffset.left),
          top: E.top + (t.coord.top - c.geo.origin.windowOffset.top),
        };
        f.__sideChange(f.__instance._$tooltip, t.side);
        c.geo.origin.fixedLineage
          ? f.__instance._$tooltip.css("position", "fixed")
          : f.__instance._$tooltip.css("position", "");
        f.__instance._$tooltip
          .css({
            left: t.coord.left,
            top: t.coord.top,
            height: t.size.height,
            width: t.size.width,
          })
          .find(".tooltipster-arrow")
          .css({ left: "", top: "" })
          .css(d, F);
        f.__instance._$tooltip.appendTo(f.__instance.option("parent"));
        f.__instance._trigger({ type: "repositioned", event: a, position: t });
      },
      __sideChange: function (a, c) {
        a.removeClass("tooltipster-bottom")
          .removeClass("tooltipster-left")
          .removeClass("tooltipster-right")
          .removeClass("tooltipster-top")
          .addClass("tooltipster-" + c);
      },
      __targetFind: function (a) {
        var c = {},
          d = this.__instance._$origin[0].getClientRects();
        1 < d.length &&
          1 == this.__instance._$origin.css("opacity") &&
          (this.__instance._$origin.css("opacity", 0.99),
          (d = this.__instance._$origin[0].getClientRects()),
          this.__instance._$origin.css("opacity", 1));
        2 > d.length
          ? ((c.top = Math.floor(
              a.geo.origin.windowOffset.left + a.geo.origin.size.width / 2
            )),
            (c.bottom = c.top),
            (c.left = Math.floor(
              a.geo.origin.windowOffset.top + a.geo.origin.size.height / 2
            )),
            (c.right = c.left))
          : ((a = d[0]),
            (c.top = Math.floor(a.left + (a.right - a.left) / 2)),
            (a = 2 < d.length ? d[Math.ceil(d.length / 2) - 1] : d[0]),
            (c.right = Math.floor(a.top + (a.bottom - a.top) / 2)),
            (a = d[d.length - 1]),
            (c.bottom = Math.floor(a.left + (a.right - a.left) / 2)),
            (a =
              2 < d.length
                ? d[Math.ceil((d.length + 1) / 2) - 1]
                : d[d.length - 1]),
            (c.left = Math.floor(a.top + (a.bottom - a.top) / 2)));
        return c;
      },
    },
  });
  return m;
});
var MiniLazyload = (function () {
  function m() {
    var u = this,
      n = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
      t = 1 < arguments.length ? arguments[1] : void 0,
      h = 2 < arguments.length ? arguments[2] : void 0;
    this.update = function () {
      u.enabled && u.loadImages(function () {}, !1);
    };
    this.allElements = function () {
      return [].slice.call(document.querySelectorAll(u.selector));
    };
    this.loadImages = function () {
      var a =
          0 < arguments.length && void 0 !== arguments[0]
            ? arguments[0]
            : function () {},
        c = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
      u.allElements().forEach(function (e) {
        d(e);
        a(e);
        !window.IntersectionObserver || c ? l(e) : u.newObserver().observe(e);
      });
    };
    // this.newObserver = function () {
    //   return new IntersectionObserver(function (a, c) {
    //     a.forEach(function (a) {
    //       var d = a.target;
    //       0 < a.intersectionRatio && (c.unobserve(d), l(d, !0));
    //     });
    //   }, u.options);
    // };
    // var l = function (a, c) {
    //     var d = a.dataset,
    //       h = d.src,
    //       l = d.srcset;
    //     d = d.bg;
    //     h && (a.src = h);
    //     l && (a.srcset = l);
    //     (c || !window.IntersectionObserver) &&
    //       d &&
    //       (a.style.backgroundImage = "url(".concat(d, ")"));
    //     f(a.parentElement);
    //   },
    (f = function (a) {
      window.HTMLPictureElement &&
        a instanceof HTMLPictureElement &&
        [].slice
          .call(a.querySelectorAll("[data-srcset]"))
          .forEach(function (a) {
            a.srcset = a.dataset.srcset;
          });
    }),
      (d = function (a) {
        function c() {
          return a.classList.add("loaded");
        }
        var d = u.options.placeholder;
        a.addEventListener("error", function () {
          d && -1 === a.className.indexOf("error") && (a.src = d);
          a.classList.add("error");
          a.removeEventListener("load", c);
        });
        a.addEventListener("load", c);
      });
    this.selector = t || "[loading=lazy]";
    this.options = n;
    this.enabled =
      !HTMLImageElement.prototype.hasOwnProperty("loading") ||
      h === m.IGNORE_NATIVE_LAZYLOAD;
    this.update();
  }
  return (m.IGNORE_NATIVE_LAZYLOAD = !0), m;
})();
